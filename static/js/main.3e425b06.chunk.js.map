{"version":3,"sources":["hooks/useObservable.ts","services/FileStore.ts","components/FileDropZone.tsx","services/DexcomClarityCsvParser.ts","services/FreestyleLibreCsvParser.ts","services/MetricsStore.ts","components/ChartZoomable.tsx","components/IconButton.tsx","components/transitions/FadeIn.tsx","components/transitions/SlideFromRight.tsx","components/Drawer.tsx","components/InputText.tsx","components/StalkingButtonGroup.tsx","components/CaseStudies.tsx","components/DailyCharts.tsx","components/ReportSelector.tsx","App.tsx","reportWebVitals.ts","setupVendorLibraries.ts","index.tsx"],"names":["useObservable","observableGenerator","deps","initialValue","React","useState","value","setValue","cb","useCallback","useEffect","o","undefined","sub","subscribe","error","err","console","next","unsubscribe","FileStoreContext","createContext","FileStore","files$$","BehaviorSubject","files$","this","asObservable","type","pipe","map","fs","filter","f","fileList","files","unsupported","i","fileListItem","item","preProcessFileData","name","arrayBuffer","file","push","length","url","fetch","response","contentType","headers","get","split","slice","_","chain","concat","uniqBy","readData","resolveFileType","buffer","buf","data","base64","fromByteArray","Uint8Array","size","byteLength","startsWith","endsWith","Container","styled","div","FileDropZone","children","fileService","useContext","fileUploadEl","setFileUploadEl","handleSelectFiles","a","preProcessFiles","preProcessed","acceptFiles","onClick","click","onDragOver","ev","preventDefault","stopPropagation","onDrop","dataTransfer","style","cursor","multiple","onChange","target","ref","el","display","isDexcomClarityCsvFile","content","parseDexcomClarityCsvFile","timezone","validateRecords","parseCsv","records","locale","resolveLocale","record","timestamp","parseValue","Date","toISOString","Promise","accept","reject","csvParse","columns","relaxColumnCount","rawRecords","timestampFormatPrefix","timestampHeader","Object","keys","find","k","Error","timestampFormat","r","moment","tz","valueOf","parseFloat","isNaN","row","isFreestyleLibreCsvFile","parseFreestyleLibreCsvFile","rawTime","parseTime","join","str","format","MetricsStoreContext","MetricsStore","fileStore","customerDataTimeZone$$","customerDataLocale$$","locale$","bloodGlucose$","combineLatest","filesByType$","concatMap","customerDataTimeZone","of","resolve","csvs","TextDecoder","decode","toByteArray","replaceAll","all","csv","parseCsvFile","timeValuesArr","timeValues","reduce","acc","m","entries","timeStr","time","getTime","sort","b","fn","metricValuesToHighchartsPairs","ms","ChartZoomable","id","markers","onChangeRange","onSelectTime","metricsStore","overallBloodGlucose","highChartsOptions","useMemo","rangeChangeTimeout","chart","animation","events","event","xAxis","toValue","chartX","height","margin","fontFamily","colors","credits","enabled","legend","plotOptions","series","point","x","gapSize","gapUnit","marker","title","text","dateTimeLabelFormats","day","week","setExtremes","clearTimeout","setTimeout","min","max","labels","rotation","ordinal","plotLines","width","yAxis","plotBands","color","from","to","tickInterval","createHighchartsOptions","constructorType","highcharts","HighchartsStock","options","Button","button","IconButton","path","props","Mask","active","containerRef","useRef","CSSTransition","addEndListener","in","nodeRef","timeout","Box","Header","Title","h1","Body","Drawer","onClose","isScrolling","setIsScrolling","document","body","overflow","className","mdiClose","onScroll","currentTarget","scrollTop","InputText","input","colorDefault","colorHover","StalkingButtonContainer","buttonSizePx","StalkingButtonGroup","StalkingButton","SettingsPanel","SettingsSection","SettingsSectionTitle","h2","SettingsCaseStudyList","ul","SettingsCaseStudyListItem","li","SettingsCaseStudyListHeader","SettingsCaseStudyColorPreview","SettingsCaseStudyColorEdit","SettingsGlucoseInput","CaseStudyChartsContainer","CaseStudyChartsHeading","CaseStudyChartsPageGroup","CaseStudyChartContainer","CaseStudyChartHeading","CaseStudyChartSubHeading","h3","CaseStudyChart","CaseStudies","onBack","unitConfig","fromMmolL","n","label","Math","round","showSettings","setShowSettings","hours","setHours","setEntries","overrideYMin","setOverrideYMin","overrideYMax","setOverrideYMax","charts","setCharts","colorEditIndex","setColorEditIndex","colorEditRef","createRef","current","handle","contains","addEventListener","removeEventListener","durationMillis","yMinValue","yMaxValue","dataByChartId","ids","e","t","v","comparisonChart","createHighchartsOptionsForCaseStudy","entry","formatDateTimeShort","ceil","floor","studyCharts","subTitle","formatDateTimeLong","mdiChevronLeft","mdiCog","Highcharts","es","sortBy","i0","backgroundColor","disableAlpha","onChangeComplete","i1","hex","onFocus","trim","onBlur","placeholder","mdiTrashCanOutline","toString","nextHours","xMinMax","yMinMax","includeLabels","overallGlucose","timeOffset","baselineValue","values","flatMap","p","chartAvg","sum","toFixed","curr","chartMaxTime","chartMaxValue","baselineTime","beforeTime","beforeValue","afterTime","hasLegend","render","ctx","_qhLabels","forEach","l","destroy","chartPaddingTop","attrs","fill","zIndex","maxLabel","renderer","add","attr","y","maxValue","labelX","avgLabel","avgValue","deltaLabelAndValue","radius","compact","dashStyle","millis","SettingsSectionSubTitle","SettingsNumberInput","DailyChartsContainer","DailyChartsHeading","DateRangePickerContainer","DailyChartsPageGroup","DailyChartContainer","DailyChartHeading","DailyChart","DailyCharts","divProps","dayFilter","setDayFilter","bloodGlucose","dailyBloodGlucose","groupBy","toPairs","trendMinMaxTime","setTrendMinMaxTime","trendFastingMinutesOfDay","setTrendFastingMinutesOfDay","trendFastingMinutesOfDayLabel","startOf","trendFastingGlucose","now","mMin","mMax","start","clone","endOf","isSameOrAfter","isSameOrBefore","fastingTime","fastingTimeMillis","toDate","low","subtract","high","fastingGlucose","abs","trendHighchartsOptions","fasting","onRangeChange","exporting","buttons","contextButton","dateFormat","zones","timeLabel","createHighchartsOptionsTrend","dailyMinMaxDay","nDays","dailyHighchartsOptions","chunk","startDate","endDate","dayMoment","yMax","d","hidden","createHighchartsOptionsForDay","pageGroup","Array","end","defaultValue","minDate","maxDate","moveRangeOnFirstSelection","range","selection","ranges","key","showPreview","marginLeft","dayMax","dayAvg","dayMin","lower","upper","timeExposed","calculateTimeInRange","timeInRange","effectiveDuration","timeInRangePct","valueX","duration","teLabel","teValue","Number","MIN_VALUE","MAX_VALUE","currTime","currValue","prevTime","prevValue","currValueLimited","prevValueLimited","areaOfData","areaInRange","Fullscreen","Option","OptionTitle","ReportSelector","selectedReport","setSelectedReport","mdiCalendarRangeOutline","mdiClipboardTextSearchOutline","GlobalStyle","createGlobalStyle","reset","App","dataUrl","csvFiles","preProcessUrl","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","brokenAxis","exportData","URLSearchParams","window","location","search","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3e425b06.chunk.js","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React from 'react';\nimport { Observable } from 'rxjs';\n\nexport type ObserverFunction<T> = () => Observable<T> | undefined;\n\n/** @see [useObservable(observableGenerator, deps, initialvalue?)] */\nexport function useObservable<T>(\n  observableGenerator: ObserverFunction<T>,\n  deps: React.DependencyList,\n): [T | undefined];\n\n/** @see [useObservable(observableGenerator, deps, initialvalue?)] */\nexport function useObservable<T>(\n  observableGenerator: ObserverFunction<T>,\n  deps: React.DependencyList,\n  initialValue: T,\n): [T];\n\n/**\n * A custom hook that exposes an observable as its latest emitted value.\n *\n * @param observableGenerator A factory function for the observable\n * @param deps The dependency array. When any of these dependencies changes, the observable will\n *   be regenerated.\n * @param initialValue The initial value of the observable value, before it emits its first value.\n *   When the dependency array changes, the value will not revert to the initial value.\n * @returns\n */\nexport function useObservable<T>(\n  observableGenerator: ObserverFunction<T>,\n  deps: React.DependencyList,\n  initialValue?: T,\n): [typeof initialValue] {\n  const [value, setValue] = React.useState<T | typeof initialValue>(\n    initialValue,\n  );\n  const cb = React.useCallback(observableGenerator, deps);\n\n  /** When the callback changes, reinvoke it and subscribe to the new observable. */\n  React.useEffect(() => {\n    const o = cb();\n    if (o !== undefined) {\n      // eslint-disable-next-line deprecation/deprecation\n      const sub = o.subscribe({\n        // eslint-disable-next-line no-console\n        error: (err) => console.error(err),\n        next: setValue,\n      });\n      return () => sub.unsubscribe();\n    }\n  }, [cb]);\n\n  return [value];\n}\n","import base64 from 'base64-js';\nimport _ from 'lodash';\nimport React from 'react';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport type FileType = 'image' | 'csv';\n\nexport type File = {\n  contentType: string;\n  data: string;\n  name: string;\n  size: number;\n  type: FileType;\n};\n\nexport type ProcessedFiles = {\n  files: File[];\n  unsupported: string[];\n};\n\nexport const FileStoreContext = React.createContext<FileStore>(\n  undefined as unknown as FileStore,\n);\n\nexport class FileStore {\n  private readonly files$$ = new BehaviorSubject<File[]>([]);\n  public readonly files$ = this.files$$.asObservable();\n\n  public filesByType$(type: FileType): Observable<File[]> {\n    return this.files$.pipe(map((fs) => fs.filter((f) => f.type === type)));\n  }\n\n  public async preProcessFiles(fileList: FileList): Promise<ProcessedFiles> {\n    const files: File[] = [];\n    const unsupported: string[] = [];\n\n    for (let i = 0; i < fileList.length; i++) {\n      const fileListItem = fileList.item(i);\n      if (fileListItem !== null) {\n        const file = await this.preProcessFileData(\n          fileListItem.name,\n          fileListItem.type,\n          () => fileListItem.arrayBuffer(),\n        );\n\n        if (file !== undefined) {\n          files.push(file);\n        } else {\n          unsupported.push(fileListItem.name);\n        }\n      }\n    }\n    return { files, unsupported };\n  }\n\n  public async preProcessUrl(url: string): Promise<ProcessedFiles> {\n    const response = await fetch(url);\n    const contentType = response.headers.get('content-type');\n    const name = url.split('?')[0].split('/').slice(-1)[0];\n    const file = await this.preProcessFileData(\n      name,\n      contentType === null ? 'application/octet-stream' : contentType,\n      () => response.arrayBuffer(),\n    );\n    if (file !== undefined) {\n      return { files: [file], unsupported: [] };\n    } else {\n      return { files: [], unsupported: [url] };\n    }\n  }\n\n  public async acceptFiles(files: File[]): Promise<void> {\n    this.files$$.next(\n      _.chain(this.files$$.value).concat(files).uniqBy('data').value(),\n    );\n  }\n\n  private async preProcessFileData(\n    name: string,\n    contentType: string,\n    readData: () => Promise<ArrayBuffer>,\n  ): Promise<File | undefined> {\n    const type = resolveFileType(name, contentType);\n    if (type !== undefined) {\n      const buffer = await readData();\n      const data = base64EncodeBuffer(buffer);\n      const size = buffer.byteLength;\n      return { contentType, data, name, size, type };\n    } else {\n      return undefined;\n    }\n  }\n}\n\nfunction base64EncodeBuffer(buf: ArrayBuffer): string {\n  return base64.fromByteArray(new Uint8Array(buf));\n}\n\nfunction resolveFileType(\n  name: string,\n  contentType: string,\n): FileType | undefined {\n  if (contentType.startsWith('text/csv')) {\n    return 'csv';\n  } else if (contentType.startsWith('image/')) {\n    return 'image';\n  } else if (contentType.startsWith('text/') && name.endsWith('csv')) {\n    return 'csv';\n  } else {\n    return undefined;\n  }\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { useObservable } from '../hooks/useObservable';\nimport { FileStoreContext } from '../services/FileStore';\n\nconst Container = styled.div`\n  min-height: 100%;\n  min-width: 100%;\n  position: relative;\n`;\n\nexport const FileDropZone: React.FC = ({ children }) => {\n  const fileService = React.useContext(FileStoreContext);\n  const [files] = useObservable(() => fileService.files$, [fileService], []);\n  const [fileUploadEl, setFileUploadEl] = React.useState<HTMLInputElement>();\n  const handleSelectFiles = React.useCallback(\n    async (files: FileList) => {\n      const preProcessed = await fileService.preProcessFiles(files);\n      await fileService.acceptFiles(preProcessed.files);\n    },\n    [fileService],\n  );\n\n  return (\n    <Container\n      onClick={() =>\n        files.length === 0 && fileUploadEl !== undefined\n          ? fileUploadEl.click()\n          : undefined\n      }\n      onDragOver={(ev) => {\n        ev.preventDefault();\n        ev.stopPropagation();\n      }}\n      onDrop={(ev) => {\n        ev.preventDefault();\n        ev.stopPropagation();\n        void handleSelectFiles(ev.dataTransfer.files);\n      }}\n      style={{\n        cursor: files.length === 0 ? 'pointer' : undefined,\n      }}\n    >\n      <input\n        multiple\n        onChange={(ev) => {\n          const files = ev.target.files;\n          if (files !== null && files.length > 0) {\n            void handleSelectFiles(files);\n          }\n        }}\n        ref={(el) => (el !== null ? setFileUploadEl(el) : undefined)}\n        style={{ display: 'none' }}\n        type=\"file\"\n      />\n      {children}\n    </Container>\n  );\n};\n","import csvParse from 'csv-parse';\nimport moment from 'moment-timezone';\n\nimport { CsvLocale, ParsedMetrics } from './ParsedMetrics';\n\ntype CsvRecord = {\n  'Event Type': string;\n  'Glucose Value (mg/dL)'?: string;\n  'Glucose Value (mmol/L)'?: string;\n};\n\nexport function isDexcomClarityCsvFile(content: string): boolean {\n  return content.startsWith('Index,');\n}\n\nexport async function parseDexcomClarityCsvFile(\n  content: string,\n  timezone: string,\n): Promise<ParsedMetrics> {\n  const records = validateRecords(await parseCsv(content), timezone);\n  const locale = resolveLocale(records[0]?.record);\n  const data: Record<string, number> = {};\n  for (const { timestamp, record } of records) {\n    const value = parseValue(locale, record);\n    if (value !== undefined) {\n      data[new Date(timestamp).toISOString()] = value;\n    }\n  }\n  return { data, locale };\n}\n\nasync function parseCsv(content: string): Promise<Record<string, string>[]> {\n  return await new Promise((accept, reject) => {\n    csvParse(\n      content,\n      { columns: true, relaxColumnCount: true },\n      (err, records: Record<string, string>[]) =>\n        err !== undefined ? reject(err) : accept(records),\n    );\n  });\n}\n\nfunction validateRecords(\n  rawRecords: Record<string, string>[],\n  timezone: string,\n): { timestamp: number; record: CsvRecord }[] {\n  const timestampFormatPrefix = 'Timestamp (';\n  const timestampHeader = Object.keys(rawRecords[0]).find((k) =>\n    k.startsWith(timestampFormatPrefix),\n  );\n  if (timestampHeader === undefined) {\n    throw new Error('Could not find suitable timestamp header');\n  }\n  const timestampFormat = timestampHeader.slice(\n    timestampFormatPrefix.length,\n    -1,\n  );\n  return rawRecords\n    .map((r) => ({\n      record: r as unknown as CsvRecord,\n      timestamp: moment\n        .tz(r[timestampHeader], timestampFormat, timezone)\n        .valueOf(),\n    }))\n    .filter(({ record }) => record['Event Type'] === 'EGV');\n}\n\nfunction parseValue(locale: CsvLocale, record: CsvRecord): number | undefined {\n  const value = (() => {\n    switch (locale) {\n      case 'ca':\n        return parseFloat(record['Glucose Value (mmol/L)'] ?? '');\n      case 'us':\n        return parseFloat(record['Glucose Value (mg/dL)'] ?? '');\n    }\n  })();\n\n  return !isNaN(value) ? value : undefined;\n}\n\nfunction resolveLocale(row: CsvRecord | undefined): CsvLocale {\n  if (row !== undefined && 'Glucose Value (mg/dL)' in row) {\n    return 'us';\n  } else {\n    return 'ca';\n  }\n}\n","import csvParse from 'csv-parse';\nimport moment from 'moment-timezone';\n\nimport { CsvLocale, ParsedMetrics } from './ParsedMetrics';\n\ntype CsvRecord = {\n  'Serial Number': string;\n  'Device Timestamp': string;\n  'Record Type': string;\n  'Historic Glucose mg/dL'?: string;\n  'Historic Glucose mmol/L'?: string;\n  'Scan Glucose mg/dL'?: string;\n  'Scan Glucose mmol/L'?: string;\n};\n\nexport function isFreestyleLibreCsvFile(content: string): boolean {\n  return content.startsWith('Glucose Data,');\n}\n\nexport async function parseFreestyleLibreCsvFile(\n  content: string,\n  timezone: string,\n): Promise<ParsedMetrics> {\n  const records = await parseCsv(content);\n  const locale = resolveLocale(records);\n  const data: Record<string, number> = {};\n  for (const record of records) {\n    const value = parseValue(locale, record);\n    if (value !== undefined) {\n      const rawTime = record['Device Timestamp'];\n      data[parseTime(locale, rawTime, timezone)] = value;\n    }\n  }\n\n  return { data, locale };\n}\n\nasync function parseCsv(content: string): Promise<CsvRecord[]> {\n  return await new Promise((accept, reject) => {\n    csvParse(\n      content.split('\\n').slice(1).join('\\n'),\n      { columns: true, relaxColumnCount: true },\n      (err, records: CsvRecord[]) =>\n        err !== undefined ? reject(err) : accept(records),\n    );\n  });\n}\n\n/** Parses the freestyle libre date/time format into ISO time UTC string. */\nfunction parseTime(locale: CsvLocale, str: string, tz: string): string {\n  const format = (() => {\n    switch (locale) {\n      case 'ca':\n        return 'DD-MM-YYYY HH:mm';\n      case 'us':\n        return 'MM-DD-YYYY hh:mm A';\n    }\n  })();\n  return moment.tz(str, format, tz).toISOString();\n}\n\nfunction parseValue(locale: CsvLocale, record: CsvRecord): number | undefined {\n  const value = (() => {\n    switch (locale) {\n      case 'ca':\n        return record['Record Type'] === '0'\n          ? parseFloat(record['Historic Glucose mmol/L'] ?? '')\n          : parseFloat(record['Scan Glucose mmol/L'] ?? '');\n      case 'us':\n        return record['Record Type'] === '0'\n          ? parseFloat(record['Historic Glucose mg/dL'] ?? '')\n          : parseFloat(record['Scan Glucose mg/dL'] ?? '');\n    }\n  })();\n\n  return !isNaN(value) ? value : undefined;\n}\n\nfunction resolveLocale([row]: CsvRecord[]): CsvLocale {\n  if (row !== undefined && 'Historic Glucose mg/dL' in row) {\n    return 'us';\n  } else {\n    return 'ca';\n  }\n}\n","import base64 from 'base64-js';\nimport React from 'react';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport { concatMap } from 'rxjs/operators';\n\nimport {\n  isDexcomClarityCsvFile,\n  parseDexcomClarityCsvFile,\n} from './DexcomClarityCsvParser';\nimport { FileStore } from './FileStore';\nimport {\n  isFreestyleLibreCsvFile,\n  parseFreestyleLibreCsvFile,\n} from './FreestyleLibreCsvParser';\nimport { CsvLocale, MetricValue, ParsedMetrics } from './ParsedMetrics';\n\nexport type UnitConfig = {\n  fromMmolL: (mmolL: number) => number;\n  label: string;\n};\n\nexport const MetricsStoreContext = React.createContext<MetricsStore>(\n  undefined as unknown as MetricsStore,\n);\n\nexport class MetricsStore {\n  public static metricValuesToHighchartsPairs = <T>(\n    ms: MetricValue<T>[] | undefined,\n  ): [number, T][] | undefined => {\n    return ms !== undefined\n      ? ms.map(({ time, value }) => [time, value])\n      : undefined;\n  };\n\n  private customerDataTimeZone$$ = new BehaviorSubject('America/Toronto');\n  private customerDataLocale$$ = new BehaviorSubject<CsvLocale | undefined>(\n    undefined,\n  );\n\n  constructor(private readonly fileStore: FileStore) {}\n\n  public readonly locale$ = this.customerDataLocale$$.asObservable();\n\n  /** Observe changes to the blood glucose metrics. */\n  public readonly bloodGlucose$: Observable<MetricValue<number>[] | undefined> =\n    combineLatest([\n      this.fileStore.filesByType$('csv'),\n      this.customerDataTimeZone$$,\n    ])\n      .pipe(\n        concatMap(([files, customerDataTimeZone]) =>\n          of<() => Promise<MetricValue<number>[] | undefined>>(\n            // Whenever we get a new set of files, first emit undefined to signal that we should\n            // enter a loading / \"stale\" state for all consumers\n            () => Promise.resolve(undefined),\n            async () => {\n              const csvs = files.map((file) => {\n                return new TextDecoder('utf-8')\n                  .decode(base64.toByteArray(file.data))\n                  .replaceAll('\\r\\n', '\\n');\n              });\n\n              const timeValuesArr: ParsedMetrics[] = await Promise.all(\n                csvs.map((csv) => parseCsvFile(csv, customerDataTimeZone)),\n              );\n              this.customerDataLocale$$.next(timeValuesArr[0]?.locale);\n\n              const timeValues = timeValuesArr.reduce(\n                (acc, m) => ({ ...acc, ...m.data }),\n                {} as Record<string, number>,\n              );\n\n              return Object.entries(timeValues)\n                .map(([timeStr, value]) => ({\n                  time: new Date(timeStr).getTime(),\n                  value,\n                }))\n                .sort((a, b) => a.time - b.time);\n            },\n          ),\n        ),\n      )\n      .pipe(concatMap((fn) => fn()));\n}\n\nasync function parseCsvFile(\n  content: string,\n  timezone: string,\n): Promise<ParsedMetrics> {\n  if (isFreestyleLibreCsvFile(content)) {\n    return await parseFreestyleLibreCsvFile(content, timezone);\n  } else if (isDexcomClarityCsvFile(content)) {\n    return await parseDexcomClarityCsvFile(content, timezone);\n  } else {\n    throw new Error('Unsupported file format.');\n  }\n}\n","import * as Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport * as HighchartsStock from 'highcharts/highstock';\nimport moment from 'moment-timezone';\nimport React from 'react';\nimport { map } from 'rxjs/operators';\n\nimport { useObservable } from '../hooks/useObservable';\nimport { MetricsStore, MetricsStoreContext } from '../services/MetricsStore';\n\nexport type ChartZoomablePropsMarker = {\n  color: string;\n  value: number;\n};\n\nexport type ChartZoomableProps = {\n  id?: string;\n  markers?: ChartZoomablePropsMarker[];\n  onChangeRange?: (start: number, end: number) => void;\n  onSelectTime?: (time: number) => void;\n  timezone: string;\n};\n\nexport const ChartZoomable: React.FC<ChartZoomableProps> = ({\n  id,\n  markers = [],\n  onChangeRange = () => undefined,\n  onSelectTime = () => undefined,\n  timezone,\n}) => {\n  const metricsStore = React.useContext(MetricsStoreContext);\n  const [overallBloodGlucose] = useObservable(\n    () =>\n      metricsStore.bloodGlucose$.pipe(\n        map(MetricsStore.metricValuesToHighchartsPairs),\n      ),\n    [metricsStore],\n  );\n  const highChartsOptions = React.useMemo(\n    () =>\n      overallBloodGlucose !== undefined\n        ? createHighchartsOptions(\n            timezone,\n            overallBloodGlucose,\n            markers,\n            onChangeRange,\n            onSelectTime,\n          )\n        : undefined,\n    [markers, onChangeRange, onSelectTime, overallBloodGlucose, timezone],\n  );\n\n  return (\n    <>\n      {highChartsOptions !== undefined ? (\n        <HighchartsReact\n          id={id}\n          constructorType=\"stockChart\"\n          highcharts={HighchartsStock}\n          options={highChartsOptions}\n        />\n      ) : undefined}\n    </>\n  );\n};\n\nfunction createHighchartsOptions(\n  timezone: string,\n  data: [number, number][],\n  markers: ChartZoomablePropsMarker[],\n  onChangeRange: (start: number, end: number) => void = () => undefined,\n  onSelectTime: (time: number) => void = () => undefined,\n): Highcharts.Options {\n  let rangeChangeTimeout: NodeJS.Timeout | undefined = undefined;\n  return {\n    chart: {\n      animation: false,\n      events: {\n        click: function (event) {\n          onSelectTime(this.xAxis[0].toValue(event.chartX));\n        },\n      },\n      height: 350,\n      margin: [15, 0, 60, 40],\n      style: {\n        fontFamily: 'Poppins',\n      },\n      type: 'spline',\n    },\n    colors: ['rgba(255, 102, 102, 1)'],\n    credits: {\n      enabled: false,\n    },\n    legend: {\n      enabled: false,\n    },\n    plotOptions: {\n      series: {\n        events: {\n          click: (event) => onSelectTime(event.point.x),\n        },\n        gapSize: 30 * 60 * 1000,\n        gapUnit: 'value',\n        marker: {\n          enabled: false,\n        },\n      },\n    },\n    series: [\n      {\n        data,\n        name: 'mmol/L',\n        type: 'spline',\n      },\n    ],\n    time: {\n      moment,\n      timezone,\n    },\n    title: {\n      text: '',\n    },\n    xAxis: {\n      dateTimeLabelFormats: {\n        day: \"%e. %b '%y\",\n        week: \"%e. %b '%y\",\n      },\n      events: {\n        setExtremes: (ev) => {\n          if (onChangeRange !== undefined) {\n            if (rangeChangeTimeout !== undefined) {\n              clearTimeout(rangeChangeTimeout);\n            }\n            rangeChangeTimeout = setTimeout(\n              () => onChangeRange(ev.min, ev.max),\n              500,\n            );\n          }\n        },\n      },\n      labels: {\n        rotation: -45,\n      },\n      ordinal: false,\n      plotLines: markers.map((m) => ({\n        width: 2,\n        ...m,\n      })),\n      type: 'datetime',\n    },\n    yAxis: {\n      plotBands: [\n        {\n          color: 'rgba(87, 220, 140, 0.2)',\n          from: 4.1,\n          to: 6,\n        },\n      ],\n      tickInterval: 0.5,\n      title: {\n        text: '',\n      },\n    },\n  };\n}\n","import Icon from '@mdi/react';\nimport styled from 'styled-components';\n\nexport type IconButtonProps = React.HTMLAttributes<HTMLButtonElement> & {\n  path: string;\n};\n\nconst Button = styled.button`\n  background: none;\n  border: solid 1px rgba(255, 255, 255, 0);\n  border-radius: 5px;\n  cursor: pointer;\n  display: inline-block;\n  height: 50px;\n  width: 50px;\n\n  &:hover,\n  &:focus {\n    border: solid 1px #eee;\n  }\n`;\n\nexport const IconButton: React.FC<IconButtonProps> = ({ path, ...props }) => {\n  return (\n    <Button {...props}>\n      <Icon path={path} />\n    </Button>\n  );\n};\n","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport styled from 'styled-components';\n\nexport type FadeInProps = React.HTMLAttributes<HTMLDivElement> & {\n  active: boolean;\n};\n\nconst Container = styled.div`\n  display: none;\n  transition: opacity 250ms ease-in;\n\n  &.enter,\n  &.enter-done,\n  &.exit {\n    display: block;\n  }\n\n  &.enter {\n    opacity: 0;\n  }\n  &.enter.enter-active {\n    opacity: 1;\n  }\n\n  &.exit {\n    opacity: 1;\n  }\n  &.exit.exit-active {\n    opacity: 0;\n  }\n`;\n\nexport const FadeIn: React.FC<FadeInProps> = ({\n  active,\n  children,\n  ...props\n}) => {\n  const containerRef = React.useRef(null);\n  return (\n    <CSSTransition\n      addEndListener={() => undefined}\n      in={active}\n      nodeRef={containerRef}\n      timeout={250}\n    >\n      <Container {...props} ref={containerRef}>\n        {children}\n      </Container>\n    </CSSTransition>\n  );\n};\n","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport styled from 'styled-components';\n\nexport type SlideFromRightProps = React.HTMLAttributes<HTMLDivElement> & {\n  active: boolean;\n};\n\nconst Container = styled.div`\n  transform: translateX(100%);\n  transition: transform 250ms ease-in;\n\n  &.enter {\n    transform: translateX(100%);\n  }\n\n  &.enter.enter-active,\n  &.enter-done {\n    transform: translateX(0);\n  }\n\n  &.exit {\n    transform: translateX(0);\n  }\n\n  &.exit.exit-active {\n    transform: translateX(100%);\n  }\n`;\n\nexport const SlideFromRight: React.FC<SlideFromRightProps> = ({\n  active,\n  children,\n  ...props\n}) => {\n  const containerRef = React.useRef(null);\n  return (\n    <CSSTransition\n      addEndListener={() => undefined}\n      in={active}\n      nodeRef={containerRef}\n      timeout={250}\n    >\n      <Container {...props} ref={containerRef}>\n        {children}\n      </Container>\n    </CSSTransition>\n  );\n};\n","import { mdiClose } from '@mdi/js';\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport { IconButton } from './IconButton';\nimport { FadeIn } from './transitions/FadeIn';\nimport { SlideFromRight } from './transitions/SlideFromRight';\n\nconst Mask = styled(FadeIn)`\n  background-color: rgba(0, 0, 0, 0.4);\n  bottom: 0;\n  left: 0;\n  position: fixed;\n  right: 0;\n  top: 0;\n  z-index: 1000;\n`;\n\nconst Container = styled(SlideFromRight)`\n  background-color: #fff;\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  overflow-x: hidden;\n  position: fixed;\n  right: 0;\n  top: 0;\n  width: auto;\n  z-index: 1000;\n\n  &.enter,\n  &.enter-done,\n  &.exit {\n    box-shadow: -3px 0px 10px 1px rgba(0, 0, 0, 0.5);\n  }\n`;\n\nconst Box = styled.div`\n  padding: 20px;\n`;\n\nconst Header = styled(Box)`\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n  z-index: 1;\n\n  &.scrolling {\n    box-shadow: 0px 3px 10px 1px rgba(0, 0, 0, 0.5);\n  }\n`;\n\nconst Title = styled.h1`\n  flex: 1;\n  font-size: 24px;\n  font-weight: 400;\n  white-space: nowrap;\n`;\n\nconst Body = styled(Box)`\n  flex: 1;\n  overflow-y: auto;\n`;\n\nexport type DrawerProps = React.HTMLAttributes<HTMLDivElement> & {\n  active: boolean;\n  onClose?: () => void;\n  title?: string;\n};\n\nexport const Drawer: React.FC<DrawerProps> = ({\n  active,\n  children,\n  onClose,\n  title,\n  ...props\n}) => {\n  const [isScrolling, setIsScrolling] = React.useState(false);\n\n  React.useEffect(() => {\n    if (active) {\n      document.body.style.overflow = 'hidden';\n    } else {\n      document.body.style.overflow = 'auto';\n    }\n  }, [active]);\n\n  return (\n    <>\n      <Mask active={active} onClick={onClose} />\n      <Container active={active}>\n        {title !== undefined || onClose !== undefined ? (\n          <Header className={isScrolling ? 'scrolling' : undefined}>\n            <Title>{title}</Title>\n            {onClose !== undefined ? (\n              <IconButton path={mdiClose} onClick={onClose} />\n            ) : undefined}\n          </Header>\n        ) : undefined}\n        <Body\n          {...props}\n          onScroll={(ev) => {\n            if (ev.currentTarget.scrollTop > 0) {\n              setIsScrolling(true);\n            } else {\n              setIsScrolling(false);\n            }\n          }}\n        >\n          {children}\n        </Body>\n      </Container>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const InputText = styled.input`\n  & {\n    border: solid 1px #ddd;\n    border-radius: 5px;\n    font-size: 16px;\n    margin-right: 10px;\n    padding: 10px;\n  }\n\n  &:focus {\n    border-color: #888;\n  }\n`;\n","import Icon from '@mdi/react';\nimport styled from 'styled-components';\n\nconst buttonSizePx = 75;\nconst colorDefault = '#ccc';\nconst colorHover = '#888';\n\nconst StalkingButtonContainer = styled.button`\n  background-color: #fff;\n  border: solid 1px ${colorDefault};\n  border-radius: ${buttonSizePx / 2}px;\n  color: ${colorDefault};\n  cursor: pointer;\n  display: block;\n  height: ${buttonSizePx}px;\n  margin: 25px;\n  padding: 0;\n  transition: border-color 250ms ease-in, color 250ms ease-in;\n  width: ${buttonSizePx}px;\n\n  &:hover,\n  &:focus {\n    border-color: ${colorHover};\n    color: ${colorHover};\n  }\n`;\n\nexport const StalkingButtonGroup = styled.div`\n  left: 0;\n  position: fixed;\n  top: 0;\n  z-index: 999;\n\n  @media print {\n    display: none;\n  }\n`;\n\nexport type StalkingButtonProps = React.HTMLAttributes<HTMLButtonElement> & {\n  path: string;\n};\n\nexport const StalkingButton: React.FC<StalkingButtonProps> = ({\n  path,\n  ...props\n}) => {\n  return (\n    <StalkingButtonContainer {...props}>\n      <Icon path={path} />\n    </StalkingButtonContainer>\n  );\n};\n","import { mdiChevronLeft, mdiCog, mdiTrashCanOutline } from '@mdi/js';\nimport * as Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport _ from 'lodash';\nimport moment from 'moment-timezone';\nimport React from 'react';\nimport { SketchPicker } from 'react-color';\nimport { map } from 'rxjs/operators';\nimport styled from 'styled-components';\n\nimport { ChartZoomable, ChartZoomablePropsMarker } from './ChartZoomable';\nimport { Drawer } from './Drawer';\nimport { IconButton } from './IconButton';\nimport { InputText } from './InputText';\nimport { StalkingButton, StalkingButtonGroup } from './StalkingButtonGroup';\n\nimport { useObservable } from 'src/hooks/useObservable';\nimport {\n  MetricsStore,\n  MetricsStoreContext,\n  UnitConfig,\n} from 'src/services/MetricsStore';\n\nexport type CaseStudiesProps = {\n  onBack: () => void;\n  timezone: string;\n};\n\nconst SettingsPanel = styled(Drawer)`\n  min-width: 50vw;\n`;\n\nconst SettingsSection = styled.div`\n  padding: 25px;\n\n  & label {\n    display: block;\n    margin-bottom: 15px;\n  }\n`;\n\nconst SettingsSectionTitle = styled.h2`\n  font-size: 18px;\n  font-weight: 500;\n  margin-bottom: 25px;\n`;\n\nconst SettingsCaseStudyList = styled.ul`\n  margin-top: 25px;\n`;\nconst SettingsCaseStudyListItem = styled.li`\n  align-items: center;\n  border-radius: 5px;\n  display: flex;\n  flex-direction: row;\n  font-size: 16px;\n  margin-bottom: 15px;\n  padding: 5px;\n\n  :hover {\n    background-color: #eee;\n  }\n\n  & > div {\n    align-items: center;\n    display: flex;\n    margin-right: 15px;\n  }\n\n  & > div:nth-child(1) {\n    width: 200px;\n  }\n\n  & > div:nth-child(2) {\n    width: 40px;\n  }\n\n  & > div:nth-child(3) {\n    flex: 1;\n  }\n\n  & > div:nth-child(3) > input {\n    width: 100%;\n  }\n`;\nconst SettingsCaseStudyListHeader = styled(SettingsCaseStudyListItem)`\n  font-size: 18px;\n  font-weight: 500;\n\n  :hover {\n    background: none;\n  }\n`;\n\nconst SettingsCaseStudyColorPreview = styled.button`\n  border: solid 1px #eee;\n  border-radius: 5px;\n  cursor: pointer;\n  display: block;\n  height: 3em;\n  overflow: visible;\n  position: relative;\n  width: 3em;\n`;\n\nconst SettingsCaseStudyColorEdit = styled.div`\n  background: none;\n  bottom: 0;\n  left: 4em;\n  position: absolute;\n`;\n\nconst SettingsGlucoseInput = styled(InputText)`\n  width: 50px;\n`;\n\nconst CaseStudyChartsContainer = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst CaseStudyChartsHeading = styled.h1`\n  font-size: 2em;\n  padding: 25px;\n  @media print {\n    display: none;\n  }\n`;\n\nconst CaseStudyChartsPageGroup = styled.div`\n  break-after: always;\n  break-inside: avoid;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  width: 11in;\n\n  @media print {\n    height: 8.3in;\n    margin-bottom: 0.2in;\n  }\n`;\n\nconst CaseStudyChartContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 0 20px;\n\n  &.hidden {\n    display: none;\n  }\n\n  @media print {\n    &.hidden {\n      display: flex;\n      visibility: hidden;\n    }\n  }\n`;\n\nconst CaseStudyChartHeading = styled.h2`\n  font-weight: 600;\n  margin: 5px 0 0 0;\n  text-align: center;\n  text-transform: uppercase;\n`;\n\nconst CaseStudyChartSubHeading = styled.h3`\n  font-weight: 400;\n  margin: 5px 0 0 0;\n  text-align: center;\n  text-transform: uppercase;\n`;\n\nconst CaseStudyChart = styled.div`\n  flex: 1;\n`;\n\ntype CaseStudyEntry = {\n  marker: ChartZoomablePropsMarker;\n  title?: string;\n};\n\nexport const CaseStudies: React.FC<CaseStudiesProps> = ({\n  onBack,\n  timezone,\n}) => {\n  const metricsStore = React.useContext(MetricsStoreContext);\n  const [overallBloodGlucose] = useObservable(\n    () =>\n      metricsStore.bloodGlucose$.pipe(\n        map(MetricsStore.metricValuesToHighchartsPairs),\n      ),\n    [metricsStore],\n  );\n  const [locale] = useObservable(() => metricsStore.locale$, [metricsStore]);\n  const unitConfig = React.useMemo<UnitConfig>(() => {\n    switch (locale) {\n      case undefined:\n      case 'ca':\n        return { fromMmolL: (n) => n, label: 'mmol/L' };\n      case 'us':\n        return {\n          fromMmolL: (n) => Math.round(n * 18.018018018),\n          label: 'mg/dL',\n        };\n    }\n  }, [locale]);\n\n  const [showSettings, setShowSettings] = React.useState(false);\n  const [hours, setHours] = React.useState(4);\n  const [entries, setEntries] = React.useState<CaseStudyEntry[]>([]);\n  const [overrideYMin, setOverrideYMin] = React.useState<number>();\n  const [overrideYMax, setOverrideYMax] = React.useState<number>();\n\n  const [charts, setCharts] = React.useState<\n    {\n      id: number;\n      subTitle?: string;\n      title: string;\n      options: Highcharts.Options;\n    }[]\n  >([]);\n\n  const [colorEditIndex, setColorEditIndex] = React.useState<number>();\n  const colorEditRef = React.createRef<HTMLDivElement>();\n\n  React.useEffect(() => {\n    const ref = colorEditRef.current;\n    if (ref !== null) {\n      const handle = (ev: MouseEvent) => {\n        if (ev.target === null || !ref.contains(ev.target as Node)) {\n          setColorEditIndex(undefined);\n        }\n      };\n      document.addEventListener('click', handle);\n      return () => document.removeEventListener('click', handle);\n    }\n  }, [colorEditRef]);\n\n  React.useEffect(() => {\n    if (entries.length === 0) {\n      setShowSettings(true);\n    }\n\n    if (overallBloodGlucose !== undefined) {\n      const durationMillis = hours * 60 * 60 * 1000;\n      let yMinValue = unitConfig.fromMmolL(3);\n      let yMaxValue = unitConfig.fromMmolL(8);\n\n      // Build the data\n      const dataByChartId: Record<number, [number, number][]> = {};\n      const ids = entries.map((e) => e.marker.value).sort();\n      for (const i of ids) {\n        dataByChartId[i] = [];\n      }\n\n      for (const [t, v] of overallBloodGlucose) {\n        for (let i = 0; i < ids.length && ids[i] <= t; i++) {\n          if (t < ids[i] + durationMillis) {\n            yMinValue = Math.min(yMinValue, v);\n            yMaxValue = Math.max(yMaxValue, v);\n            dataByChartId[ids[i]].push([t - ids[i], v]);\n          }\n        }\n      }\n\n      const comparisonChart = {\n        id: 0,\n        options: createHighchartsOptionsForCaseStudy(\n          entries.map((entry) => ({\n            color: entry.marker.color,\n            data: dataByChartId[entry.marker.value],\n            title:\n              entry.title !== undefined\n                ? entry.title\n                : formatDateTimeShort(entry.marker.value, timezone),\n          })),\n          unitConfig,\n          {\n            max: durationMillis,\n            min: 0,\n          },\n          {\n            max:\n              overrideYMax === undefined\n                ? Math.ceil(yMaxValue * 2) / 2\n                : overrideYMax,\n            min:\n              overrideYMin === undefined\n                ? Math.floor(yMinValue * 2) / 2\n                : overrideYMin,\n          },\n          false,\n          overallBloodGlucose ?? [],\n          0,\n        ),\n        title: 'Overall',\n      };\n\n      const studyCharts = entries.map((entry) => ({\n        id: entry.marker.value,\n        options: createHighchartsOptionsForCaseStudy(\n          [\n            {\n              color: entry.marker.color,\n              data: dataByChartId[entry.marker.value],\n              title: '',\n            },\n          ],\n          unitConfig,\n          {\n            max: durationMillis,\n            min: 0,\n          },\n          {\n            max:\n              overrideYMax === undefined\n                ? Math.ceil(yMaxValue * 2) / 2\n                : overrideYMax,\n            min:\n              overrideYMin === undefined\n                ? Math.floor(yMinValue * 2) / 2\n                : overrideYMin,\n          },\n          true,\n          overallBloodGlucose ?? [],\n          entry.marker.value,\n        ),\n        subTitle: entry.title,\n        title: formatDateTimeLong(entry.marker.value, timezone),\n      }));\n\n      setCharts([comparisonChart, ...studyCharts]);\n    }\n  }, [\n    hours,\n    entries,\n    overallBloodGlucose,\n    overrideYMax,\n    overrideYMin,\n    timezone,\n    unitConfig,\n  ]);\n\n  return (\n    <>\n      <StalkingButtonGroup>\n        <StalkingButton path={mdiChevronLeft} onClick={onBack} />\n        <StalkingButton path={mdiCog} onClick={() => setShowSettings(true)} />\n      </StalkingButtonGroup>\n      {charts.length > 0 ? (\n        <CaseStudyChartsContainer>\n          <CaseStudyChartsHeading>Case Studies</CaseStudyChartsHeading>\n          {charts.map(({ id, options, subTitle, title }) => {\n            return (\n              <CaseStudyChartsPageGroup key={id}>\n                <CaseStudyChartContainer>\n                  <CaseStudyChartHeading>{title}</CaseStudyChartHeading>\n                  {subTitle !== undefined ? (\n                    <CaseStudyChartSubHeading>\n                      {subTitle}\n                    </CaseStudyChartSubHeading>\n                  ) : undefined}\n                  <CaseStudyChart>\n                    <HighchartsReact\n                      highcharts={Highcharts}\n                      id={`chart-${id}`}\n                      options={options}\n                    />\n                  </CaseStudyChart>\n                </CaseStudyChartContainer>\n              </CaseStudyChartsPageGroup>\n            );\n          })}\n        </CaseStudyChartsContainer>\n      ) : undefined}\n\n      <SettingsPanel\n        active={showSettings}\n        onClose={() => setShowSettings(false)}\n        title=\"Settings\"\n      >\n        <SettingsSection>\n          <SettingsSectionTitle>Case Studies</SettingsSectionTitle>\n          <ChartZoomable\n            markers={entries.map((e) => e.marker)}\n            onSelectTime={(value) =>\n              setEntries((es) =>\n                _.chain(es)\n                  .concat({\n                    marker: { color: 'red', value },\n                  })\n                  .uniqBy((e) => e.marker.value)\n                  .sortBy((e) => e.marker.value)\n                  .value(),\n              )\n            }\n            timezone={timezone}\n          />\n          <SettingsCaseStudyList>\n            <SettingsCaseStudyListHeader>\n              <div>Date &amp; Time</div>\n              <div> </div>\n              <div>Name</div>\n            </SettingsCaseStudyListHeader>\n            {entries.map((entry, i0) => (\n              <SettingsCaseStudyListItem key={entry.marker.value}>\n                <div>{formatDateTimeShort(entry.marker.value, timezone)}</div>\n                <div>\n                  <SettingsCaseStudyColorPreview\n                    onClick={() => setColorEditIndex(i0)}\n                    style={{ backgroundColor: entry.marker.color }}\n                  >\n                    {colorEditIndex === i0 ? (\n                      <SettingsCaseStudyColorEdit ref={colorEditRef}>\n                        <SketchPicker\n                          color={entry.marker.color}\n                          disableAlpha={true}\n                          onChangeComplete={(color) =>\n                            setEntries((es) =>\n                              es.map((e, i1) =>\n                                i0 === i1\n                                  ? {\n                                      ...e,\n                                      marker: { ...e.marker, color: color.hex },\n                                    }\n                                  : e,\n                              ),\n                            )\n                          }\n                        />\n                      </SettingsCaseStudyColorEdit>\n                    ) : (\n                      ' '\n                    )}\n                  </SettingsCaseStudyColorPreview>\n                </div>\n                <div>\n                  <InputText\n                    onFocus={(ev) => {\n                      if (\n                        ev.target.value.trim() === '' &&\n                        entry.title !== undefined\n                      ) {\n                        ev.target.value = entry.title;\n                      }\n                    }}\n                    onBlur={(ev) => {\n                      const value = ev.target.value.trim();\n                      const title = value === '' ? undefined : value;\n                      setEntries((es) =>\n                        es.map((e, i1) => (i0 === i1 ? { ...e, title } : e)),\n                      );\n                    }}\n                    placeholder={entry.title}\n                  />\n                </div>\n                <div>\n                  <IconButton\n                    onClick={() =>\n                      setEntries((ms) => ms.filter((_, i1) => i1 !== i0))\n                    }\n                    path={mdiTrashCanOutline}\n                  />\n                </div>\n              </SettingsCaseStudyListItem>\n            ))}\n          </SettingsCaseStudyList>\n        </SettingsSection>\n        <SettingsSection>\n          <SettingsSectionTitle>Parameters</SettingsSectionTitle>\n          <label>\n            Duration:{' '}\n            <InputText\n              max=\"23\"\n              min=\"1\"\n              placeholder={hours.toString()}\n              type=\"number\"\n              onBlur={(ev) => {\n                const nextHours = parseFloat(ev.target.value.trim());\n                if (!isNaN(nextHours)) {\n                  setHours(nextHours);\n                }\n              }}\n            />{' '}\n            (hours)\n          </label>\n          <label>\n            Min Glucose:{' '}\n            <SettingsGlucoseInput\n              placeholder={\n                overrideYMin === undefined ? undefined : overrideYMin.toString()\n              }\n              onBlur={(ev) => {\n                const value = parseFloat(ev.target.value.trim());\n                setOverrideYMin(isNaN(value) ? undefined : value);\n              }}\n            />\n          </label>\n          <label>\n            Max Glucose:{' '}\n            <SettingsGlucoseInput\n              placeholder={\n                overrideYMax === undefined ? undefined : overrideYMax.toString()\n              }\n              onBlur={(ev) => {\n                const value = parseFloat(ev.target.value.trim());\n                setOverrideYMax(isNaN(value) ? undefined : value);\n              }}\n            />\n          </label>\n        </SettingsSection>\n      </SettingsPanel>\n    </>\n  );\n};\n\nfunction createHighchartsOptionsForCaseStudy(\n  data: {\n    color: string;\n    data: [number, number][];\n    title: string;\n  }[],\n  unitConfig: UnitConfig,\n  xMinMax: { min: number; max: number },\n  yMinMax: {\n    min: number;\n    max: number;\n  },\n  includeLabels: boolean,\n  overallGlucose: [number, number][],\n  timeOffset: number,\n): Highcharts.Options {\n  const values = data.flatMap((p) => p.data).map((p) => p[1]);\n\n  const chartAvg =\n    values.length > 0\n      ? (values.reduce((sum, v) => sum + v, 0) / values.length).toFixed(1)\n      : 'N/A';\n  const [chartMaxTime, chartMaxValue] = data\n    .flatMap((p) => p.data)\n    .reduce((acc, curr) => (curr[1] > acc[1] ? curr : acc), [0, 0]);\n  const chartMaxTimeAbs = timeOffset + chartMaxTime;\n\n  // Baseline value is one hour before glucose peak time\n  const baselineTime = chartMaxTimeAbs - 60 * 60 * 1000;\n  let baselineValue: number | undefined;\n  if (includeLabels) {\n    for (let i = 0; i < overallGlucose.length; i++) {\n      const [beforeTime, beforeValue] = overallGlucose[i];\n      const [afterTime] = overallGlucose[i + 1] ?? [0];\n      if (beforeTime <= baselineTime && afterTime > baselineTime) {\n        baselineValue = beforeValue;\n        break;\n      } else if (beforeTime > baselineTime) {\n        break;\n      }\n    }\n  }\n\n  const hasLegend = data.length > 1;\n\n  return {\n    chart: {\n      events: {\n        render() {\n          const ctx = this as unknown as {\n            _qhLabels?: Highcharts.SVGElement[];\n          };\n          const labels = ctx._qhLabels;\n          if (labels !== undefined) {\n            labels.forEach((l) => l.destroy());\n            delete ctx._qhLabels;\n          }\n\n          if (includeLabels) {\n            const chartPaddingTop = 28.5;\n            const lineHeight = 18.5;\n            const labelX = 45;\n            const valueX = labelX + 132;\n\n            const attrs = {\n              fill: '#999',\n              zIndex: 1,\n            };\n\n            const maxLabel = this.renderer.text('GLUCOSE PEAK:', 0).add();\n            maxLabel.attr({\n              ...attrs,\n              x: labelX,\n              y: chartPaddingTop,\n            });\n            const maxValue = this.renderer\n              .text(`<b>${chartMaxValue}</b>`, 0)\n              .add();\n            maxValue.attr({\n              ...attrs,\n              x: valueX,\n              y: chartPaddingTop,\n            });\n\n            const avgLabel = this.renderer.text('AVERAGE GLUCOSE:', 0).add();\n            avgLabel.attr({\n              ...attrs,\n              x: labelX,\n              y: chartPaddingTop + lineHeight,\n            });\n            const avgValue = this.renderer.text(`<b>${chartAvg}</b>`, 0).add();\n            avgValue.attr({\n              ...attrs,\n              x: valueX,\n              y: chartPaddingTop + lineHeight,\n            });\n\n            const deltaLabelAndValue = this.renderer\n              .text(\n                `&Delta; = <b>${\n                  baselineValue !== undefined\n                    ? (chartMaxValue - baselineValue).toFixed(1)\n                    : 'N/A'\n                }</b>`,\n                0,\n              )\n              .add();\n            deltaLabelAndValue.attr({\n              ...attrs,\n              x: labelX,\n              y: chartPaddingTop + lineHeight * 2,\n            });\n\n            ctx._qhLabels = [\n              maxLabel,\n              maxValue,\n              avgLabel,\n              avgValue,\n              deltaLabelAndValue,\n            ];\n          }\n        },\n      },\n      height: 225,\n      margin: [15, 0, hasLegend ? 80 : 30, 40],\n      style: {\n        fontFamily: 'Poppins',\n      },\n      type: 'spline',\n    },\n    colors: data.map(({ color }) => color),\n    credits: {\n      enabled: false,\n    },\n    legend: {\n      enabled: hasLegend,\n    },\n    plotOptions: {\n      series: {\n        gapSize: 30 * 60 * 1000,\n        gapUnit: 'value',\n        marker: {\n          enabled: true,\n          radius: 2,\n        },\n      },\n    },\n    series: data.map(({ data, title }) => ({\n      data,\n      name: title,\n      type: 'spline',\n    })),\n    time: {\n      moment,\n      timezone: 'UTC',\n    },\n    title: {\n      text: '',\n    },\n    xAxis: {\n      ...xMinMax,\n      dateTimeLabelFormats: {\n        day: '%H:%M',\n      },\n      type: 'datetime',\n    },\n    yAxis: {\n      ...yMinMax,\n      plotBands: [\n        {\n          color: 'rgba(87, 220, 140, 0.2)',\n          from: unitConfig.fromMmolL(4.1),\n          to: unitConfig.fromMmolL(6),\n        },\n      ],\n      plotLines: _.compact([\n        chartMaxValue !== undefined\n          ? {\n              color: '#aaa',\n              dashStyle: 'Dot',\n              value: chartMaxValue,\n              width: 2,\n              zIndex: 2,\n            }\n          : undefined,\n        {\n          color: 'rgba(65, 165, 105, 1)',\n          dashStyle: 'Dash',\n          value: unitConfig.fromMmolL(5),\n          width: 4,\n          zIndex: 2,\n        },\n      ]),\n      tickInterval: unitConfig.fromMmolL(0.5),\n      title: {\n        text: '',\n      },\n    },\n  };\n}\n\nfunction formatDateTimeLong(millis: number, timezone: string) {\n  return moment.tz(new Date(millis), timezone).format('dddd, MMMM Do @ h:mm A');\n}\n\nfunction formatDateTimeShort(millis: number, timezone: string) {\n  return moment.tz(new Date(millis), timezone).format('MMMM Do @ h:mm A');\n}\n","/* eslint-disable no-console */\nimport { mdiChevronLeft, mdiCog } from '@mdi/js';\nimport * as Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport _ from 'lodash';\nimport moment from 'moment-timezone';\nimport React from 'react';\nimport { DateRangePicker, Range } from 'react-date-range';\nimport { map } from 'rxjs/operators';\nimport styled from 'styled-components';\n\nimport { useObservable } from '../hooks/useObservable';\nimport { MetricsStoreContext, UnitConfig } from '../services/MetricsStore';\nimport { ChartZoomable } from './ChartZoomable';\nimport { Drawer } from './Drawer';\nimport { InputText } from './InputText';\nimport { StalkingButton, StalkingButtonGroup } from './StalkingButtonGroup';\n\nconst nChartsPerPage = 3;\n\nconst aboveThresholdTarget = 7.2;\nconst belowThresholdTarget = 5;\n\nconst SettingsPanel = styled(Drawer)`\n  min-width: 50vw;\n`;\n\nconst SettingsSection = styled.div`\n  padding: 25px;\n`;\n\nconst SettingsSectionTitle = styled.h2`\n  font-size: 18px;\n  font-weight: 500;\n  margin-bottom: 25px;\n`;\n\nconst SettingsSectionSubTitle = styled.h3`\n  font-size: 16px;\n  font-weight: 400;\n  margin-bottom: 15px;\n`;\n\nconst SettingsNumberInput = styled(InputText)`\n  width: 50px;\n`;\n\nconst DailyChartsContainer = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst DailyChartsHeading = styled.h1`\n  font-size: 2em;\n  padding: 25px;\n  @media print {\n    display: none;\n  }\n`;\n\nconst DateRangePickerContainer = styled.div`\n  padding: 25px;\n  @media print {\n    display: none;\n  }\n`;\n\nconst DailyChartsPageGroup = styled.div`\n  break-after: always;\n  break-inside: avoid;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  width: 11in;\n\n  @media print {\n    height: 8.3in;\n    margin-bottom: 0.2in;\n  }\n`;\n\nconst DailyChartContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 0 20px;\n\n  &.hidden {\n    display: none;\n  }\n\n  @media print {\n    &.hidden {\n      display: flex;\n      visibility: hidden;\n    }\n  }\n`;\n\nconst DailyChartHeading = styled.h2`\n  font-weight: 600;\n  margin: 5px 0 0 0;\n  text-align: center;\n  text-transform: uppercase;\n`;\n\nconst DailyChart = styled.div`\n  flex: 1;\n`;\n\ntype DayData<D = [number, number][]> = {\n  day: string;\n  data: D;\n};\n\nexport type DailyChartsProps = React.HTMLAttributes<HTMLDivElement> & {\n  onBack: () => void;\n  timezone: string;\n};\n\nexport const DailyCharts: React.FC<DailyChartsProps> = ({\n  onBack,\n  timezone,\n  ...divProps\n}) => {\n  const metricsStore = React.useContext(MetricsStoreContext);\n  const [dayFilter, setDayFilter] = React.useState<Range>();\n  const [showSettings, setShowSettings] = React.useState(false);\n\n  const [overrideYMax, setOverrideYMax] = React.useState<number>();\n  const [overrideYMin, setOverrideYMin] = React.useState<number>();\n\n  const [locale] = useObservable(() => metricsStore.locale$, [metricsStore]);\n  const unitConfig = React.useMemo<UnitConfig>(() => {\n    switch (locale) {\n      case undefined:\n      case 'ca':\n        return { fromMmolL: (n) => n, label: 'mmol/L' };\n      case 'us':\n        return {\n          fromMmolL: (n) => Math.round(n * 18.018018018),\n          label: 'mg/dL',\n        };\n    }\n  }, [locale]);\n\n  const [bloodGlucose] = useObservable(\n    () =>\n      metricsStore.bloodGlucose$.pipe(\n        map((ms) => ms?.map<[number, number]>((m) => [m.time, m.value])),\n      ),\n    [metricsStore],\n  );\n  const dailyBloodGlucose = React.useMemo<DayData[] | undefined>(() => {\n    if (bloodGlucose !== undefined) {\n      return _.chain(bloodGlucose)\n        .groupBy(([time]) => moment(time).tz(timezone).format('YYYY-MM-DD'))\n        .toPairs()\n        .map(([day, data]) => ({ data, day }))\n        .sortBy('day')\n        .value();\n    } else {\n      return undefined;\n    }\n  }, [bloodGlucose, timezone]);\n\n  const [trendMinMaxTime, setTrendMinMaxTime] =\n    React.useState<[number, number]>();\n  const [trendFastingMinutesOfDay, setTrendFastingMinutesOfDay] =\n    React.useState<number | undefined>(240);\n  const trendFastingMinutesOfDayLabel = React.useMemo(\n    () =>\n      trendFastingMinutesOfDay !== undefined\n        ? moment()\n            .startOf('day')\n            .add(trendFastingMinutesOfDay, 'minutes')\n            .format('LT')\n        : '',\n    [trendFastingMinutesOfDay],\n  );\n  const trendFastingGlucose = React.useMemo<\n    DayData<number | null>[] | undefined\n  >(() => {\n    if (\n      dailyBloodGlucose !== undefined &&\n      trendFastingMinutesOfDay !== undefined\n    ) {\n      const [min, max] = trendMinMaxTime ?? [0, Date.now()];\n      const mMin = moment(min).tz(timezone);\n      const mMax = moment(max).tz(timezone);\n\n      return dailyBloodGlucose\n        .filter(({ day }) => {\n          const m = moment(day).tz(timezone);\n          const start = m.clone().startOf('day');\n          const end = m.clone().endOf('day');\n          return end.isSameOrAfter(mMin) && start.isSameOrBefore(mMax);\n        })\n        .map(({ data, day }) => {\n          // Get the data within the fasting range\n          const fastingTime = moment(day)\n            .tz(timezone)\n            .startOf('day')\n            .add(trendFastingMinutesOfDay, 'minutes');\n          const fastingTimeMillis = fastingTime.toDate().getTime();\n          const low = fastingTime.clone().subtract(15, 'minutes');\n          const high = fastingTime.clone().add(15, 'minutes');\n          const dataInRange = data.filter(([time]) => {\n            const m = moment(time).tz(timezone);\n            return m.isSameOrAfter(low) && m.isSameOrBefore(high);\n          });\n          const fastingGlucose = dataInRange.sort(\n            ([a], [b]) =>\n              Math.abs(a - fastingTimeMillis) - Math.abs(b - fastingTimeMillis),\n          )[0];\n          return {\n            data: fastingGlucose?.[1] ?? null,\n            day,\n          };\n        });\n    } else {\n      return undefined;\n    }\n  }, [dailyBloodGlucose, trendFastingMinutesOfDay, trendMinMaxTime, timezone]);\n  const trendHighchartsOptions = React.useMemo(() => {\n    return trendFastingGlucose !== undefined && trendFastingGlucose.length > 1\n      ? createHighchartsOptionsTrend(\n          timezone,\n          trendFastingGlucose.map(({ day, data }) => [\n            moment(day).tz(timezone).startOf('day').toDate().getTime(),\n            data,\n          ]),\n          unitConfig,\n          {\n            fasting: {\n              timeLabel: trendFastingMinutesOfDayLabel,\n            },\n            xMinMax: {\n              max: moment(\n                trendFastingGlucose[trendFastingGlucose.length - 1].day,\n              )\n                .tz(timezone)\n                .startOf('day')\n                .toDate()\n                .getTime(),\n              min: moment(trendFastingGlucose[0].day)\n                .tz(timezone)\n                .startOf('day')\n                .toDate()\n                .getTime(),\n            },\n          },\n        )\n      : undefined;\n  }, [\n    trendFastingGlucose,\n    trendFastingMinutesOfDayLabel,\n    timezone,\n    unitConfig,\n  ]);\n\n  const dailyMinMaxDay = React.useMemo(() => {\n    if (dailyBloodGlucose !== undefined) {\n      const nDays = dailyBloodGlucose.length;\n      if (nDays > 0) {\n        return [\n          moment(dailyBloodGlucose[0].day, 'YYYY-MM-DD').tz(timezone),\n          moment(dailyBloodGlucose[nDays - 1].day, 'YYYY-MM-DD').tz(timezone),\n        ];\n      } else {\n        return undefined;\n      }\n    }\n  }, [dailyBloodGlucose, timezone]);\n  const dailyHighchartsOptions = React.useMemo(() => {\n    if (dailyBloodGlucose !== undefined) {\n      const filter = ({ day }: DayData) => {\n        if (\n          dayFilter !== undefined &&\n          dayFilter.startDate !== undefined &&\n          dayFilter.endDate !== undefined\n        ) {\n          const dayMoment = moment(day, 'YYYY-M-DD').tz(timezone);\n          return (\n            dayMoment.isSameOrAfter(dayFilter.startDate) &&\n            dayMoment.isSameOrBefore(dayFilter.endDate)\n          );\n        } else {\n          return true;\n        }\n      };\n\n      return _.chunk(\n        dailyBloodGlucose.filter(filter).map(({ data, day }) => {\n          const m = moment.tz(day, timezone);\n          const xMinMax = {\n            max: m.endOf('day').toDate().getTime(),\n            min: m.startOf('day').toDate().getTime(),\n          };\n          const yMax =\n            overrideYMax === undefined\n              ? Math.ceil(\n                  Math.min(\n                    Math.max(unitConfig.fromMmolL(8), ...data.map((d) => d[1])),\n                    unitConfig.fromMmolL(12),\n                  ) * 2,\n                ) / 2\n              : unitConfig.fromMmolL(overrideYMax);\n          const yMinMax = {\n            max: Math.ceil(yMax * 2) / 2,\n            min: unitConfig.fromMmolL(\n              overrideYMin === undefined ? 3 : overrideYMin,\n            ),\n          };\n          return {\n            hidden: false,\n            options: createHighchartsOptionsForDay(\n              timezone,\n              data,\n              unitConfig,\n              xMinMax,\n              yMinMax,\n            ),\n            title: m.format('dddd, MMMM Do YYYY'),\n          };\n        }),\n        nChartsPerPage,\n      );\n    } else {\n      return undefined;\n    }\n  }, [\n    dailyBloodGlucose,\n    dayFilter,\n    overrideYMax,\n    overrideYMin,\n    timezone,\n    unitConfig,\n  ]);\n\n  return (\n    <>\n      <StalkingButtonGroup>\n        <StalkingButton path={mdiChevronLeft} onClick={onBack} />\n        <StalkingButton path={mdiCog} onClick={() => setShowSettings(true)} />\n      </StalkingButtonGroup>\n      <DailyChartsContainer {...divProps}>\n        <DailyChartsHeading>Trends</DailyChartsHeading>\n        {trendHighchartsOptions !== undefined ? (\n          <DailyChartsPageGroup key={`page-group-overall`}>\n            <DailyChartContainer>\n              <DailyChart>\n                <HighchartsReact\n                  highcharts={Highcharts}\n                  options={{ ...trendHighchartsOptions }}\n                />\n              </DailyChart>\n            </DailyChartContainer>\n          </DailyChartsPageGroup>\n        ) : undefined}\n        <DailyChartsHeading>Daily</DailyChartsHeading>\n        {dailyHighchartsOptions !== undefined\n          ? dailyHighchartsOptions.map((pageGroup) => (\n              <DailyChartsPageGroup key={`page-group-${pageGroup[0].title}`}>\n                {pageGroup\n                  .concat(\n                    // Concatenate dummy charts to fill up each page of 3. This ensures that 1 or\n                    // 2 charts on a page is always layed out the same way incrementally as a 3-chart\n                    // page. This is for print consistency when have 1 day, then 2, then 3 on a page.\n                    new Array(nChartsPerPage - pageGroup.length).fill({\n                      ...pageGroup[0],\n                      hidden: true,\n                      options: {\n                        ...pageGroup[0].options,\n                        chart: {\n                          ...pageGroup[0].options.chart,\n                          // Don't invoke any load events for the page-filler items\n                          events: {},\n                        },\n                      },\n                    }),\n                  )\n                  .map(({ hidden = false, title, options }, i) => {\n                    return (\n                      <DailyChartContainer\n                        className={hidden ? 'hidden' : 'visible'}\n                        key={i}\n                      >\n                        <DailyChartHeading>{title}</DailyChartHeading>\n                        <DailyChart>\n                          <HighchartsReact\n                            highcharts={Highcharts}\n                            key={`chart-${title}`}\n                            options={options}\n                          />\n                        </DailyChart>\n                      </DailyChartContainer>\n                    );\n                  })}\n              </DailyChartsPageGroup>\n            ))\n          : undefined}\n      </DailyChartsContainer>\n      <SettingsPanel\n        active={showSettings}\n        onClose={() => setShowSettings(false)}\n        title=\"Settings\"\n      >\n        <SettingsSection>\n          <SettingsSectionTitle>Trend Chart Settings</SettingsSectionTitle>\n          <ChartZoomable\n            id=\"overall-range-filter\"\n            onChangeRange={(start, end) => setTrendMinMaxTime([start, end])}\n            timezone={timezone}\n          />\n          <label>\n            Fasting time (minutes from 12AM):{' '}\n            <SettingsNumberInput\n              defaultValue=\"240\"\n              onBlur={(ev) => {\n                const value = parseFloat(ev.target.value.trim());\n                setTrendFastingMinutesOfDay(isNaN(value) ? undefined : value);\n              }}\n              placeholder={trendFastingMinutesOfDay?.toString() ?? ''}\n            />\n          </label>\n        </SettingsSection>\n        <SettingsSection>\n          <SettingsSectionTitle>Daily Charts Settings</SettingsSectionTitle>\n          {dailyMinMaxDay !== undefined\n            ? (() => {\n                const [minDate, maxDate] = dailyMinMaxDay.map((m) =>\n                  m.toDate(),\n                );\n                return (\n                  <>\n                    <SettingsSectionSubTitle>\n                      Selected Date Range:\n                    </SettingsSectionSubTitle>\n                    <DateRangePickerContainer>\n                      <DateRangePicker\n                        maxDate={maxDate}\n                        minDate={minDate}\n                        moveRangeOnFirstSelection={false}\n                        onChange={(range) => {\n                          if ('selection' in range) {\n                            setDayFilter(range.selection);\n                          }\n                        }}\n                        ranges={[\n                          dayFilter === undefined\n                            ? {\n                                endDate: maxDate,\n                                key: 'selection',\n                                startDate: minDate,\n                              }\n                            : dayFilter,\n                        ]}\n                        showPreview\n                      />\n                    </DateRangePickerContainer>\n                  </>\n                );\n              })()\n            : undefined}\n          <SettingsSectionSubTitle>\n            Selected Glucose Range:\n          </SettingsSectionSubTitle>\n          <label>\n            Min:{' '}\n            <SettingsNumberInput\n              onBlur={(ev) => {\n                const value = parseFloat(ev.target.value.trim());\n                setOverrideYMin(isNaN(value) ? undefined : value);\n              }}\n              placeholder={\n                overrideYMin !== undefined ? overrideYMin.toString() : ''\n              }\n            />\n          </label>\n          <label style={{ marginLeft: '15px' }}>\n            Max:{' '}\n            <SettingsNumberInput\n              onBlur={(ev) => {\n                const value = parseFloat(ev.target.value.trim());\n                setOverrideYMax(isNaN(value) ? undefined : value);\n              }}\n              placeholder={\n                overrideYMax !== undefined ? overrideYMax.toString() : ''\n              }\n            />\n          </label>\n        </SettingsSection>\n      </SettingsPanel>\n    </>\n  );\n};\n\nfunction createHighchartsOptionsTrend(\n  timezone: string,\n  data: [number, number | null][],\n  unitConfig: UnitConfig,\n  {\n    fasting,\n    onRangeChange,\n    xMinMax,\n  }: {\n    fasting: {\n      timeLabel: string;\n    };\n    onRangeChange?: (start: number, end: number) => void;\n    xMinMax: { min: number; max: number };\n  },\n): Highcharts.Options {\n  let rangeChangeTimeout: NodeJS.Timeout | undefined = undefined;\n  return {\n    chart: {\n      animation: false,\n      height: 225,\n      margin: [15, 0, 100, 40],\n      style: {\n        fontFamily: 'Poppins',\n      },\n      type: 'spline',\n    },\n    colors: ['rgba(65, 165, 105, 1)'],\n    credits: {\n      enabled: false,\n    },\n    exporting: {\n      buttons: {\n        contextButton: {\n          className: 'no-print',\n          enabled: true,\n        },\n      },\n      csv: {\n        dateFormat: '%Y-%m-%d',\n      },\n    },\n    legend: {\n      enabled: true,\n    },\n    plotOptions: {\n      series: {\n        marker: {\n          enabled: true,\n        },\n        zones: [\n          {\n            color: 'rgba(65, 165, 105, 1)',\n            value: unitConfig.fromMmolL(4.8),\n          },\n          {\n            color: 'orange',\n          },\n        ],\n      },\n    },\n    series: [\n      {\n        data,\n        name: `Fasting (${fasting.timeLabel}) (${unitConfig.label})`,\n        type: 'spline',\n      },\n    ],\n    time: {\n      moment,\n      timezone,\n    },\n    title: {\n      text: '',\n    },\n    xAxis: {\n      ...xMinMax,\n      dateTimeLabelFormats: {\n        day: \"%e. %b '%y\",\n        week: \"%e. %b '%y\",\n      },\n      events: {\n        setExtremes: (ev) => {\n          if (onRangeChange !== undefined) {\n            if (rangeChangeTimeout !== undefined) {\n              clearTimeout(rangeChangeTimeout);\n            }\n            rangeChangeTimeout = setTimeout(\n              () => onRangeChange(ev.min, ev.max),\n              500,\n            );\n          }\n        },\n      },\n      labels: {\n        rotation: -45,\n      },\n      ordinal: false,\n      type: 'datetime',\n    },\n    yAxis: {\n      tickInterval: unitConfig.fromMmolL(0.5),\n      title: {\n        text: '',\n      },\n    },\n  };\n}\n\nfunction createHighchartsOptionsForDay(\n  timezone: string,\n  data: [number, number][],\n  unitConfig: UnitConfig,\n  xMinMax: { min: number; max: number },\n  yMinMax: {\n    min: number;\n    max: number;\n  },\n): Highcharts.Options {\n  const values = data.map((p) => p[1]);\n  const dayMax = Math.max(...values);\n  const dayAvg =\n    values.length > 0\n      ? values.reduce((acc, v) => acc + v, 0) / values.length\n      : undefined;\n  const dayMin = Math.min(...values);\n\n  const lower = unitConfig.fromMmolL(aboveThresholdTarget);\n  const upper = unitConfig.fromMmolL(belowThresholdTarget);\n\n  const { timeInRange: timeExposed } = calculateTimeInRange(data, {\n    lower: unitConfig.fromMmolL(aboveThresholdTarget),\n  });\n  const { effectiveDuration, timeInRange } = calculateTimeInRange(data, {\n    upper: unitConfig.fromMmolL(belowThresholdTarget),\n  });\n  const timeInRangePct =\n    effectiveDuration > 0 ? timeInRange / effectiveDuration : 1;\n\n  const labels: Highcharts.SVGElement[] = [];\n\n  return {\n    chart: {\n      events: {\n        render() {\n          labels.forEach((l) => l.destroy());\n          labels.length = 0;\n\n          const chartPaddingTop = 28.5;\n          const lineHeight = 18.5;\n          const labelX = 45;\n          const valueX = labelX + 132;\n\n          const attrs = {\n            fill: '#999',\n            zIndex: 1,\n          };\n\n          if (dayAvg !== undefined && dayMax !== undefined) {\n            const tirLabel = this.renderer\n              .text(`TIME IN RANGE (< ${upper.toFixed(1)}):`, 0)\n              .add();\n            tirLabel.attr({\n              ...attrs,\n              x: labelX,\n              y: chartPaddingTop,\n            });\n            const tirValue = this.renderer\n              .text(\n                `<b>${Math.floor(timeInRangePct * 100)}%</b> (${moment\n                  .duration(timeInRange, 'milliseconds')\n                  .format(() =>\n                    timeInRange > 60 * 60 * 1000 ? 'h[h] m[m]' : 'm[m]',\n                  )})`,\n                0,\n              )\n              .add();\n            tirValue.attr({\n              ...attrs,\n              x: valueX,\n              y: chartPaddingTop,\n            });\n\n            const maxLabel = this.renderer.text('GLUCOSE PEAK:', 0).add();\n            maxLabel.attr({\n              ...attrs,\n              x: labelX,\n              y: chartPaddingTop + lineHeight,\n            });\n            const maxValue = this.renderer\n              .text(`<b>${dayMax.toFixed(1)}</b>`, 0)\n              .add();\n            maxValue.attr({\n              ...attrs,\n              x: valueX,\n              y: chartPaddingTop + lineHeight,\n            });\n\n            const avgLabel = this.renderer.text('AVERAGE GLUCOSE:', 0).add();\n            avgLabel.attr({\n              ...attrs,\n              x: labelX,\n              y: chartPaddingTop + lineHeight * 2,\n            });\n            const avgValue = this.renderer\n              .text(`<b>${dayAvg.toFixed(1)}</b>`, 0)\n              .add();\n            avgValue.attr({\n              ...attrs,\n              x: valueX,\n              y: chartPaddingTop + lineHeight * 2,\n            });\n\n            const teLabel = this.renderer\n              .text(`TIME EXPOSED (> ${lower.toFixed(1)}):`, 0)\n              .add();\n            teLabel.attr({\n              ...attrs,\n              x: labelX,\n              y: chartPaddingTop + lineHeight * 3,\n            });\n\n            const teValue = this.renderer\n              .text(\n                `<b>${moment\n                  .duration(timeExposed, 'milliseconds')\n                  .format(() =>\n                    timeExposed > 60 * 60 * 1000 ? 'h[h] m[m]' : 'm[m]',\n                  )}</b>`,\n                0,\n              )\n              .add();\n            teValue.attr({\n              ...attrs,\n              x: valueX,\n              y: chartPaddingTop + lineHeight * 3,\n            });\n\n            labels.push(\n              maxLabel,\n              maxValue,\n              avgLabel,\n              avgValue,\n              teLabel,\n              teValue,\n            );\n          }\n        },\n      },\n      height: 225,\n      margin: [15, 0, 30, 40],\n      style: {\n        fontFamily: 'Poppins',\n      },\n      type: 'spline',\n    },\n    credits: {\n      enabled: false,\n    },\n    exporting: {\n      buttons: {\n        contextButton: {\n          enabled: false,\n        },\n      },\n    },\n    legend: {\n      enabled: false,\n    },\n    plotOptions: {\n      series: {\n        gapSize: 30 * 60 * 1000,\n        gapUnit: 'value',\n        marker: {\n          enabled: true,\n          radius: 2,\n        },\n        zones: [\n          {\n            color: '#CCC',\n            value: unitConfig.fromMmolL(4.1),\n          },\n          {\n            color: 'rgba(65, 165, 105, 1)',\n            value: unitConfig.fromMmolL(6.1),\n          },\n          {\n            color: 'orange',\n            value: unitConfig.fromMmolL(7.8),\n          },\n          {\n            color: 'rgba(255, 102, 102, 1)',\n          },\n        ],\n      },\n    },\n    series: [\n      {\n        data,\n        name: unitConfig.label,\n        type: 'spline',\n      },\n    ],\n    time: {\n      moment,\n      timezone,\n    },\n    title: {\n      text: '',\n    },\n    xAxis: {\n      ...xMinMax,\n      dateTimeLabelFormats: {\n        day: '%H:%M',\n      },\n      type: 'datetime',\n    },\n    yAxis: {\n      ...yMinMax,\n      plotBands: [\n        {\n          color: 'rgba(87, 220, 140, 0.2)',\n          from: unitConfig.fromMmolL(4.1),\n          to: unitConfig.fromMmolL(6),\n        },\n      ],\n      plotLines: _.compact([\n        dayMax !== undefined\n          ? {\n              color: '#aaa',\n              dashStyle: 'Dot',\n              value: dayMax,\n              width: 2,\n              zIndex: 2,\n            }\n          : undefined,\n        {\n          color: 'rgba(65, 165, 105, 1)',\n          dashStyle: 'Dash',\n          value: 5,\n          width: 4,\n          zIndex: 2,\n        },\n        dayMin !== undefined\n          ? {\n              color: '#aaa',\n              dashStyle: 'Dot',\n              value: dayMin,\n              width: 2,\n              zIndex: 2,\n            }\n          : undefined,\n      ]),\n      tickInterval: unitConfig.fromMmolL(0.5),\n      title: {\n        text: '',\n      },\n    },\n  };\n}\n\nfunction calculateTimeInRange(\n  data: [number, number][],\n  { lower = Number.MIN_VALUE, upper = Number.MAX_VALUE } = {},\n): { effectiveDuration: number; timeInRange: number } {\n  return data.reduce(\n    ({ effectiveDuration, timeInRange }, [currTime, currValue], i) => {\n      if (i > 0) {\n        const [prevTime, prevValue] = data[i - 1];\n        const duration = currTime - prevTime;\n        if (duration < 30 * 60 * 1000) {\n          const currValueLimited = Math.min(Math.max(currValue, lower), upper);\n          const prevValueLimited = Math.min(Math.max(prevValue, lower), upper);\n          const areaOfData =\n            (currTime - prevTime) * Math.abs(currValue - prevValue);\n          const areaInRange =\n            (currTime - prevTime) *\n            Math.abs(currValueLimited - prevValueLimited);\n\n          if (areaOfData === 0 && currValueLimited !== currValue) {\n            // prevValue and currValue are the same, and they are not within range. 0 duration\n            return {\n              effectiveDuration: effectiveDuration + duration,\n              timeInRange,\n            };\n          } else if (areaOfData === 0) {\n            // prevValue and currValue are the same, and they are within range. Full duration\n            return {\n              effectiveDuration: effectiveDuration + duration,\n              timeInRange: timeInRange + duration,\n            };\n          } else {\n            // The value is different. The percentage of duration is the percentage of overlap\n            return {\n              effectiveDuration: effectiveDuration + duration,\n              timeInRange: timeInRange + (areaInRange / areaOfData) * duration,\n            };\n          }\n        } else {\n          return { effectiveDuration, timeInRange };\n        }\n      } else {\n        return { effectiveDuration, timeInRange };\n      }\n    },\n    { effectiveDuration: 0, timeInRange: 0 },\n  );\n}\n","import {\n  mdiCalendarRangeOutline,\n  mdiClipboardTextSearchOutline,\n} from '@mdi/js';\nimport Icon from '@mdi/react';\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport { CaseStudies } from './CaseStudies';\nimport { DailyCharts } from './DailyCharts';\n\ntype ReportType = 'daily' | 'caseStudies';\n\nconst Fullscreen = styled.div`\n  align-items: stretch;\n  display: flex;\n  height: 100vh;\n  justify-content: stretch;\n  width: 100vw;\n`;\n\nconst Option = styled.button`\n  align-items: center;\n  background: none;\n  border: none;\n  cursor: pointer;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  padding: 18vh 18vw;\n\n  &:hover {\n    background-color: #eee;\n  }\n`;\n\nconst OptionTitle = styled.h1`\n  font-size: 32px;\n  font-weight: 500;\n  text-align: center;\n`;\n\nexport const ReportSelector: React.FC = () => {\n  const [selectedReport, setSelectedReport] = React.useState<\n    'none' | ReportType\n  >('none');\n  return (() => {\n    switch (selectedReport) {\n      case 'none':\n        return (\n          <Fullscreen>\n            <Option onClick={() => setSelectedReport('daily')}>\n              <Icon path={mdiCalendarRangeOutline} />\n              <OptionTitle>Daily</OptionTitle>\n            </Option>\n            <Option onClick={() => setSelectedReport('caseStudies')}>\n              <Icon path={mdiClipboardTextSearchOutline} />\n              <OptionTitle>Case Studies</OptionTitle>\n            </Option>\n          </Fullscreen>\n        );\n      case 'daily':\n        return (\n          <DailyCharts\n            timezone=\"America/Toronto\"\n            onBack={() => setSelectedReport('none')}\n          />\n        );\n      case 'caseStudies':\n        return (\n          <CaseStudies\n            timezone=\"America/Toronto\"\n            onBack={() => setSelectedReport('none')}\n          />\n        );\n    }\n  })();\n};\n","import React from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\n\nimport { FileDropZone } from './components/FileDropZone';\nimport { ReportSelector } from './components/ReportSelector';\nimport { useObservable } from './hooks/useObservable';\nimport { FileStore, FileStoreContext } from './services/FileStore';\nimport { MetricsStore, MetricsStoreContext } from './services/MetricsStore';\n\nconst GlobalStyle = createGlobalStyle`\n  /* Global reset to remove all browser styling. */\n  ${reset}\n\n  @page {\n    margin: 0;\n    size: landscape;\n  }\n\n  html,\n  body,\n  #root {\n    height: 100%;\n    width: 100%;\n  }\n\n  body {\n    font-family: 'Poppins', 'Roboto', 'Helvetica Neue', sans-serif;\n  }\n\n  @media print {\n    .highcharts-data-table {\n      display: none !important;\n    }\n\n    .no-print {\n      display: none !important;\n    }\n  }\n`;\n\nconst Fullscreen = styled.div`\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  min-height: 100%;\n  position: absolute;\n  min-width: 100%;\n`;\n\nexport type AppProps = {\n  dataUrl: string | undefined;\n};\n\nconst App: React.FC<AppProps> = ({ dataUrl }) => {\n  const [fileStore] = React.useState(() => new FileStore());\n  const [metricsStore] = React.useState(() => new MetricsStore(fileStore));\n  const [csvFiles] = useObservable(\n    () => fileStore.filesByType$('csv'),\n    [fileStore],\n    [],\n  );\n\n  React.useEffect(() => {\n    if (dataUrl !== undefined) {\n      void (async () => {\n        const { files } = await fileStore.preProcessUrl(dataUrl);\n        await fileStore.acceptFiles(files);\n      })();\n    }\n  }, [dataUrl, fileStore]);\n\n  return (\n    <>\n      <GlobalStyle />\n      <FileStoreContext.Provider value={fileStore}>\n        <MetricsStoreContext.Provider value={metricsStore}>\n          <FileDropZone>\n            {csvFiles.length > 0 ? (\n              <ReportSelector />\n            ) : dataUrl === undefined ? (\n              <Fullscreen>\n                <span>\n                  Drag and drop a Blood Glucose CSV file to view charts.\n                </span>\n              </Fullscreen>\n            ) : (\n              <Fullscreen>\n                <span>Downloading data...</span>\n              </Fullscreen>\n            )}\n          </FileDropZone>\n        </MetricsStoreContext.Provider>\n      </FileStoreContext.Provider>\n    </>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    void import('web-vitals').then(\n      ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n        getCLS(onPerfEntry);\n        getFID(onPerfEntry);\n        getFCP(onPerfEntry);\n        getLCP(onPerfEntry);\n        getTTFB(onPerfEntry);\n      },\n    );\n  }\n};\n\nexport default reportWebVitals;\n","import * as Highcharts from 'highcharts';\nimport brokenAxis from 'highcharts/modules/broken-axis';\nimport exportData from 'highcharts/modules/export-data';\nimport exporting from 'highcharts/modules/exporting';\n\nimport 'moment-duration-format';\n\n/** React date range styles. */\nimport 'react-date-range/dist/styles.css';\nimport 'react-date-range/dist/theme/default.css';\n\n/** Highcharts setup. */\nbrokenAxis(Highcharts);\nexporting(Highcharts);\nexportData(Highcharts);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport './setupVendorLibraries';\n\nconst qs = new URLSearchParams(window.location.search);\nconst dataUrl = qs.get('dataUrl');\n\nReactDOM.render(\n  <React.StrictMode>\n    <App dataUrl={typeof dataUrl === 'string' ? dataUrl : undefined} />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}