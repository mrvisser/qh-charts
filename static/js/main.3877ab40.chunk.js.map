{"version":3,"sources":["hooks/useObservable.ts","services/FileStore.ts","components/FileDropZone.tsx","services/MetricsStore.ts","components/ChartZoomable.tsx","components/IconButton.tsx","components/transitions/FadeIn.tsx","components/transitions/SlideFromRight.tsx","components/Drawer.tsx","components/StalkingButtonGroup.tsx","components/CaseStudies.tsx","components/DailyCharts.tsx","components/ReportSelector.tsx","App.tsx","reportWebVitals.ts","setupVendorLibraries.ts","index.tsx"],"names":["useObservable","observableGenerator","deps","initialValue","React","useState","value","setValue","cb","useCallback","useEffect","o","undefined","sub","subscribe","error","err","console","next","unsubscribe","FileStoreContext","createContext","FileStore","files$$","BehaviorSubject","files$","this","asObservable","type","pipe","map","fs","filter","f","fileList","files","unsupported","i","fileListItem","item","preProcessFileData","name","arrayBuffer","file","push","length","url","fetch","response","contentType","headers","get","split","slice","_","chain","concat","uniqBy","readData","resolveFileType","buffer","data","btoa","Uint8Array","reduce","str","byte","String","fromCharCode","size","byteLength","startsWith","endsWith","Container","styled","div","FileDropZone","children","fileService","useContext","fileUploadEl","setFileUploadEl","handleSelectFiles","a","preProcessFiles","preProcessed","acceptFiles","onClick","click","onDragOver","ev","preventDefault","stopPropagation","onDrop","dataTransfer","style","cursor","multiple","onChange","target","ref","el","display","MetricsStoreContext","MetricsStore","fileStore","customerDataTimeZone$$","bloodGlucose$","combineLatest","filesByType$","concatMap","customerDataTimeZone","of","Promise","resolve","csvs","atob","bytes","charCodeAt","TextDecoder","decode","replaceAll","all","parseBloodGlucoseCsv","timeValuesArr","timeValues","acc","m","Object","keys","timeStr","tz","time","moment","valueOf","sort","b","fn","input","accept","reject","csvParse","join","columns","records","result","record","parseValue","parseFloat","isNaN","metricValuesToHighchartsPairs","ms","ChartZoomable","id","markers","onChangeRange","onSelectTime","timezone","metricsStore","overallBloodGlucose","highChartsOptions","useMemo","rangeChangeTimeout","chart","animation","events","event","xAxis","toValue","chartX","height","margin","fontFamily","colors","credits","enabled","legend","plotOptions","series","point","x","gapSize","gapUnit","marker","title","text","dateTimeLabelFormats","day","week","setExtremes","clearTimeout","setTimeout","min","max","labels","rotation","ordinal","plotLines","width","yAxis","plotBands","color","from","to","tickInterval","createHighchartsOptions","constructorType","highcharts","HighchartsStock","options","Button","button","IconButton","path","props","Mask","active","containerRef","useRef","CSSTransition","addEndListener","in","nodeRef","timeout","Box","Header","Title","h1","Body","Drawer","onClose","isScrolling","setIsScrolling","className","mdiClose","onScroll","currentTarget","scrollTop","colorDefault","colorHover","StalkingButtonContainer","buttonSizePx","StalkingButtonGroup","StalkingButton","SettingsPanel","SettingsSection","SettingsSectionTitle","h2","SettingsCaseStudyList","ul","SettingsCaseStudyListItem","li","SettingsCaseStudyListHeader","SettingsCaseStudyColorPreview","CaseStudyChartsContainer","CaseStudyChartsHeading","CaseStudyChartsPageGroup","CaseStudyChartContainer","CaseStudyChartHeading","CaseStudyChart","CaseStudies","onBack","showSettings","setShowSettings","hours","setHours","setMarkers","charts","setCharts","durationMillis","dataByChartId","ids","t","v","createHighchartsOptionsForCaseStudy","Date","toLocaleString","mdiChevronLeft","mdiCog","e","sortBy","placeholder","toString","onBlur","nextHours","trim","i0","nextColor","i1","backgroundColor","mdiTrashCanOutline","xMinMax","yMinMax","values","p","chartMax","Math","radius","compact","dashStyle","zIndex","DailyChartsContainer","DailyChartsHeading","DateRangePickerContainer","DailyChartsPageGroup","DailyChartContainer","DailyChartHeading","DailyChart","DailyCharts","divProps","dayFilter","setDayFilter","overallMinMaxTime","setOverallMinMaxTime","overallHighchartsOptions","onRangeChange","createHighchartsOptionsOverall","dailyBloodGlucose","groupBy","format","toPairs","dailyMinMaxDay","nDays","dailyHighchartsOptions","chunk","startDate","endDate","dayMoment","isSameOrAfter","isSameOrBefore","endOf","toDate","getTime","startOf","yMax","d","ceil","hidden","createHighchartsOptionsForDay","Highcharts","pageGroup","Array","fill","start","end","minDate","maxDate","moveRangeOnFirstSelection","range","selection","ranges","key","showSelectionPreview","dayMax","dayAvg","round","dayMin","timeExposed","calculateTimeInRange","lower","timeInRange","upper","effectiveDuration","timeInRangePct","render","forEach","l","destroy","chartPaddingTop","valueX","labelX","attrs","renderer","add","attr","y","floor","duration","maxLabel","maxValue","avgLabel","avgValue","teLabel","teValue","Number","MIN_VALUE","MAX_VALUE","currTime","currValue","prevTime","prevValue","currValueLimited","prevValueLimited","areaOfData","abs","areaInRange","Fullscreen","Option","OptionTitle","ReportSelector","selectedReport","setSelectedReport","mdiCalendarRangeOutline","mdiClipboardTextSearchOutline","GlobalStyle","createGlobalStyle","reset","App","dataUrl","csvFiles","preProcessUrl","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","brokenAxis","URLSearchParams","window","location","search","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3877ab40.chunk.js","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React from 'react';\nimport { Observable } from 'rxjs';\n\nexport type ObserverFunction<T> = () => Observable<T> | undefined;\n\n/** @see [useObservable(observableGenerator, deps, initialvalue?)] */\nexport function useObservable<T>(\n  observableGenerator: ObserverFunction<T>,\n  deps: React.DependencyList,\n): [T | undefined];\n\n/** @see [useObservable(observableGenerator, deps, initialvalue?)] */\nexport function useObservable<T>(\n  observableGenerator: ObserverFunction<T>,\n  deps: React.DependencyList,\n  initialValue: T,\n): [T];\n\n/**\n * A custom hook that exposes an observable as its latest emitted value.\n *\n * @param observableGenerator A factory function for the observable\n * @param deps The dependency array. When any of these dependencies changes, the observable will\n *   be regenerated.\n * @param initialValue The initial value of the observable value, before it emits its first value.\n *   When the dependency array changes, the value will not revert to the initial value.\n * @returns\n */\nexport function useObservable<T>(\n  observableGenerator: ObserverFunction<T>,\n  deps: React.DependencyList,\n  initialValue?: T,\n): [typeof initialValue] {\n  const [value, setValue] = React.useState<T | typeof initialValue>(\n    initialValue,\n  );\n  const cb = React.useCallback(observableGenerator, deps);\n\n  /** When the callback changes, reinvoke it and subscribe to the new observable. */\n  React.useEffect(() => {\n    const o = cb();\n    if (o !== undefined) {\n      // eslint-disable-next-line deprecation/deprecation\n      const sub = o.subscribe({\n        // eslint-disable-next-line no-console\n        error: (err) => console.error(err),\n        next: setValue,\n      });\n      return () => sub.unsubscribe();\n    }\n  }, [cb]);\n\n  return [value];\n}\n","import _ from 'lodash';\nimport React from 'react';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport type FileType = 'image' | 'csv';\n\nexport type File = {\n  contentType: string;\n  data: string;\n  name: string;\n  size: number;\n  type: FileType;\n};\n\nexport type ProcessedFiles = {\n  files: File[];\n  unsupported: string[];\n};\n\nexport const FileStoreContext = React.createContext<FileStore>(\n  undefined as unknown as FileStore,\n);\n\nexport class FileStore {\n  private readonly files$$ = new BehaviorSubject<File[]>([]);\n  public readonly files$ = this.files$$.asObservable();\n\n  public filesByType$(type: FileType): Observable<File[]> {\n    return this.files$.pipe(map((fs) => fs.filter((f) => f.type === type)));\n  }\n\n  public async preProcessFiles(fileList: FileList): Promise<ProcessedFiles> {\n    const files: File[] = [];\n    const unsupported: string[] = [];\n\n    for (let i = 0; i < fileList.length; i++) {\n      const fileListItem = fileList.item(i);\n      if (fileListItem !== null) {\n        const file = await this.preProcessFileData(\n          fileListItem.name,\n          fileListItem.type,\n          () => fileListItem.arrayBuffer(),\n        );\n\n        if (file !== undefined) {\n          files.push(file);\n        } else {\n          unsupported.push(fileListItem.name);\n        }\n      }\n    }\n    return { files, unsupported };\n  }\n\n  public async preProcessUrl(url: string): Promise<ProcessedFiles> {\n    const response = await fetch(url);\n    const contentType = response.headers.get('content-type');\n    const name = url.split('?')[0].split('/').slice(-1)[0];\n    const file = await this.preProcessFileData(\n      name,\n      contentType === null ? 'application/octet-stream' : contentType,\n      () => response.arrayBuffer(),\n    );\n    if (file !== undefined) {\n      return { files: [file], unsupported: [] };\n    } else {\n      return { files: [], unsupported: [url] };\n    }\n  }\n\n  public async acceptFiles(files: File[]): Promise<void> {\n    this.files$$.next(\n      _.chain(this.files$$.value).concat(files).uniqBy('data').value(),\n    );\n  }\n\n  private async preProcessFileData(\n    name: string,\n    contentType: string,\n    readData: () => Promise<ArrayBuffer>,\n  ): Promise<File | undefined> {\n    const type = resolveFileType(name, contentType);\n    if (type !== undefined) {\n      const buffer = await readData();\n      const data = base64EncodeBuffer(buffer);\n      const size = buffer.byteLength;\n      return { contentType, data, name, size, type };\n    } else {\n      return undefined;\n    }\n  }\n}\n\nfunction base64EncodeBuffer(buf: ArrayBuffer): string {\n  return btoa(\n    new Uint8Array(buf).reduce(\n      (str, byte) => str + String.fromCharCode(byte),\n      '',\n    ),\n  );\n}\n\nfunction resolveFileType(\n  name: string,\n  contentType: string,\n): FileType | undefined {\n  if (contentType.startsWith('text/csv')) {\n    return 'csv';\n  } else if (contentType.startsWith('image/')) {\n    return 'image';\n  } else if (contentType.startsWith('text/') && name.endsWith('csv')) {\n    return 'csv';\n  } else {\n    return undefined;\n  }\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { useObservable } from '../hooks/useObservable';\nimport { FileStoreContext } from '../services/FileStore';\n\nconst Container = styled.div`\n  min-height: 100%;\n  min-width: 100%;\n  position: relative;\n`;\n\nexport const FileDropZone: React.FC = ({ children }) => {\n  const fileService = React.useContext(FileStoreContext);\n  const [files] = useObservable(() => fileService.files$, [fileService], []);\n  const [fileUploadEl, setFileUploadEl] = React.useState<HTMLInputElement>();\n  const handleSelectFiles = React.useCallback(\n    async (files: FileList) => {\n      const preProcessed = await fileService.preProcessFiles(files);\n      await fileService.acceptFiles(preProcessed.files);\n    },\n    [fileService],\n  );\n\n  return (\n    <Container\n      onClick={() =>\n        files.length === 0 && fileUploadEl !== undefined\n          ? fileUploadEl.click()\n          : undefined\n      }\n      onDragOver={(ev) => {\n        ev.preventDefault();\n        ev.stopPropagation();\n      }}\n      onDrop={(ev) => {\n        ev.preventDefault();\n        ev.stopPropagation();\n        void handleSelectFiles(ev.dataTransfer.files);\n      }}\n      style={{\n        cursor: files.length === 0 ? 'pointer' : undefined,\n      }}\n    >\n      <input\n        multiple\n        onChange={(ev) => {\n          const files = ev.target.files;\n          if (files !== null && files.length > 0) {\n            void handleSelectFiles(files);\n          }\n        }}\n        ref={(el) => (el !== null ? setFileUploadEl(el) : undefined)}\n        style={{ display: 'none' }}\n        type=\"file\"\n      />\n      {children}\n    </Container>\n  );\n};\n","import csvParse from 'csv-parse';\nimport moment from 'moment-timezone';\nimport React from 'react';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport { concatMap } from 'rxjs/operators';\n\nimport { FileStore } from './FileStore';\n\nexport type MetricValue<T> = {\n  time: number;\n  value: T;\n};\n\ntype CsvRecord = {\n  'Device Timestamp': string;\n  'Record Type': string;\n  'Historic Glucose mmol/L': string;\n  'Scan Glucose mmol/L': string;\n};\n\nexport const MetricsStoreContext = React.createContext<MetricsStore>(\n  undefined as unknown as MetricsStore,\n);\n\nexport class MetricsStore {\n  public static metricValuesToHighchartsPairs = <T>(\n    ms: MetricValue<T>[] | undefined,\n  ): [number, T][] | undefined => {\n    return ms !== undefined\n      ? ms.map(({ time, value }) => [time, value])\n      : undefined;\n  };\n\n  private customerDataTimeZone$$ = new BehaviorSubject('America/Toronto');\n\n  constructor(private readonly fileStore: FileStore) {}\n\n  /** Observe changes to the blood glucose metrics. */\n  public readonly bloodGlucose$: Observable<MetricValue<number>[] | undefined> =\n    combineLatest([\n      this.fileStore.filesByType$('csv'),\n      this.customerDataTimeZone$$,\n    ])\n      .pipe(\n        concatMap(([files, customerDataTimeZone]) =>\n          of<() => Promise<MetricValue<number>[] | undefined>>(\n            // Whenever we get a new set of files, first emit undefined to signal that we should\n            // enter a loading / \"stale\" state for all consumers\n            () => Promise.resolve(undefined),\n            async () => {\n              const csvs = files.map((file) => {\n                const data = atob(file.data);\n                const bytes = new Uint8Array(data.length);\n                for (let i = 0; i < data.length; i++) {\n                  bytes[i] = data.charCodeAt(i);\n                }\n                return new TextDecoder('utf-8')\n                  .decode(bytes)\n                  .replaceAll('\\r\\n', '\\n');\n              });\n              const timeValuesArr: Record<string, number>[] = await Promise.all(\n                csvs.map(parseBloodGlucoseCsv),\n              );\n              const timeValues = timeValuesArr.reduce(\n                (acc, m) => ({ ...acc, ...m }),\n                {},\n              );\n              return Object.keys(timeValues)\n                .map((timeStr) => {\n                  const value = timeValues[timeStr];\n                  const time = parseTime(timeStr, customerDataTimeZone);\n                  return { time, value };\n                })\n                .sort((a, b) => a.time - b.time);\n            },\n          ),\n        ),\n      )\n      .pipe(concatMap((fn) => fn()));\n}\n\nfunction parseBloodGlucoseCsv(input: string): Promise<Record<string, number>> {\n  return new Promise((accept, reject) => {\n    csvParse(\n      input.split('\\n').slice(1).join('\\n'),\n      { columns: true },\n      (err, records: CsvRecord[]) => {\n        if (err !== undefined) {\n          return reject(err);\n        }\n\n        const result: Record<string, number> = {};\n        for (const record of records) {\n          const value = parseValue(record);\n          if (value !== undefined) {\n            result[record['Device Timestamp']] = value;\n          }\n        }\n\n        accept(result);\n      },\n    );\n  });\n}\n\nfunction parseTime(str: string, tz: string): number {\n  return moment.tz(str, 'DD-MM-YYYY HH:mm', tz).valueOf();\n}\n\nfunction parseValue(record: CsvRecord): number | undefined {\n  const value =\n    record['Record Type'] === '0'\n      ? parseFloat(record['Historic Glucose mmol/L'])\n      : parseFloat(record['Scan Glucose mmol/L']);\n  if (!isNaN(value)) {\n    return value;\n  } else {\n    return undefined;\n  }\n}\n","import * as Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport * as HighchartsStock from 'highcharts/highstock';\nimport moment from 'moment-timezone';\nimport React from 'react';\nimport { map } from 'rxjs/operators';\n\nimport { useObservable } from '../hooks/useObservable';\nimport { MetricsStore, MetricsStoreContext } from '../services/MetricsStore';\n\nexport type ChartZoomablePropsMarker = {\n  color: string;\n  value: number;\n};\n\nexport type ChartZoomableProps = {\n  id?: string;\n  markers?: ChartZoomablePropsMarker[];\n  onChangeRange?: (start: number, end: number) => void;\n  onSelectTime?: (time: number) => void;\n  timezone: string;\n};\n\nexport const ChartZoomable: React.FC<ChartZoomableProps> = ({\n  id,\n  markers = [],\n  onChangeRange = () => undefined,\n  onSelectTime = () => undefined,\n  timezone,\n}) => {\n  const metricsStore = React.useContext(MetricsStoreContext);\n  const [overallBloodGlucose] = useObservable(\n    () =>\n      metricsStore.bloodGlucose$.pipe(\n        map(MetricsStore.metricValuesToHighchartsPairs),\n      ),\n    [metricsStore],\n  );\n  const highChartsOptions = React.useMemo(\n    () =>\n      overallBloodGlucose !== undefined\n        ? createHighchartsOptions(\n            timezone,\n            overallBloodGlucose,\n            markers,\n            onChangeRange,\n            onSelectTime,\n          )\n        : undefined,\n    [markers, onChangeRange, onSelectTime, overallBloodGlucose, timezone],\n  );\n\n  return (\n    <>\n      {highChartsOptions !== undefined ? (\n        <HighchartsReact\n          id={id}\n          constructorType=\"stockChart\"\n          highcharts={HighchartsStock}\n          options={highChartsOptions}\n        />\n      ) : undefined}\n    </>\n  );\n};\n\nfunction createHighchartsOptions(\n  timezone: string,\n  data: [number, number][],\n  markers: ChartZoomablePropsMarker[],\n  onChangeRange: (start: number, end: number) => void = () => undefined,\n  onSelectTime: (time: number) => void = () => undefined,\n): Highcharts.Options {\n  let rangeChangeTimeout: NodeJS.Timeout | undefined = undefined;\n  return {\n    chart: {\n      animation: false,\n      events: {\n        click: function (event) {\n          onSelectTime(this.xAxis[0].toValue(event.chartX));\n        },\n      },\n      height: 350,\n      margin: [15, 0, 60, 40],\n      style: {\n        fontFamily: 'Poppins',\n      },\n      type: 'spline',\n    },\n    colors: ['rgba(255, 102, 102, 1)'],\n    credits: {\n      enabled: false,\n    },\n    legend: {\n      enabled: false,\n    },\n    plotOptions: {\n      series: {\n        events: {\n          click: (event) => onSelectTime(event.point.x),\n        },\n        gapSize: 30 * 60 * 1000,\n        gapUnit: 'value',\n        marker: {\n          enabled: false,\n        },\n      },\n    },\n    series: [\n      {\n        data,\n        name: 'mmol/L',\n        type: 'spline',\n      },\n    ],\n    time: {\n      moment,\n      timezone,\n    },\n    title: {\n      text: '',\n    },\n    xAxis: {\n      dateTimeLabelFormats: {\n        day: \"%e. %b '%y\",\n        week: \"%e. %b '%y\",\n      },\n      events: {\n        setExtremes: (ev) => {\n          if (onChangeRange !== undefined) {\n            if (rangeChangeTimeout !== undefined) {\n              clearTimeout(rangeChangeTimeout);\n            }\n            rangeChangeTimeout = setTimeout(\n              () => onChangeRange(ev.min, ev.max),\n              500,\n            );\n          }\n        },\n      },\n      labels: {\n        rotation: -45,\n      },\n      ordinal: false,\n      plotLines: markers.map((m) => ({\n        width: 2,\n        ...m,\n      })),\n      type: 'datetime',\n    },\n    yAxis: {\n      plotBands: [\n        {\n          color: 'rgba(87, 220, 140, 0.2)',\n          from: 4.1,\n          to: 6,\n        },\n      ],\n      tickInterval: 0.5,\n      title: {\n        text: '',\n      },\n    },\n  };\n}\n","import Icon from '@mdi/react';\nimport styled from 'styled-components';\n\nexport type IconButtonProps = React.HTMLAttributes<HTMLButtonElement> & {\n  path: string;\n};\n\nconst Button = styled.button`\n  background: none;\n  border: solid 1px rgba(255, 255, 255, 0);\n  border-radius: 5px;\n  cursor: pointer;\n  display: inline-block;\n  height: 50px;\n  width: 50px;\n\n  &:hover,\n  &:focus {\n    border: solid 1px #eee;\n  }\n`;\n\nexport const IconButton: React.FC<IconButtonProps> = ({ path, ...props }) => {\n  return (\n    <Button {...props}>\n      <Icon path={path} />\n    </Button>\n  );\n};\n","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport styled from 'styled-components';\n\nexport type FadeInProps = React.HTMLAttributes<HTMLDivElement> & {\n  active: boolean;\n};\n\nconst Container = styled.div`\n  display: none;\n  transition: opacity 250ms ease-in;\n\n  &.enter,\n  &.enter-done,\n  &.exit {\n    display: block;\n  }\n\n  &.enter {\n    opacity: 0;\n  }\n  &.enter.enter-active {\n    opacity: 1;\n  }\n\n  &.exit {\n    opacity: 1;\n  }\n  &.exit.exit-active {\n    opacity: 0;\n  }\n`;\n\nexport const FadeIn: React.FC<FadeInProps> = ({\n  active,\n  children,\n  ...props\n}) => {\n  const containerRef = React.useRef(null);\n  return (\n    <CSSTransition\n      addEndListener={() => undefined}\n      in={active}\n      nodeRef={containerRef}\n      timeout={250}\n    >\n      <Container {...props} ref={containerRef}>\n        {children}\n      </Container>\n    </CSSTransition>\n  );\n};\n","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport styled from 'styled-components';\n\nexport type SlideFromRightProps = React.HTMLAttributes<HTMLDivElement> & {\n  active: boolean;\n};\n\nconst Container = styled.div`\n  transform: translateX(100%);\n  transition: transform 250ms ease-in;\n\n  &.enter {\n    transform: translateX(100%);\n  }\n\n  &.enter.enter-active,\n  &.enter-done {\n    transform: translateX(0);\n  }\n\n  &.exit {\n    transform: translateX(0);\n  }\n\n  &.exit.exit-active {\n    transform: translateX(100%);\n  }\n`;\n\nexport const SlideFromRight: React.FC<SlideFromRightProps> = ({\n  active,\n  children,\n  ...props\n}) => {\n  const containerRef = React.useRef(null);\n  return (\n    <CSSTransition\n      addEndListener={() => undefined}\n      in={active}\n      nodeRef={containerRef}\n      timeout={250}\n    >\n      <Container {...props} ref={containerRef}>\n        {children}\n      </Container>\n    </CSSTransition>\n  );\n};\n","import { mdiClose } from '@mdi/js';\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport { IconButton } from './IconButton';\nimport { FadeIn } from './transitions/FadeIn';\nimport { SlideFromRight } from './transitions/SlideFromRight';\n\nconst Mask = styled(FadeIn)`\n  background-color: rgba(0, 0, 0, 0.4);\n  bottom: 0;\n  left: 0;\n  position: fixed;\n  right: 0;\n  top: 0;\n  z-index: 1000;\n`;\n\nconst Container = styled(SlideFromRight)`\n  background-color: #fff;\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  overflow-x: hidden;\n  position: fixed;\n  right: 0;\n  top: 0;\n  width: auto;\n  z-index: 1000;\n\n  &.enter,\n  &.enter-done,\n  &.exit {\n    box-shadow: -3px 0px 10px 1px rgba(0, 0, 0, 0.5);\n  }\n`;\n\nconst Box = styled.div`\n  padding: 20px;\n`;\n\nconst Header = styled(Box)`\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n  z-index: 1;\n\n  &.scrolling {\n    box-shadow: 0px 3px 10px 1px rgba(0, 0, 0, 0.5);\n  }\n`;\n\nconst Title = styled.h1`\n  flex: 1;\n  font-size: 24px;\n  font-weight: 400;\n  white-space: nowrap;\n`;\n\nconst Body = styled(Box)`\n  flex: 1;\n  overflow-y: auto;\n`;\n\nexport type DrawerProps = React.HTMLAttributes<HTMLDivElement> & {\n  active: boolean;\n  onClose?: () => void;\n  title?: string;\n};\n\nexport const Drawer: React.FC<DrawerProps> = ({\n  active,\n  children,\n  onClose,\n  title,\n  ...props\n}) => {\n  const [isScrolling, setIsScrolling] = React.useState(false);\n\n  return (\n    <>\n      <Mask active={active} onClick={onClose} />\n      <Container active={active}>\n        {title !== undefined || onClose !== undefined ? (\n          <Header className={isScrolling ? 'scrolling' : undefined}>\n            <Title>{title}</Title>\n            {onClose !== undefined ? (\n              <IconButton path={mdiClose} onClick={onClose} />\n            ) : undefined}\n          </Header>\n        ) : undefined}\n        <Body\n          {...props}\n          onScroll={(ev) => {\n            if (ev.currentTarget.scrollTop > 0) {\n              setIsScrolling(true);\n            } else {\n              setIsScrolling(false);\n            }\n          }}\n        >\n          {children}\n        </Body>\n      </Container>\n    </>\n  );\n};\n","import Icon from '@mdi/react';\nimport styled from 'styled-components';\n\nconst buttonSizePx = 75;\nconst colorDefault = '#ccc';\nconst colorHover = '#888';\n\nconst StalkingButtonContainer = styled.button`\n  background-color: #fff;\n  border: solid 1px ${colorDefault};\n  border-radius: ${buttonSizePx / 2}px;\n  color: ${colorDefault};\n  cursor: pointer;\n  display: block;\n  height: ${buttonSizePx}px;\n  margin: 25px;\n  padding: 0;\n  transition: border-color 250ms ease-in, color 250ms ease-in;\n  width: ${buttonSizePx}px;\n\n  &:hover,\n  &:focus {\n    border-color: ${colorHover};\n    color: ${colorHover};\n  }\n`;\n\nexport const StalkingButtonGroup = styled.div`\n  left: 0;\n  position: fixed;\n  top: 0;\n  z-index: 999;\n\n  @media print {\n    display: none;\n  }\n`;\n\nexport type StalkingButtonProps = React.HTMLAttributes<HTMLButtonElement> & {\n  path: string;\n};\n\nexport const StalkingButton: React.FC<StalkingButtonProps> = ({\n  path,\n  ...props\n}) => {\n  return (\n    <StalkingButtonContainer {...props}>\n      <Icon path={path} />\n    </StalkingButtonContainer>\n  );\n};\n","import { mdiChevronLeft, mdiCog, mdiTrashCanOutline } from '@mdi/js';\nimport HighchartsReact from 'highcharts-react-official';\nimport _ from 'lodash';\nimport moment from 'moment-timezone';\nimport React from 'react';\nimport { map } from 'rxjs/operators';\nimport styled from 'styled-components';\n\nimport { ChartZoomable, ChartZoomablePropsMarker } from './ChartZoomable';\nimport { Drawer } from './Drawer';\nimport { IconButton } from './IconButton';\nimport { StalkingButton, StalkingButtonGroup } from './StalkingButtonGroup';\n\nimport { useObservable } from 'src/hooks/useObservable';\nimport { MetricsStore, MetricsStoreContext } from 'src/services/MetricsStore';\n\nexport type CaseStudiesProps = {\n  onBack: () => void;\n  timezone: string;\n};\n\nconst SettingsPanel = styled(Drawer)`\n  min-width: 50vw;\n`;\n\nconst SettingsSection = styled.div`\n  padding: 25px;\n`;\n\nconst SettingsSectionTitle = styled.h2`\n  font-size: 18px;\n  font-weight: 500;\n  margin-bottom: 25px;\n`;\n\nconst SettingsCaseStudyList = styled.ul``;\nconst SettingsCaseStudyListItem = styled.li`\n  align-items: center;\n  border-radius: 5px;\n  display: flex;\n  flex-direction: row;\n  font-size: 16px;\n  margin-bottom: 15px;\n  padding: 5px;\n\n  :hover {\n    background-color: #eee;\n  }\n\n  & > div {\n    align-items: center;\n    display: flex;\n    margin-right: 15px;\n  }\n\n  & > div:nth-child(1) {\n    width: 225px;\n  }\n\n  & > div:nth-child(3) {\n    flex: 1;\n    justify-content: flex-end;\n  }\n\n  & input {\n    border: solid 1px #ddd;\n    border-radius: 5px;\n    font-size: 16px;\n    margin-right: 10px;\n    padding: 10px;\n  }\n\n  & input:focus {\n    border-color: #888;\n  }\n`;\nconst SettingsCaseStudyListHeader = styled(SettingsCaseStudyListItem)`\n  font-size: 18px;\n  font-weight: 500;\n\n  :hover {\n    background: none;\n  }\n`;\n\nconst SettingsCaseStudyColorPreview = styled.div`\n  border: solid 1px #eee;\n  border-radius: 5px;\n  height: 1.7em;\n  width: 1.7em;\n`;\n\nconst CaseStudyChartsContainer = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst CaseStudyChartsHeading = styled.h1`\n  font-size: 2em;\n  padding: 25px;\n  @media print {\n    display: none;\n  }\n`;\n\nconst CaseStudyChartsPageGroup = styled.div`\n  break-after: always;\n  break-inside: avoid;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  width: 11in;\n\n  @media print {\n    height: 8.3in;\n    margin-bottom: 0.2in;\n  }\n`;\n\nconst CaseStudyChartContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 0 20px;\n\n  &.hidden {\n    display: none;\n  }\n\n  @media print {\n    &.hidden {\n      display: flex;\n      visibility: hidden;\n    }\n  }\n`;\n\nconst CaseStudyChartHeading = styled.h2`\n  font-weight: 600;\n  margin: 5px 0 0 0;\n  text-align: center;\n  text-transform: uppercase;\n`;\n\nconst CaseStudyChart = styled.div`\n  flex: 1;\n`;\n\nexport const CaseStudies: React.FC<CaseStudiesProps> = ({\n  onBack,\n  timezone,\n}) => {\n  const metricsStore = React.useContext(MetricsStoreContext);\n  const [overallBloodGlucose] = useObservable(\n    () =>\n      metricsStore.bloodGlucose$.pipe(\n        map(MetricsStore.metricValuesToHighchartsPairs),\n      ),\n    [metricsStore],\n  );\n\n  const [showSettings, setShowSettings] = React.useState(false);\n  const [hours, setHours] = React.useState(4);\n  const [markers, setMarkers] = React.useState<ChartZoomablePropsMarker[]>([]);\n  const [charts, setCharts] = React.useState<\n    { id: number; title: string; options: Highcharts.Options }[]\n  >([]);\n\n  React.useEffect(() => {\n    if (markers.length === 0) {\n      setShowSettings(true);\n    }\n\n    if (overallBloodGlucose !== undefined) {\n      const durationMillis = hours * 60 * 60 * 1000;\n\n      // Build the data\n      const dataByChartId: Record<number, [number, number][]> = {};\n      const ids = markers.map((m) => m.value).sort();\n      for (const i of ids) {\n        dataByChartId[i] = [];\n      }\n\n      for (const [t, v] of overallBloodGlucose) {\n        for (let i = 0; i < ids.length && ids[i] <= t; i++) {\n          if (t < ids[i] + durationMillis) {\n            dataByChartId[ids[i]].push([t - ids[i], v]);\n          }\n        }\n      }\n\n      setCharts(\n        markers.map((marker) => ({\n          id: marker.value,\n          options: createHighchartsOptionsForCaseStudy(\n            marker.color,\n            dataByChartId[marker.value],\n            {\n              max: durationMillis,\n              min: 0,\n            },\n            { max: 12, min: 3 },\n          ),\n          title: new Date(marker.value).toLocaleString(),\n        })),\n      );\n    }\n  }, [hours, markers, overallBloodGlucose, timezone]);\n\n  return (\n    <>\n      <StalkingButtonGroup>\n        <StalkingButton path={mdiChevronLeft} onClick={onBack} />\n        <StalkingButton path={mdiCog} onClick={() => setShowSettings(true)} />\n      </StalkingButtonGroup>\n      {charts.length > 0 ? (\n        <CaseStudyChartsContainer>\n          <CaseStudyChartsHeading>Case Studies</CaseStudyChartsHeading>\n          {charts.map(({ id, options, title }) => {\n            return (\n              <CaseStudyChartsPageGroup key={id}>\n                <CaseStudyChartContainer>\n                  <CaseStudyChartHeading>{title}</CaseStudyChartHeading>\n                  <CaseStudyChart>\n                    <HighchartsReact id={`chart-${id}`} options={options} />\n                  </CaseStudyChart>\n                </CaseStudyChartContainer>\n              </CaseStudyChartsPageGroup>\n            );\n          })}\n        </CaseStudyChartsContainer>\n      ) : undefined}\n\n      <SettingsPanel\n        active={showSettings}\n        onClose={() => setShowSettings(false)}\n        title=\"Case Studies\"\n      >\n        <SettingsSection>\n          <SettingsSectionTitle>\n            Click to create case studies:\n          </SettingsSectionTitle>\n          <ChartZoomable\n            markers={markers}\n            onSelectTime={(value) =>\n              setMarkers((ms) =>\n                _.chain(ms)\n                  .concat({ color: 'red', value })\n                  .uniqBy((e) => e.value)\n                  .sortBy((e) => e.value)\n                  .value(),\n              )\n            }\n            timezone={timezone}\n          />\n        </SettingsSection>\n        <SettingsSection>\n          <SettingsSectionTitle>How many hours after:</SettingsSectionTitle>\n          <input\n            max=\"23\"\n            min=\"1\"\n            placeholder={hours.toString()}\n            type=\"number\"\n            onBlur={(ev) => {\n              const nextHours = parseFloat(ev.target.value.trim());\n              if (!isNaN(nextHours)) {\n                setHours(nextHours);\n              }\n            }}\n          />\n        </SettingsSection>\n        <SettingsSection>\n          <SettingsSectionTitle>Update their appearance:</SettingsSectionTitle>\n          <SettingsCaseStudyList>\n            <SettingsCaseStudyListHeader>\n              <div>Date &amp; Time</div>\n              <div>Color</div>\n            </SettingsCaseStudyListHeader>\n            {markers.map((m, i0) => (\n              <SettingsCaseStudyListItem key={m.value}>\n                <div>{new Date(m.value).toLocaleString()}</div>\n                <div>\n                  <input\n                    onBlur={(ev) => {\n                      const nextColor = ev.target.value.trim();\n                      if (nextColor !== '') {\n                        setMarkers((ms) =>\n                          ms.map((m, i1) =>\n                            i0 === i1 ? { ...m, color: nextColor } : m,\n                          ),\n                        );\n                      }\n                      ev.target.value = '';\n                    }}\n                    placeholder={m.color}\n                  />\n                  <SettingsCaseStudyColorPreview\n                    style={{ backgroundColor: m.color }}\n                  >\n                    {' '}\n                  </SettingsCaseStudyColorPreview>\n                </div>\n                <div>\n                  <IconButton\n                    onClick={() =>\n                      setMarkers((ms) => ms.filter((_, i1) => i1 !== i0))\n                    }\n                    path={mdiTrashCanOutline}\n                  />\n                </div>\n              </SettingsCaseStudyListItem>\n            ))}\n          </SettingsCaseStudyList>\n        </SettingsSection>\n      </SettingsPanel>\n    </>\n  );\n};\n\nfunction createHighchartsOptionsForCaseStudy(\n  color: string,\n  data: [number, number][],\n  xMinMax: { min: number; max: number },\n  yMinMax: {\n    min: number;\n    max: number;\n  },\n): Highcharts.Options {\n  const values = data.map((p) => p[1]);\n  const chartMax = Math.max(...values);\n\n  return {\n    chart: {\n      height: 225,\n      margin: [15, 0, 30, 40],\n      style: {\n        fontFamily: 'Poppins',\n      },\n      type: 'spline',\n    },\n    colors: [color],\n    credits: {\n      enabled: false,\n    },\n    legend: {\n      enabled: false,\n    },\n    plotOptions: {\n      series: {\n        gapSize: 30 * 60 * 1000,\n        gapUnit: 'value',\n        marker: {\n          enabled: true,\n          radius: 2,\n        },\n      },\n    },\n    series: [\n      {\n        data,\n        name: 'mmol/L',\n        type: 'spline',\n      },\n    ],\n    time: {\n      moment,\n      timezone: 'UTC',\n    },\n    title: {\n      text: '',\n    },\n    xAxis: {\n      ...xMinMax,\n      dateTimeLabelFormats: {\n        day: '%H:%M',\n      },\n      type: 'datetime',\n    },\n    yAxis: {\n      ...yMinMax,\n      plotBands: [\n        {\n          color: 'rgba(87, 220, 140, 0.2)',\n          from: 4.1,\n          to: 6,\n        },\n      ],\n      plotLines: _.compact([\n        chartMax !== undefined\n          ? {\n              color: '#aaa',\n              dashStyle: 'Dot',\n              value: chartMax,\n              width: 2,\n              zIndex: 2,\n            }\n          : undefined,\n        {\n          color: 'rgba(65, 165, 105, 1)',\n          dashStyle: 'Dash',\n          value: 5,\n          width: 4,\n          zIndex: 2,\n        },\n      ]),\n      tickInterval: 0.5,\n      title: {\n        text: '',\n      },\n    },\n  };\n}\n","import { mdiChevronLeft, mdiCog } from '@mdi/js';\nimport * as Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport _ from 'lodash';\nimport moment from 'moment-timezone';\nimport React from 'react';\nimport { DateRangePicker, Range } from 'react-date-range';\nimport { map } from 'rxjs/operators';\nimport styled from 'styled-components';\n\nimport { useObservable } from '../hooks/useObservable';\nimport { MetricsStore, MetricsStoreContext } from '../services/MetricsStore';\nimport { ChartZoomable } from './ChartZoomable';\nimport { Drawer } from './Drawer';\nimport { StalkingButton, StalkingButtonGroup } from './StalkingButtonGroup';\n\nconst nChartsPerPage = 3;\n\nconst aboveThresholdTarget = 7.2;\nconst belowThresholdTarget = 5;\n\nconst SettingsPanel = styled(Drawer)`\n  min-width: 50vw;\n`;\n\nconst SettingsSection = styled.div`\n  padding: 25px;\n`;\n\nconst SettingsSectionTitle = styled.h2`\n  font-size: 18px;\n  font-weight: 500;\n  margin-bottom: 25px;\n`;\n\nconst DailyChartsContainer = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst DailyChartsHeading = styled.h1`\n  font-size: 2em;\n  padding: 25px;\n  @media print {\n    display: none;\n  }\n`;\n\nconst DateRangePickerContainer = styled.div`\n  padding: 25px;\n  @media print {\n    display: none;\n  }\n`;\n\nconst DailyChartsPageGroup = styled.div`\n  break-after: always;\n  break-inside: avoid;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  width: 11in;\n\n  @media print {\n    height: 8.3in;\n    margin-bottom: 0.2in;\n  }\n`;\n\nconst DailyChartContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 0 20px;\n\n  &.hidden {\n    display: none;\n  }\n\n  @media print {\n    &.hidden {\n      display: flex;\n      visibility: hidden;\n    }\n  }\n`;\n\nconst DailyChartHeading = styled.h2`\n  font-weight: 600;\n  margin: 5px 0 0 0;\n  text-align: center;\n  text-transform: uppercase;\n`;\n\nconst DailyChart = styled.div`\n  flex: 1;\n`;\n\ntype DayData = {\n  day: string;\n  data: [number, number][];\n};\n\nexport type DailyChartsProps = React.HTMLAttributes<HTMLDivElement> & {\n  onBack: () => void;\n  timezone: string;\n};\n\nexport const DailyCharts: React.FC<DailyChartsProps> = ({\n  onBack,\n  timezone,\n  ...divProps\n}) => {\n  const metricsStore = React.useContext(MetricsStoreContext);\n  const [dayFilter, setDayFilter] = React.useState<Range>();\n  const [showSettings, setShowSettings] = React.useState(false);\n\n  const [overallBloodGlucose] = useObservable(\n    () =>\n      metricsStore.bloodGlucose$.pipe(\n        map(MetricsStore.metricValuesToHighchartsPairs),\n      ),\n    [metricsStore],\n  );\n  const [overallMinMaxTime, setOverallMinMaxTime] =\n    React.useState<[number, number]>();\n  const overallHighchartsOptions = React.useMemo(() => {\n    return overallBloodGlucose !== undefined\n      ? createHighchartsOptionsOverall(\n          timezone,\n          overallBloodGlucose,\n          overallMinMaxTime !== undefined\n            ? { max: overallMinMaxTime[1], min: overallMinMaxTime[0] }\n            : undefined,\n        )\n      : undefined;\n  }, [overallBloodGlucose, overallMinMaxTime, timezone]);\n\n  const dailyBloodGlucose = React.useMemo(() => {\n    if (overallBloodGlucose !== undefined) {\n      return _.chain(overallBloodGlucose)\n        .groupBy(([time]) => moment(time).tz(timezone).format('YYYY-MM-DD'))\n        .toPairs()\n        .map(([day, data]) => ({ data, day }))\n        .sortBy('day')\n        .value();\n    } else {\n      return undefined;\n    }\n  }, [overallBloodGlucose, timezone]);\n  const dailyMinMaxDay = React.useMemo(() => {\n    if (dailyBloodGlucose !== undefined) {\n      const nDays = dailyBloodGlucose.length;\n      if (nDays > 0) {\n        return [\n          moment(dailyBloodGlucose[0].day, 'YYYY-MM-DD').tz(timezone),\n          moment(dailyBloodGlucose[nDays - 1].day, 'YYYY-MM-DD').tz(timezone),\n        ];\n      } else {\n        return undefined;\n      }\n    }\n  }, [dailyBloodGlucose, timezone]);\n  const dailyHighchartsOptions = React.useMemo(() => {\n    if (dailyBloodGlucose !== undefined) {\n      const filter = ({ day }: DayData) => {\n        if (\n          dayFilter !== undefined &&\n          dayFilter.startDate !== undefined &&\n          dayFilter.endDate !== undefined\n        ) {\n          const dayMoment = moment(day, 'YYYY-M-DD').tz(timezone);\n          return (\n            dayMoment.isSameOrAfter(dayFilter.startDate) &&\n            dayMoment.isSameOrBefore(dayFilter.endDate)\n          );\n        } else {\n          return true;\n        }\n      };\n\n      return _.chunk(\n        dailyBloodGlucose.filter(filter).map(({ data, day }) => {\n          const m = moment.tz(day, timezone);\n          const xMinMax = {\n            max: m.endOf('day').toDate().getTime(),\n            min: m.startOf('day').toDate().getTime(),\n          };\n          const yMax = Math.min(Math.max(8, ...data.map((d) => d[1])), 12);\n          const yMinMax = {\n            max: Math.ceil(yMax * 2) / 2,\n            min: 3,\n          };\n          return {\n            hidden: false,\n            options: createHighchartsOptionsForDay(\n              timezone,\n              data,\n              xMinMax,\n              yMinMax,\n            ),\n            title: m.format('dddd, MMMM Do YYYY'),\n          };\n        }),\n        nChartsPerPage,\n      );\n    } else {\n      return undefined;\n    }\n  }, [dailyBloodGlucose, dayFilter, timezone]);\n\n  return (\n    <>\n      <StalkingButtonGroup>\n        <StalkingButton path={mdiChevronLeft} onClick={onBack} />\n        <StalkingButton path={mdiCog} onClick={() => setShowSettings(true)} />\n      </StalkingButtonGroup>\n      <DailyChartsContainer {...divProps}>\n        <DailyChartsHeading>Overall</DailyChartsHeading>\n        {overallHighchartsOptions !== undefined ? (\n          <DailyChartsPageGroup key={`page-group-overall`}>\n            <DailyChartContainer>\n              <DailyChart>\n                <HighchartsReact\n                  highcharts={Highcharts}\n                  options={{ ...overallHighchartsOptions }}\n                />\n              </DailyChart>\n            </DailyChartContainer>\n          </DailyChartsPageGroup>\n        ) : undefined}\n        <DailyChartsHeading>Daily</DailyChartsHeading>\n        {dailyHighchartsOptions !== undefined\n          ? dailyHighchartsOptions.map((pageGroup) => (\n              <DailyChartsPageGroup key={`page-group-${pageGroup[0].title}`}>\n                {pageGroup\n                  .concat(\n                    // Concatenate dummy charts to fill up each page of 3. This ensures that 1 or\n                    // 2 charts on a page is always layed out the same way incrementally as a 3-chart\n                    // page. This is for print consistency when have 1 day, then 2, then 3 on a page.\n                    new Array(nChartsPerPage - pageGroup.length).fill({\n                      ...pageGroup[0],\n                      hidden: true,\n                      options: {\n                        ...pageGroup[0].options,\n                        chart: {\n                          ...pageGroup[0].options.chart,\n                          // Don't invoke any load events for the page-filler items\n                          events: {},\n                        },\n                      },\n                    }),\n                  )\n                  .map(({ hidden = false, title, options }, i) => {\n                    return (\n                      <DailyChartContainer\n                        className={hidden ? 'hidden' : 'visible'}\n                        key={i}\n                      >\n                        <DailyChartHeading>{title}</DailyChartHeading>\n                        <DailyChart>\n                          <HighchartsReact\n                            highcharts={Highcharts}\n                            key={`chart-${title}`}\n                            options={options}\n                          />\n                        </DailyChart>\n                      </DailyChartContainer>\n                    );\n                  })}\n              </DailyChartsPageGroup>\n            ))\n          : undefined}\n      </DailyChartsContainer>\n      <SettingsPanel\n        active={showSettings}\n        onClose={() => setShowSettings(false)}\n        title=\"Settings\"\n      >\n        <SettingsSection>\n          <SettingsSectionTitle>Overall Chart Settings</SettingsSectionTitle>\n          <ChartZoomable\n            id=\"overall-range-filter\"\n            onChangeRange={(start, end) => setOverallMinMaxTime([start, end])}\n            timezone={timezone}\n          />\n        </SettingsSection>\n        <SettingsSection>\n          <SettingsSectionTitle>Daily Charts Settings</SettingsSectionTitle>\n          {dailyMinMaxDay !== undefined\n            ? (() => {\n                const [minDate, maxDate] = dailyMinMaxDay.map((m) =>\n                  m.toDate(),\n                );\n                return (\n                  <DateRangePickerContainer>\n                    <DateRangePicker\n                      maxDate={maxDate}\n                      minDate={minDate}\n                      moveRangeOnFirstSelection={false}\n                      onChange={(range) => {\n                        if ('selection' in range) {\n                          setDayFilter(range.selection);\n                        }\n                      }}\n                      ranges={[\n                        dayFilter === undefined\n                          ? {\n                              endDate: maxDate,\n                              key: 'selection',\n                              startDate: minDate,\n                            }\n                          : dayFilter,\n                      ]}\n                      showSelectionPreview={true}\n                    />\n                  </DateRangePickerContainer>\n                );\n              })()\n            : undefined}\n        </SettingsSection>\n      </SettingsPanel>\n    </>\n  );\n};\n\nfunction createHighchartsOptionsOverall(\n  timezone: string,\n  data: [number, number][],\n  xMinMax?: { min: number; max: number },\n  onRangeChange?: (start: number, end: number) => void,\n): Highcharts.Options {\n  let rangeChangeTimeout: NodeJS.Timeout | undefined = undefined;\n  return {\n    chart: {\n      animation: false,\n      height: 225,\n      margin: [15, 0, 60, 40],\n      style: {\n        fontFamily: 'Poppins',\n      },\n      type: 'spline',\n    },\n    colors: ['rgba(255, 102, 102, 1)'],\n    credits: {\n      enabled: false,\n    },\n    legend: {\n      enabled: false,\n    },\n    plotOptions: {\n      series: {\n        gapSize: 30 * 60 * 1000,\n        gapUnit: 'value',\n        marker: {\n          enabled: false,\n        },\n      },\n    },\n    series: [\n      {\n        data,\n        name: 'mmol/L',\n        type: 'spline',\n      },\n    ],\n    time: {\n      moment,\n      timezone,\n    },\n    title: {\n      text: '',\n    },\n    xAxis: {\n      ...xMinMax,\n      dateTimeLabelFormats: {\n        day: \"%e. %b '%y\",\n        week: \"%e. %b '%y\",\n      },\n      events: {\n        setExtremes: (ev) => {\n          if (onRangeChange !== undefined) {\n            if (rangeChangeTimeout !== undefined) {\n              clearTimeout(rangeChangeTimeout);\n            }\n            rangeChangeTimeout = setTimeout(\n              () => onRangeChange(ev.min, ev.max),\n              500,\n            );\n          }\n        },\n      },\n      labels: {\n        rotation: -45,\n      },\n      ordinal: false,\n      type: 'datetime',\n    },\n    yAxis: {\n      plotBands: [\n        {\n          color: 'rgba(87, 220, 140, 0.2)',\n          from: 4.1,\n          to: 6,\n        },\n      ],\n      tickInterval: 0.5,\n      title: {\n        text: '',\n      },\n    },\n  };\n}\n\nfunction createHighchartsOptionsForDay(\n  timezone: string,\n  data: [number, number][],\n  xMinMax: { min: number; max: number },\n  yMinMax: {\n    min: number;\n    max: number;\n  },\n): Highcharts.Options {\n  const values = data.map((p) => p[1]);\n  const dayMax = Math.max(...values);\n  const dayAvg =\n    values.length > 0\n      ? Math.round(\n          (values.reduce((acc, v) => acc + v, 0) * 10) / values.length,\n        ) / 10\n      : undefined;\n  const dayMin = Math.min(...values);\n\n  const { timeInRange: timeExposed } = calculateTimeInRange(data, {\n    lower: aboveThresholdTarget,\n  });\n  const { effectiveDuration, timeInRange } = calculateTimeInRange(data, {\n    upper: belowThresholdTarget,\n  });\n  const timeInRangePct =\n    effectiveDuration > 0 ? timeInRange / effectiveDuration : 1;\n\n  const labels: Highcharts.SVGElement[] = [];\n\n  return {\n    chart: {\n      events: {\n        render() {\n          labels.forEach((l) => l.destroy());\n          labels.length = 0;\n\n          const chartPaddingTop = 28.5;\n          const lineHeight = 18.5;\n          const labelX = 45;\n          const valueX = labelX + 132;\n\n          const attrs = {\n            fill: '#999',\n            zIndex: 1,\n          };\n\n          if (dayAvg !== undefined && dayMax !== undefined) {\n            const tirLabel = this.renderer\n              .text(`TIME IN RANGE (< ${belowThresholdTarget}):`, 0)\n              .add();\n            tirLabel.attr({\n              ...attrs,\n              x: labelX,\n              y: chartPaddingTop,\n            });\n            const tirValue = this.renderer\n              .text(\n                `<b>${Math.floor(timeInRangePct * 100)}%</b> (${moment\n                  .duration(timeInRange, 'milliseconds')\n                  .format(() =>\n                    timeInRange > 60 * 60 * 1000 ? 'h[h] m[m]' : 'm[m]',\n                  )})`,\n                0,\n              )\n              .add();\n            tirValue.attr({\n              ...attrs,\n              x: valueX,\n              y: chartPaddingTop,\n            });\n\n            const maxLabel = this.renderer.text('MAXIMUM GLUCOSE:', 0).add();\n            maxLabel.attr({\n              ...attrs,\n              x: labelX,\n              y: chartPaddingTop + lineHeight,\n            });\n            const maxValue = this.renderer\n              .text(`<b>${dayMax.toString()}</b>`, 0)\n              .add();\n            maxValue.attr({\n              ...attrs,\n              x: valueX,\n              y: chartPaddingTop + lineHeight,\n            });\n\n            const avgLabel = this.renderer.text('AVERAGE GLUCOSE:', 0).add();\n            avgLabel.attr({\n              ...attrs,\n              x: labelX,\n              y: chartPaddingTop + lineHeight * 2,\n            });\n            const avgValue = this.renderer\n              .text(`<b>${dayAvg.toString()}</b>`, 0)\n              .add();\n            avgValue.attr({\n              ...attrs,\n              x: valueX,\n              y: chartPaddingTop + lineHeight * 2,\n            });\n\n            const teLabel = this.renderer\n              .text(`TIME EXPOSED (> ${aboveThresholdTarget}):`, 0)\n              .add();\n            teLabel.attr({\n              ...attrs,\n              x: labelX,\n              y: chartPaddingTop + lineHeight * 3,\n            });\n\n            const teValue = this.renderer\n              .text(\n                `<b>${moment\n                  .duration(timeExposed, 'milliseconds')\n                  .format(() =>\n                    timeExposed > 60 * 60 * 1000 ? 'h[h] m[m]' : 'm[m]',\n                  )}</b>`,\n                0,\n              )\n              .add();\n            teValue.attr({\n              ...attrs,\n              x: valueX,\n              y: chartPaddingTop + lineHeight * 3,\n            });\n\n            labels.push(\n              maxLabel,\n              maxValue,\n              avgLabel,\n              avgValue,\n              teLabel,\n              teValue,\n            );\n          }\n        },\n      },\n      height: 225,\n      margin: [15, 0, 30, 40],\n      style: {\n        fontFamily: 'Poppins',\n      },\n      type: 'spline',\n    },\n    colors: ['rgba(255, 102, 102, 1)'],\n    credits: {\n      enabled: false,\n    },\n    legend: {\n      enabled: false,\n    },\n    plotOptions: {\n      series: {\n        gapSize: 30 * 60 * 1000,\n        gapUnit: 'value',\n        marker: {\n          enabled: true,\n          radius: 2,\n        },\n      },\n    },\n    series: [\n      {\n        data,\n        name: 'mmol/L',\n        type: 'spline',\n      },\n    ],\n    time: {\n      moment,\n      timezone,\n    },\n    title: {\n      text: '',\n    },\n    xAxis: {\n      ...xMinMax,\n      dateTimeLabelFormats: {\n        day: '%H:%M',\n      },\n      type: 'datetime',\n    },\n    yAxis: {\n      ...yMinMax,\n      plotBands: [\n        {\n          color: 'rgba(87, 220, 140, 0.2)',\n          from: 4.1,\n          to: 6,\n        },\n      ],\n      plotLines: _.compact([\n        dayMax !== undefined\n          ? {\n              color: '#aaa',\n              dashStyle: 'Dot',\n              value: dayMax,\n              width: 2,\n              zIndex: 2,\n            }\n          : undefined,\n        {\n          color: 'rgba(65, 165, 105, 1)',\n          dashStyle: 'Dash',\n          value: 5,\n          width: 4,\n          zIndex: 2,\n        },\n        dayMin !== undefined\n          ? {\n              color: '#aaa',\n              dashStyle: 'Dot',\n              value: dayMin,\n              width: 2,\n              zIndex: 2,\n            }\n          : undefined,\n      ]),\n      tickInterval: 0.5,\n      title: {\n        text: '',\n      },\n    },\n  };\n}\n\nfunction calculateTimeInRange(\n  data: [number, number][],\n  { lower = Number.MIN_VALUE, upper = Number.MAX_VALUE } = {},\n): { effectiveDuration: number; timeInRange: number } {\n  return data.reduce(\n    ({ effectiveDuration, timeInRange }, [currTime, currValue], i) => {\n      if (i > 0) {\n        const [prevTime, prevValue] = data[i - 1];\n        const duration = currTime - prevTime;\n        if (duration < 30 * 60 * 1000) {\n          const currValueLimited = Math.min(Math.max(currValue, lower), upper);\n          const prevValueLimited = Math.min(Math.max(prevValue, lower), upper);\n          const areaOfData =\n            (currTime - prevTime) * Math.abs(currValue - prevValue);\n          const areaInRange =\n            (currTime - prevTime) *\n            Math.abs(currValueLimited - prevValueLimited);\n\n          if (areaOfData === 0 && currValueLimited !== currValue) {\n            // prevValue and currValue are the same, and they are not within range. 0 duration\n            return {\n              effectiveDuration: effectiveDuration + duration,\n              timeInRange,\n            };\n          } else if (areaOfData === 0) {\n            // prevValue and currValue are the same, and they are within range. Full duration\n            return {\n              effectiveDuration: effectiveDuration + duration,\n              timeInRange: timeInRange + duration,\n            };\n          } else {\n            // The value is different. The percentage of duration is the percentage of overlap\n            return {\n              effectiveDuration: effectiveDuration + duration,\n              timeInRange: timeInRange + (areaInRange / areaOfData) * duration,\n            };\n          }\n        } else {\n          return { effectiveDuration, timeInRange };\n        }\n      } else {\n        return { effectiveDuration, timeInRange };\n      }\n    },\n    { effectiveDuration: 0, timeInRange: 0 },\n  );\n}\n","import {\n  mdiCalendarRangeOutline,\n  mdiClipboardTextSearchOutline,\n} from '@mdi/js';\nimport Icon from '@mdi/react';\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport { CaseStudies } from './CaseStudies';\nimport { DailyCharts } from './DailyCharts';\n\ntype ReportType = 'daily' | 'caseStudies';\n\nconst Fullscreen = styled.div`\n  align-items: stretch;\n  display: flex;\n  height: 100vh;\n  justify-content: stretch;\n  width: 100vw;\n`;\n\nconst Option = styled.button`\n  align-items: center;\n  background: none;\n  border: none;\n  cursor: pointer;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  padding: 18vh 18vw;\n\n  &:hover {\n    background-color: #eee;\n  }\n`;\n\nconst OptionTitle = styled.h1`\n  font-size: 32px;\n  font-weight: 500;\n  text-align: center;\n`;\n\nexport const ReportSelector: React.FC = () => {\n  const [selectedReport, setSelectedReport] = React.useState<\n    'none' | ReportType\n  >('none');\n  return (() => {\n    switch (selectedReport) {\n      case 'none':\n        return (\n          <Fullscreen>\n            <Option onClick={() => setSelectedReport('daily')}>\n              <Icon path={mdiCalendarRangeOutline} />\n              <OptionTitle>Daily</OptionTitle>\n            </Option>\n            <Option onClick={() => setSelectedReport('caseStudies')}>\n              <Icon path={mdiClipboardTextSearchOutline} />\n              <OptionTitle>Case Studies</OptionTitle>\n            </Option>\n          </Fullscreen>\n        );\n      case 'daily':\n        return (\n          <DailyCharts\n            timezone=\"America/Toronto\"\n            onBack={() => setSelectedReport('none')}\n          />\n        );\n      case 'caseStudies':\n        return (\n          <CaseStudies\n            timezone=\"America/Toronto\"\n            onBack={() => setSelectedReport('none')}\n          />\n        );\n    }\n  })();\n};\n","import React from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\n\nimport { FileDropZone } from './components/FileDropZone';\nimport { ReportSelector } from './components/ReportSelector';\nimport { useObservable } from './hooks/useObservable';\nimport { FileStore, FileStoreContext } from './services/FileStore';\nimport { MetricsStore, MetricsStoreContext } from './services/MetricsStore';\n\nconst GlobalStyle = createGlobalStyle`\n  /* Global reset to remove all browser styling. */\n  ${reset}\n\n  @page {\n    margin: 0;\n    size: landscape;\n  }\n\n  html,\n  body,\n  #root {\n    height: 100%;\n    width: 100%;\n  }\n\n  body {\n    font-family: 'Poppins', 'Roboto', 'Helvetica Neue', sans-serif;\n  }\n\n  #charts-for-print {\n    display: none;\n  }\n\n  @media print {\n    #charts-for-print {\n      display: block;\n    }\n\n    #charts-without-print {\n      display: none;\n    }\n\n    button.print {\n      display: none;\n    }\n  }\n`;\n\nconst Fullscreen = styled.div`\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  min-height: 100%;\n  position: absolute;\n  min-width: 100%;\n`;\n\nexport type AppProps = {\n  dataUrl: string | undefined;\n};\n\nconst App: React.FC<AppProps> = ({ dataUrl }) => {\n  const [fileStore] = React.useState(() => new FileStore());\n  const [metricsStore] = React.useState(() => new MetricsStore(fileStore));\n  const [csvFiles] = useObservable(\n    () => fileStore.filesByType$('csv'),\n    [fileStore],\n    [],\n  );\n\n  React.useEffect(() => {\n    if (dataUrl !== undefined) {\n      void (async () => {\n        const { files } = await fileStore.preProcessUrl(dataUrl);\n        await fileStore.acceptFiles(files);\n      })();\n    }\n  }, [dataUrl, fileStore]);\n\n  return (\n    <>\n      <GlobalStyle />\n      <FileStoreContext.Provider value={fileStore}>\n        <MetricsStoreContext.Provider value={metricsStore}>\n          <FileDropZone>\n            {csvFiles.length > 0 ? (\n              <ReportSelector />\n            ) : dataUrl === undefined ? (\n              <Fullscreen>\n                <span>\n                  Drag and drop a Blood Glucose CSV file to view charts.\n                </span>\n              </Fullscreen>\n            ) : (\n              <Fullscreen>\n                <span>Downloading data...</span>\n              </Fullscreen>\n            )}\n          </FileDropZone>\n        </MetricsStoreContext.Provider>\n      </FileStoreContext.Provider>\n    </>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    void import('web-vitals').then(\n      ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n        getCLS(onPerfEntry);\n        getFID(onPerfEntry);\n        getFCP(onPerfEntry);\n        getLCP(onPerfEntry);\n        getTTFB(onPerfEntry);\n      },\n    );\n  }\n};\n\nexport default reportWebVitals;\n","import * as Highcharts from 'highcharts';\nimport brokenAxis from 'highcharts/modules/broken-axis';\nimport 'moment-duration-format';\n\n/** React date range styles. */\nimport 'react-date-range/dist/styles.css';\nimport 'react-date-range/dist/theme/default.css';\n\n/** Highcharts setup. */\nbrokenAxis(Highcharts);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport './setupVendorLibraries';\n\nconst qs = new URLSearchParams(window.location.search);\nconst dataUrl = qs.get('dataUrl');\n\nReactDOM.render(\n  <React.StrictMode>\n    <App dataUrl={typeof dataUrl === 'string' ? dataUrl : undefined} />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}