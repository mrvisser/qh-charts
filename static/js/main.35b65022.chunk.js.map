{"version":3,"sources":["hooks/useObservable.ts","services/FileStore.ts","components/FileDropZone.tsx","services/MetricsStore.ts","components/ChartZoomable.tsx","components/IconButton.tsx","components/transitions/FadeIn.tsx","components/transitions/SlideFromRight.tsx","components/Drawer.tsx","components/InputText.tsx","components/StalkingButtonGroup.tsx","components/CaseStudies.tsx","components/DailyCharts.tsx","components/ReportSelector.tsx","App.tsx","reportWebVitals.ts","setupVendorLibraries.ts","index.tsx"],"names":["useObservable","observableGenerator","deps","initialValue","React","useState","value","setValue","cb","useCallback","useEffect","o","undefined","sub","subscribe","error","err","console","next","unsubscribe","FileStoreContext","createContext","FileStore","files$$","BehaviorSubject","files$","this","asObservable","type","pipe","map","fs","filter","f","fileList","files","unsupported","i","fileListItem","item","preProcessFileData","name","arrayBuffer","file","push","length","url","fetch","response","contentType","headers","get","split","slice","_","chain","concat","uniqBy","readData","resolveFileType","buffer","buf","data","base64","fromByteArray","Uint8Array","size","byteLength","startsWith","endsWith","Container","styled","div","FileDropZone","children","fileService","useContext","fileUploadEl","setFileUploadEl","handleSelectFiles","a","preProcessFiles","preProcessed","acceptFiles","onClick","click","onDragOver","ev","preventDefault","stopPropagation","onDrop","dataTransfer","style","cursor","multiple","onChange","target","ref","el","display","MetricsStoreContext","MetricsStore","fileStore","customerDataTimeZone$$","customerDataLocale$$","locale$","bloodGlucose$","combineLatest","filesByType$","concatMap","customerDataTimeZone","of","Promise","resolve","csvs","TextDecoder","decode","toByteArray","replaceAll","all","parseBloodGlucoseCsv","timeValuesArr","locale","timeValues","reduce","acc","m","Object","keys","timeStr","time","parseTime","sort","b","fn","input","accept","reject","rows","join","csvParse","columns","records","row","resolveLocale","record","parseValue","str","tz","format","moment","valueOf","parseFloat","isNaN","metricValuesToHighchartsPairs","ms","ChartZoomable","id","markers","onChangeRange","onSelectTime","timezone","metricsStore","overallBloodGlucose","highChartsOptions","useMemo","rangeChangeTimeout","chart","animation","events","event","xAxis","toValue","chartX","height","margin","fontFamily","colors","credits","enabled","legend","plotOptions","series","point","x","gapSize","gapUnit","marker","title","text","dateTimeLabelFormats","day","week","setExtremes","clearTimeout","setTimeout","min","max","labels","rotation","ordinal","plotLines","width","yAxis","plotBands","color","from","to","tickInterval","createHighchartsOptions","constructorType","highcharts","HighchartsStock","options","Button","button","IconButton","path","props","Mask","active","containerRef","useRef","CSSTransition","addEndListener","in","nodeRef","timeout","Box","Header","Title","h1","Body","Drawer","onClose","isScrolling","setIsScrolling","document","body","overflow","className","mdiClose","onScroll","currentTarget","scrollTop","InputText","colorDefault","colorHover","StalkingButtonContainer","buttonSizePx","StalkingButtonGroup","StalkingButton","SettingsPanel","SettingsSection","SettingsSectionTitle","h2","SettingsCaseStudyList","ul","SettingsCaseStudyListItem","li","SettingsCaseStudyListHeader","SettingsCaseStudyColorPreview","SettingsCaseStudyColorEdit","SettingsGlucoseInput","CaseStudyChartsContainer","CaseStudyChartsHeading","CaseStudyChartsPageGroup","CaseStudyChartContainer","CaseStudyChartHeading","CaseStudyChartSubHeading","h3","CaseStudyChart","CaseStudies","onBack","unitConfig","fromMmolL","n","label","Math","round","showSettings","setShowSettings","hours","setHours","entries","setEntries","overrideYMin","setOverrideYMin","overrideYMax","setOverrideYMax","charts","setCharts","colorEditIndex","setColorEditIndex","colorEditRef","createRef","current","handle","contains","addEventListener","removeEventListener","durationMillis","yMinValue","yMaxValue","dataByChartId","ids","e","t","v","comparisonChart","createHighchartsOptionsForCaseStudy","entry","formatDateTimeShort","ceil","floor","studyCharts","subTitle","formatDateTimeLong","mdiChevronLeft","mdiCog","Highcharts","es","sortBy","i0","backgroundColor","disableAlpha","onChangeComplete","i1","hex","onFocus","trim","onBlur","placeholder","mdiTrashCanOutline","toString","nextHours","xMinMax","yMinMax","includeLabels","values","flatMap","p","chartAvg","sum","chartMax","timeToPeak","curr","Number","MIN_VALUE","calculateTimeToMax","timeToBaseline","baseline","calculateTimeToBaseline","hasLegend","render","ctx","_qhLabels","forEach","l","destroy","chartPaddingTop","valueX","labelX","attrs","fill","zIndex","ttpLabel","renderer","add","attr","y","ttpValue","duration","maxLabel","maxValue","avgLabel","avgValue","ttbLabel","ttbValue","radius","compact","dashStyle","millis","Date","SettingsSectionSubTitle","SettingsNumberInput","DailyChartsContainer","DailyChartsHeading","DateRangePickerContainer","DailyChartsPageGroup","DailyChartContainer","DailyChartHeading","DailyChart","DailyCharts","divProps","dayFilter","setDayFilter","bloodGlucose","dailyBloodGlucose","groupBy","toPairs","trendMinMaxTime","setTrendMinMaxTime","trendFastingMinutesOfDay","setTrendFastingMinutesOfDay","trendFastingMinutesOfDayLabel","startOf","trendFastingGlucose","now","mMin","mMax","start","clone","endOf","isSameOrAfter","isSameOrBefore","fastingTime","fastingTimeMillis","toDate","getTime","low","subtract","high","fastingGlucose","abs","trendHighchartsOptions","fasting","onRangeChange","exporting","buttons","contextButton","csv","dateFormat","zones","timeLabel","createHighchartsOptionsTrend","dailyMinMaxDay","nDays","dailyHighchartsOptions","chunk","startDate","endDate","dayMoment","yMax","d","hidden","createHighchartsOptionsForDay","pageGroup","Array","end","defaultValue","minDate","maxDate","moveRangeOnFirstSelection","range","selection","ranges","key","showPreview","marginLeft","dayMax","dayAvg","truncateNumber","dayMin","lower","upper","timeExposed","calculateTimeInRange","timeInRange","effectiveDuration","timeInRangePct","teLabel","teValue","MAX_VALUE","currTime","currValue","prevTime","prevValue","currValueLimited","prevValueLimited","areaOfData","areaInRange","maxDecimalPoints","mult","Fullscreen","Option","OptionTitle","ReportSelector","selectedReport","setSelectedReport","mdiCalendarRangeOutline","mdiClipboardTextSearchOutline","GlobalStyle","createGlobalStyle","reset","App","dataUrl","csvFiles","preProcessUrl","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","brokenAxis","exportData","URLSearchParams","window","location","search","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.35b65022.chunk.js","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React from 'react';\nimport { Observable } from 'rxjs';\n\nexport type ObserverFunction<T> = () => Observable<T> | undefined;\n\n/** @see [useObservable(observableGenerator, deps, initialvalue?)] */\nexport function useObservable<T>(\n  observableGenerator: ObserverFunction<T>,\n  deps: React.DependencyList,\n): [T | undefined];\n\n/** @see [useObservable(observableGenerator, deps, initialvalue?)] */\nexport function useObservable<T>(\n  observableGenerator: ObserverFunction<T>,\n  deps: React.DependencyList,\n  initialValue: T,\n): [T];\n\n/**\n * A custom hook that exposes an observable as its latest emitted value.\n *\n * @param observableGenerator A factory function for the observable\n * @param deps The dependency array. When any of these dependencies changes, the observable will\n *   be regenerated.\n * @param initialValue The initial value of the observable value, before it emits its first value.\n *   When the dependency array changes, the value will not revert to the initial value.\n * @returns\n */\nexport function useObservable<T>(\n  observableGenerator: ObserverFunction<T>,\n  deps: React.DependencyList,\n  initialValue?: T,\n): [typeof initialValue] {\n  const [value, setValue] = React.useState<T | typeof initialValue>(\n    initialValue,\n  );\n  const cb = React.useCallback(observableGenerator, deps);\n\n  /** When the callback changes, reinvoke it and subscribe to the new observable. */\n  React.useEffect(() => {\n    const o = cb();\n    if (o !== undefined) {\n      // eslint-disable-next-line deprecation/deprecation\n      const sub = o.subscribe({\n        // eslint-disable-next-line no-console\n        error: (err) => console.error(err),\n        next: setValue,\n      });\n      return () => sub.unsubscribe();\n    }\n  }, [cb]);\n\n  return [value];\n}\n","import base64 from 'base64-js';\nimport _ from 'lodash';\nimport React from 'react';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport type FileType = 'image' | 'csv';\n\nexport type File = {\n  contentType: string;\n  data: string;\n  name: string;\n  size: number;\n  type: FileType;\n};\n\nexport type ProcessedFiles = {\n  files: File[];\n  unsupported: string[];\n};\n\nexport const FileStoreContext = React.createContext<FileStore>(\n  undefined as unknown as FileStore,\n);\n\nexport class FileStore {\n  private readonly files$$ = new BehaviorSubject<File[]>([]);\n  public readonly files$ = this.files$$.asObservable();\n\n  public filesByType$(type: FileType): Observable<File[]> {\n    return this.files$.pipe(map((fs) => fs.filter((f) => f.type === type)));\n  }\n\n  public async preProcessFiles(fileList: FileList): Promise<ProcessedFiles> {\n    const files: File[] = [];\n    const unsupported: string[] = [];\n\n    for (let i = 0; i < fileList.length; i++) {\n      const fileListItem = fileList.item(i);\n      if (fileListItem !== null) {\n        const file = await this.preProcessFileData(\n          fileListItem.name,\n          fileListItem.type,\n          () => fileListItem.arrayBuffer(),\n        );\n\n        if (file !== undefined) {\n          files.push(file);\n        } else {\n          unsupported.push(fileListItem.name);\n        }\n      }\n    }\n    return { files, unsupported };\n  }\n\n  public async preProcessUrl(url: string): Promise<ProcessedFiles> {\n    const response = await fetch(url);\n    const contentType = response.headers.get('content-type');\n    const name = url.split('?')[0].split('/').slice(-1)[0];\n    const file = await this.preProcessFileData(\n      name,\n      contentType === null ? 'application/octet-stream' : contentType,\n      () => response.arrayBuffer(),\n    );\n    if (file !== undefined) {\n      return { files: [file], unsupported: [] };\n    } else {\n      return { files: [], unsupported: [url] };\n    }\n  }\n\n  public async acceptFiles(files: File[]): Promise<void> {\n    this.files$$.next(\n      _.chain(this.files$$.value).concat(files).uniqBy('data').value(),\n    );\n  }\n\n  private async preProcessFileData(\n    name: string,\n    contentType: string,\n    readData: () => Promise<ArrayBuffer>,\n  ): Promise<File | undefined> {\n    const type = resolveFileType(name, contentType);\n    if (type !== undefined) {\n      const buffer = await readData();\n      const data = base64EncodeBuffer(buffer);\n      const size = buffer.byteLength;\n      return { contentType, data, name, size, type };\n    } else {\n      return undefined;\n    }\n  }\n}\n\nfunction base64EncodeBuffer(buf: ArrayBuffer): string {\n  return base64.fromByteArray(new Uint8Array(buf));\n}\n\nfunction resolveFileType(\n  name: string,\n  contentType: string,\n): FileType | undefined {\n  if (contentType.startsWith('text/csv')) {\n    return 'csv';\n  } else if (contentType.startsWith('image/')) {\n    return 'image';\n  } else if (contentType.startsWith('text/') && name.endsWith('csv')) {\n    return 'csv';\n  } else {\n    return undefined;\n  }\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { useObservable } from '../hooks/useObservable';\nimport { FileStoreContext } from '../services/FileStore';\n\nconst Container = styled.div`\n  min-height: 100%;\n  min-width: 100%;\n  position: relative;\n`;\n\nexport const FileDropZone: React.FC = ({ children }) => {\n  const fileService = React.useContext(FileStoreContext);\n  const [files] = useObservable(() => fileService.files$, [fileService], []);\n  const [fileUploadEl, setFileUploadEl] = React.useState<HTMLInputElement>();\n  const handleSelectFiles = React.useCallback(\n    async (files: FileList) => {\n      const preProcessed = await fileService.preProcessFiles(files);\n      await fileService.acceptFiles(preProcessed.files);\n    },\n    [fileService],\n  );\n\n  return (\n    <Container\n      onClick={() =>\n        files.length === 0 && fileUploadEl !== undefined\n          ? fileUploadEl.click()\n          : undefined\n      }\n      onDragOver={(ev) => {\n        ev.preventDefault();\n        ev.stopPropagation();\n      }}\n      onDrop={(ev) => {\n        ev.preventDefault();\n        ev.stopPropagation();\n        void handleSelectFiles(ev.dataTransfer.files);\n      }}\n      style={{\n        cursor: files.length === 0 ? 'pointer' : undefined,\n      }}\n    >\n      <input\n        multiple\n        onChange={(ev) => {\n          const files = ev.target.files;\n          if (files !== null && files.length > 0) {\n            void handleSelectFiles(files);\n          }\n        }}\n        ref={(el) => (el !== null ? setFileUploadEl(el) : undefined)}\n        style={{ display: 'none' }}\n        type=\"file\"\n      />\n      {children}\n    </Container>\n  );\n};\n","import base64 from 'base64-js';\nimport csvParse from 'csv-parse';\nimport moment from 'moment-timezone';\nimport React from 'react';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport { concatMap } from 'rxjs/operators';\n\nimport { FileStore } from './FileStore';\n\nexport type CsvLocale = 'ca' | 'us';\n\nexport type MetricValue<T> = {\n  time: number;\n  value: T;\n};\n\nexport type UnitConfig = {\n  fromMmolL: (mmolL: number) => number;\n  label: string;\n};\n\ntype CsvRecord = {\n  'Device Timestamp': string;\n  'Record Type': string;\n  'Historic Glucose mg/dL'?: string;\n  'Historic Glucose mmol/L'?: string;\n  'Scan Glucose mg/dL'?: string;\n  'Scan Glucose mmol/L'?: string;\n};\nexport const MetricsStoreContext = React.createContext<MetricsStore>(\n  undefined as unknown as MetricsStore,\n);\n\nexport class MetricsStore {\n  public static metricValuesToHighchartsPairs = <T>(\n    ms: MetricValue<T>[] | undefined,\n  ): [number, T][] | undefined => {\n    return ms !== undefined\n      ? ms.map(({ time, value }) => [time, value])\n      : undefined;\n  };\n\n  private customerDataTimeZone$$ = new BehaviorSubject('America/Toronto');\n  private customerDataLocale$$ = new BehaviorSubject<CsvLocale | undefined>(\n    undefined,\n  );\n\n  constructor(private readonly fileStore: FileStore) {}\n\n  public readonly locale$ = this.customerDataLocale$$.asObservable();\n\n  /** Observe changes to the blood glucose metrics. */\n  public readonly bloodGlucose$: Observable<MetricValue<number>[] | undefined> =\n    combineLatest([\n      this.fileStore.filesByType$('csv'),\n      this.customerDataTimeZone$$,\n    ])\n      .pipe(\n        concatMap(([files, customerDataTimeZone]) =>\n          of<() => Promise<MetricValue<number>[] | undefined>>(\n            // Whenever we get a new set of files, first emit undefined to signal that we should\n            // enter a loading / \"stale\" state for all consumers\n            () => Promise.resolve(undefined),\n            async () => {\n              const csvs = files.map((file) => {\n                return new TextDecoder('utf-8')\n                  .decode(base64.toByteArray(file.data))\n                  .replaceAll('\\r\\n', '\\n');\n              });\n              const timeValuesArr: {\n                data: Record<string, number>;\n                locale: CsvLocale;\n              }[] = await Promise.all(csvs.map(parseBloodGlucoseCsv));\n\n              const locale = timeValuesArr[0].locale;\n              this.customerDataLocale$$.next(locale);\n\n              const timeValues = timeValuesArr.reduce(\n                (acc, m) => ({ ...acc, ...m.data }),\n                {} as Record<string, number>,\n              );\n              return Object.keys(timeValues)\n                .map((timeStr) => {\n                  const value = timeValues[timeStr];\n                  const time = parseTime(locale, timeStr, customerDataTimeZone);\n                  return { time, value };\n                })\n                .sort((a, b) => a.time - b.time);\n            },\n          ),\n        ),\n      )\n      .pipe(concatMap((fn) => fn()));\n}\n\nfunction parseBloodGlucoseCsv(\n  input: string,\n): Promise<{ locale: CsvLocale; data: Record<string, number> }> {\n  return new Promise((accept, reject) => {\n    const rows = input.split('\\n').slice(1).join('\\n');\n    csvParse(rows, { columns: true }, (err, records: CsvRecord[]) => {\n      if (err !== undefined) {\n        return reject(err);\n      }\n\n      const locale = resolveLocale(records);\n      const data: Record<string, number> = {};\n      for (const record of records) {\n        const value = parseValue(locale, record);\n        if (value !== undefined) {\n          data[record['Device Timestamp']] = value;\n        }\n      }\n\n      accept({ data, locale });\n    });\n  });\n}\n\nfunction parseTime(locale: CsvLocale, str: string, tz: string): number {\n  const format = (() => {\n    switch (locale) {\n      case 'ca':\n        return 'DD-MM-YYYY HH:mm';\n      case 'us':\n        return 'MM-DD-YYYY hh:mm A';\n    }\n  })();\n  return moment.tz(str, format, tz).valueOf();\n}\n\nfunction parseValue(locale: CsvLocale, record: CsvRecord): number | undefined {\n  const value = (() => {\n    switch (locale) {\n      case 'ca':\n        return record['Record Type'] === '0'\n          ? parseFloat(record['Historic Glucose mmol/L'] ?? '')\n          : parseFloat(record['Scan Glucose mmol/L'] ?? '');\n      case 'us':\n        return record['Record Type'] === '0'\n          ? parseFloat(record['Historic Glucose mg/dL'] ?? '')\n          : parseFloat(record['Scan Glucose mg/dL'] ?? '');\n    }\n  })();\n\n  return !isNaN(value) ? value : undefined;\n}\n\nfunction resolveLocale([row]: CsvRecord[]): CsvLocale {\n  if (row !== undefined && 'Historic Glucose mg/dL' in row) {\n    return 'us';\n  } else {\n    return 'ca';\n  }\n}\n","import * as Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport * as HighchartsStock from 'highcharts/highstock';\nimport moment from 'moment-timezone';\nimport React from 'react';\nimport { map } from 'rxjs/operators';\n\nimport { useObservable } from '../hooks/useObservable';\nimport { MetricsStore, MetricsStoreContext } from '../services/MetricsStore';\n\nexport type ChartZoomablePropsMarker = {\n  color: string;\n  value: number;\n};\n\nexport type ChartZoomableProps = {\n  id?: string;\n  markers?: ChartZoomablePropsMarker[];\n  onChangeRange?: (start: number, end: number) => void;\n  onSelectTime?: (time: number) => void;\n  timezone: string;\n};\n\nexport const ChartZoomable: React.FC<ChartZoomableProps> = ({\n  id,\n  markers = [],\n  onChangeRange = () => undefined,\n  onSelectTime = () => undefined,\n  timezone,\n}) => {\n  const metricsStore = React.useContext(MetricsStoreContext);\n  const [overallBloodGlucose] = useObservable(\n    () =>\n      metricsStore.bloodGlucose$.pipe(\n        map(MetricsStore.metricValuesToHighchartsPairs),\n      ),\n    [metricsStore],\n  );\n  const highChartsOptions = React.useMemo(\n    () =>\n      overallBloodGlucose !== undefined\n        ? createHighchartsOptions(\n            timezone,\n            overallBloodGlucose,\n            markers,\n            onChangeRange,\n            onSelectTime,\n          )\n        : undefined,\n    [markers, onChangeRange, onSelectTime, overallBloodGlucose, timezone],\n  );\n\n  return (\n    <>\n      {highChartsOptions !== undefined ? (\n        <HighchartsReact\n          id={id}\n          constructorType=\"stockChart\"\n          highcharts={HighchartsStock}\n          options={highChartsOptions}\n        />\n      ) : undefined}\n    </>\n  );\n};\n\nfunction createHighchartsOptions(\n  timezone: string,\n  data: [number, number][],\n  markers: ChartZoomablePropsMarker[],\n  onChangeRange: (start: number, end: number) => void = () => undefined,\n  onSelectTime: (time: number) => void = () => undefined,\n): Highcharts.Options {\n  let rangeChangeTimeout: NodeJS.Timeout | undefined = undefined;\n  return {\n    chart: {\n      animation: false,\n      events: {\n        click: function (event) {\n          onSelectTime(this.xAxis[0].toValue(event.chartX));\n        },\n      },\n      height: 350,\n      margin: [15, 0, 60, 40],\n      style: {\n        fontFamily: 'Poppins',\n      },\n      type: 'spline',\n    },\n    colors: ['rgba(255, 102, 102, 1)'],\n    credits: {\n      enabled: false,\n    },\n    legend: {\n      enabled: false,\n    },\n    plotOptions: {\n      series: {\n        events: {\n          click: (event) => onSelectTime(event.point.x),\n        },\n        gapSize: 30 * 60 * 1000,\n        gapUnit: 'value',\n        marker: {\n          enabled: false,\n        },\n      },\n    },\n    series: [\n      {\n        data,\n        name: 'mmol/L',\n        type: 'spline',\n      },\n    ],\n    time: {\n      moment,\n      timezone,\n    },\n    title: {\n      text: '',\n    },\n    xAxis: {\n      dateTimeLabelFormats: {\n        day: \"%e. %b '%y\",\n        week: \"%e. %b '%y\",\n      },\n      events: {\n        setExtremes: (ev) => {\n          if (onChangeRange !== undefined) {\n            if (rangeChangeTimeout !== undefined) {\n              clearTimeout(rangeChangeTimeout);\n            }\n            rangeChangeTimeout = setTimeout(\n              () => onChangeRange(ev.min, ev.max),\n              500,\n            );\n          }\n        },\n      },\n      labels: {\n        rotation: -45,\n      },\n      ordinal: false,\n      plotLines: markers.map((m) => ({\n        width: 2,\n        ...m,\n      })),\n      type: 'datetime',\n    },\n    yAxis: {\n      plotBands: [\n        {\n          color: 'rgba(87, 220, 140, 0.2)',\n          from: 4.1,\n          to: 6,\n        },\n      ],\n      tickInterval: 0.5,\n      title: {\n        text: '',\n      },\n    },\n  };\n}\n","import Icon from '@mdi/react';\nimport styled from 'styled-components';\n\nexport type IconButtonProps = React.HTMLAttributes<HTMLButtonElement> & {\n  path: string;\n};\n\nconst Button = styled.button`\n  background: none;\n  border: solid 1px rgba(255, 255, 255, 0);\n  border-radius: 5px;\n  cursor: pointer;\n  display: inline-block;\n  height: 50px;\n  width: 50px;\n\n  &:hover,\n  &:focus {\n    border: solid 1px #eee;\n  }\n`;\n\nexport const IconButton: React.FC<IconButtonProps> = ({ path, ...props }) => {\n  return (\n    <Button {...props}>\n      <Icon path={path} />\n    </Button>\n  );\n};\n","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport styled from 'styled-components';\n\nexport type FadeInProps = React.HTMLAttributes<HTMLDivElement> & {\n  active: boolean;\n};\n\nconst Container = styled.div`\n  display: none;\n  transition: opacity 250ms ease-in;\n\n  &.enter,\n  &.enter-done,\n  &.exit {\n    display: block;\n  }\n\n  &.enter {\n    opacity: 0;\n  }\n  &.enter.enter-active {\n    opacity: 1;\n  }\n\n  &.exit {\n    opacity: 1;\n  }\n  &.exit.exit-active {\n    opacity: 0;\n  }\n`;\n\nexport const FadeIn: React.FC<FadeInProps> = ({\n  active,\n  children,\n  ...props\n}) => {\n  const containerRef = React.useRef(null);\n  return (\n    <CSSTransition\n      addEndListener={() => undefined}\n      in={active}\n      nodeRef={containerRef}\n      timeout={250}\n    >\n      <Container {...props} ref={containerRef}>\n        {children}\n      </Container>\n    </CSSTransition>\n  );\n};\n","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport styled from 'styled-components';\n\nexport type SlideFromRightProps = React.HTMLAttributes<HTMLDivElement> & {\n  active: boolean;\n};\n\nconst Container = styled.div`\n  transform: translateX(100%);\n  transition: transform 250ms ease-in;\n\n  &.enter {\n    transform: translateX(100%);\n  }\n\n  &.enter.enter-active,\n  &.enter-done {\n    transform: translateX(0);\n  }\n\n  &.exit {\n    transform: translateX(0);\n  }\n\n  &.exit.exit-active {\n    transform: translateX(100%);\n  }\n`;\n\nexport const SlideFromRight: React.FC<SlideFromRightProps> = ({\n  active,\n  children,\n  ...props\n}) => {\n  const containerRef = React.useRef(null);\n  return (\n    <CSSTransition\n      addEndListener={() => undefined}\n      in={active}\n      nodeRef={containerRef}\n      timeout={250}\n    >\n      <Container {...props} ref={containerRef}>\n        {children}\n      </Container>\n    </CSSTransition>\n  );\n};\n","import { mdiClose } from '@mdi/js';\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport { IconButton } from './IconButton';\nimport { FadeIn } from './transitions/FadeIn';\nimport { SlideFromRight } from './transitions/SlideFromRight';\n\nconst Mask = styled(FadeIn)`\n  background-color: rgba(0, 0, 0, 0.4);\n  bottom: 0;\n  left: 0;\n  position: fixed;\n  right: 0;\n  top: 0;\n  z-index: 1000;\n`;\n\nconst Container = styled(SlideFromRight)`\n  background-color: #fff;\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  overflow-x: hidden;\n  position: fixed;\n  right: 0;\n  top: 0;\n  width: auto;\n  z-index: 1000;\n\n  &.enter,\n  &.enter-done,\n  &.exit {\n    box-shadow: -3px 0px 10px 1px rgba(0, 0, 0, 0.5);\n  }\n`;\n\nconst Box = styled.div`\n  padding: 20px;\n`;\n\nconst Header = styled(Box)`\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n  z-index: 1;\n\n  &.scrolling {\n    box-shadow: 0px 3px 10px 1px rgba(0, 0, 0, 0.5);\n  }\n`;\n\nconst Title = styled.h1`\n  flex: 1;\n  font-size: 24px;\n  font-weight: 400;\n  white-space: nowrap;\n`;\n\nconst Body = styled(Box)`\n  flex: 1;\n  overflow-y: auto;\n`;\n\nexport type DrawerProps = React.HTMLAttributes<HTMLDivElement> & {\n  active: boolean;\n  onClose?: () => void;\n  title?: string;\n};\n\nexport const Drawer: React.FC<DrawerProps> = ({\n  active,\n  children,\n  onClose,\n  title,\n  ...props\n}) => {\n  const [isScrolling, setIsScrolling] = React.useState(false);\n\n  React.useEffect(() => {\n    if (active) {\n      document.body.style.overflow = 'hidden';\n    } else {\n      document.body.style.overflow = 'auto';\n    }\n  }, [active]);\n\n  return (\n    <>\n      <Mask active={active} onClick={onClose} />\n      <Container active={active}>\n        {title !== undefined || onClose !== undefined ? (\n          <Header className={isScrolling ? 'scrolling' : undefined}>\n            <Title>{title}</Title>\n            {onClose !== undefined ? (\n              <IconButton path={mdiClose} onClick={onClose} />\n            ) : undefined}\n          </Header>\n        ) : undefined}\n        <Body\n          {...props}\n          onScroll={(ev) => {\n            if (ev.currentTarget.scrollTop > 0) {\n              setIsScrolling(true);\n            } else {\n              setIsScrolling(false);\n            }\n          }}\n        >\n          {children}\n        </Body>\n      </Container>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const InputText = styled.input`\n  & {\n    border: solid 1px #ddd;\n    border-radius: 5px;\n    font-size: 16px;\n    margin-right: 10px;\n    padding: 10px;\n  }\n\n  &:focus {\n    border-color: #888;\n  }\n`;\n","import Icon from '@mdi/react';\nimport styled from 'styled-components';\n\nconst buttonSizePx = 75;\nconst colorDefault = '#ccc';\nconst colorHover = '#888';\n\nconst StalkingButtonContainer = styled.button`\n  background-color: #fff;\n  border: solid 1px ${colorDefault};\n  border-radius: ${buttonSizePx / 2}px;\n  color: ${colorDefault};\n  cursor: pointer;\n  display: block;\n  height: ${buttonSizePx}px;\n  margin: 25px;\n  padding: 0;\n  transition: border-color 250ms ease-in, color 250ms ease-in;\n  width: ${buttonSizePx}px;\n\n  &:hover,\n  &:focus {\n    border-color: ${colorHover};\n    color: ${colorHover};\n  }\n`;\n\nexport const StalkingButtonGroup = styled.div`\n  left: 0;\n  position: fixed;\n  top: 0;\n  z-index: 999;\n\n  @media print {\n    display: none;\n  }\n`;\n\nexport type StalkingButtonProps = React.HTMLAttributes<HTMLButtonElement> & {\n  path: string;\n};\n\nexport const StalkingButton: React.FC<StalkingButtonProps> = ({\n  path,\n  ...props\n}) => {\n  return (\n    <StalkingButtonContainer {...props}>\n      <Icon path={path} />\n    </StalkingButtonContainer>\n  );\n};\n","import { mdiChevronLeft, mdiCog, mdiTrashCanOutline } from '@mdi/js';\nimport * as Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport _ from 'lodash';\nimport moment from 'moment-timezone';\nimport React from 'react';\nimport { SketchPicker } from 'react-color';\nimport { map } from 'rxjs/operators';\nimport styled from 'styled-components';\n\nimport { ChartZoomable, ChartZoomablePropsMarker } from './ChartZoomable';\nimport { Drawer } from './Drawer';\nimport { IconButton } from './IconButton';\nimport { InputText } from './InputText';\nimport { StalkingButton, StalkingButtonGroup } from './StalkingButtonGroup';\n\nimport { useObservable } from 'src/hooks/useObservable';\nimport {\n  MetricsStore,\n  MetricsStoreContext,\n  UnitConfig,\n} from 'src/services/MetricsStore';\n\nexport type CaseStudiesProps = {\n  onBack: () => void;\n  timezone: string;\n};\n\nconst SettingsPanel = styled(Drawer)`\n  min-width: 50vw;\n`;\n\nconst SettingsSection = styled.div`\n  padding: 25px;\n\n  & label {\n    display: block;\n    margin-bottom: 15px;\n  }\n`;\n\nconst SettingsSectionTitle = styled.h2`\n  font-size: 18px;\n  font-weight: 500;\n  margin-bottom: 25px;\n`;\n\nconst SettingsCaseStudyList = styled.ul`\n  margin-top: 25px;\n`;\nconst SettingsCaseStudyListItem = styled.li`\n  align-items: center;\n  border-radius: 5px;\n  display: flex;\n  flex-direction: row;\n  font-size: 16px;\n  margin-bottom: 15px;\n  padding: 5px;\n\n  :hover {\n    background-color: #eee;\n  }\n\n  & > div {\n    align-items: center;\n    display: flex;\n    margin-right: 15px;\n  }\n\n  & > div:nth-child(1) {\n    width: 200px;\n  }\n\n  & > div:nth-child(2) {\n    width: 40px;\n  }\n\n  & > div:nth-child(3) {\n    flex: 1;\n  }\n\n  & > div:nth-child(3) > input {\n    width: 100%;\n  }\n`;\nconst SettingsCaseStudyListHeader = styled(SettingsCaseStudyListItem)`\n  font-size: 18px;\n  font-weight: 500;\n\n  :hover {\n    background: none;\n  }\n`;\n\nconst SettingsCaseStudyColorPreview = styled.button`\n  border: solid 1px #eee;\n  border-radius: 5px;\n  cursor: pointer;\n  display: block;\n  height: 3em;\n  overflow: visible;\n  position: relative;\n  width: 3em;\n`;\n\nconst SettingsCaseStudyColorEdit = styled.div`\n  background: none;\n  bottom: 0;\n  left: 4em;\n  position: absolute;\n`;\n\nconst SettingsGlucoseInput = styled(InputText)`\n  width: 50px;\n`;\n\nconst CaseStudyChartsContainer = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst CaseStudyChartsHeading = styled.h1`\n  font-size: 2em;\n  padding: 25px;\n  @media print {\n    display: none;\n  }\n`;\n\nconst CaseStudyChartsPageGroup = styled.div`\n  break-after: always;\n  break-inside: avoid;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  width: 11in;\n\n  @media print {\n    height: 8.3in;\n    margin-bottom: 0.2in;\n  }\n`;\n\nconst CaseStudyChartContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 0 20px;\n\n  &.hidden {\n    display: none;\n  }\n\n  @media print {\n    &.hidden {\n      display: flex;\n      visibility: hidden;\n    }\n  }\n`;\n\nconst CaseStudyChartHeading = styled.h2`\n  font-weight: 600;\n  margin: 5px 0 0 0;\n  text-align: center;\n  text-transform: uppercase;\n`;\n\nconst CaseStudyChartSubHeading = styled.h3`\n  font-weight: 400;\n  margin: 5px 0 0 0;\n  text-align: center;\n  text-transform: uppercase;\n`;\n\nconst CaseStudyChart = styled.div`\n  flex: 1;\n`;\n\ntype CaseStudyEntry = {\n  marker: ChartZoomablePropsMarker;\n  title?: string;\n};\n\nexport const CaseStudies: React.FC<CaseStudiesProps> = ({\n  onBack,\n  timezone,\n}) => {\n  const metricsStore = React.useContext(MetricsStoreContext);\n  const [overallBloodGlucose] = useObservable(\n    () =>\n      metricsStore.bloodGlucose$.pipe(\n        map(MetricsStore.metricValuesToHighchartsPairs),\n      ),\n    [metricsStore],\n  );\n  const [locale] = useObservable(() => metricsStore.locale$, [metricsStore]);\n  const unitConfig = React.useMemo<UnitConfig>(() => {\n    switch (locale) {\n      case undefined:\n      case 'ca':\n        return { fromMmolL: (n) => n, label: 'mmol/L' };\n      case 'us':\n        return {\n          fromMmolL: (n) => Math.round(n * 18.018018018),\n          label: 'mg/dL',\n        };\n    }\n  }, [locale]);\n\n  const [showSettings, setShowSettings] = React.useState(false);\n  const [hours, setHours] = React.useState(4);\n  const [entries, setEntries] = React.useState<CaseStudyEntry[]>([]);\n  const [overrideYMin, setOverrideYMin] = React.useState<number>();\n  const [overrideYMax, setOverrideYMax] = React.useState<number>();\n\n  const [charts, setCharts] = React.useState<\n    {\n      id: number;\n      subTitle?: string;\n      title: string;\n      options: Highcharts.Options;\n    }[]\n  >([]);\n\n  const [colorEditIndex, setColorEditIndex] = React.useState<number>();\n  const colorEditRef = React.createRef<HTMLDivElement>();\n\n  React.useEffect(() => {\n    const ref = colorEditRef.current;\n    if (ref !== null) {\n      const handle = (ev: MouseEvent) => {\n        if (ev.target === null || !ref.contains(ev.target as Node)) {\n          setColorEditIndex(undefined);\n        }\n      };\n      document.addEventListener('click', handle);\n      return () => document.removeEventListener('click', handle);\n    }\n  }, [colorEditRef]);\n\n  React.useEffect(() => {\n    if (entries.length === 0) {\n      setShowSettings(true);\n    }\n\n    if (overallBloodGlucose !== undefined) {\n      const durationMillis = hours * 60 * 60 * 1000;\n      let yMinValue = unitConfig.fromMmolL(3);\n      let yMaxValue = unitConfig.fromMmolL(8);\n\n      // Build the data\n      const dataByChartId: Record<number, [number, number][]> = {};\n      const ids = entries.map((e) => e.marker.value).sort();\n      for (const i of ids) {\n        dataByChartId[i] = [];\n      }\n\n      for (const [t, v] of overallBloodGlucose) {\n        for (let i = 0; i < ids.length && ids[i] <= t; i++) {\n          if (t < ids[i] + durationMillis) {\n            yMinValue = Math.min(yMinValue, v);\n            yMaxValue = Math.max(yMaxValue, v);\n            dataByChartId[ids[i]].push([t - ids[i], v]);\n          }\n        }\n      }\n\n      const comparisonChart = {\n        id: 0,\n        options: createHighchartsOptionsForCaseStudy(\n          entries.map((entry) => ({\n            color: entry.marker.color,\n            data: dataByChartId[entry.marker.value],\n            title:\n              entry.title !== undefined\n                ? entry.title\n                : formatDateTimeShort(entry.marker.value, timezone),\n          })),\n          unitConfig,\n          {\n            max: durationMillis,\n            min: 0,\n          },\n          {\n            max:\n              overrideYMax === undefined\n                ? Math.ceil(yMaxValue * 2) / 2\n                : overrideYMax,\n            min:\n              overrideYMin === undefined\n                ? Math.floor(yMinValue * 2) / 2\n                : overrideYMin,\n          },\n          false,\n        ),\n        title: 'Overall',\n      };\n\n      const studyCharts = entries.map((entry) => ({\n        id: entry.marker.value,\n        options: createHighchartsOptionsForCaseStudy(\n          [\n            {\n              color: entry.marker.color,\n              data: dataByChartId[entry.marker.value],\n              title: '',\n            },\n          ],\n          unitConfig,\n          {\n            max: durationMillis,\n            min: 0,\n          },\n          {\n            max:\n              overrideYMax === undefined\n                ? Math.ceil(yMaxValue * 2) / 2\n                : overrideYMax,\n            min:\n              overrideYMin === undefined\n                ? Math.floor(yMinValue * 2) / 2\n                : overrideYMin,\n          },\n          true,\n        ),\n        subTitle: entry.title,\n        title: formatDateTimeLong(entry.marker.value, timezone),\n      }));\n\n      setCharts([comparisonChart, ...studyCharts]);\n    }\n  }, [\n    hours,\n    entries,\n    overallBloodGlucose,\n    overrideYMax,\n    overrideYMin,\n    timezone,\n    unitConfig,\n  ]);\n\n  return (\n    <>\n      <StalkingButtonGroup>\n        <StalkingButton path={mdiChevronLeft} onClick={onBack} />\n        <StalkingButton path={mdiCog} onClick={() => setShowSettings(true)} />\n      </StalkingButtonGroup>\n      {charts.length > 0 ? (\n        <CaseStudyChartsContainer>\n          <CaseStudyChartsHeading>Case Studies</CaseStudyChartsHeading>\n          {charts.map(({ id, options, subTitle, title }) => {\n            return (\n              <CaseStudyChartsPageGroup key={id}>\n                <CaseStudyChartContainer>\n                  <CaseStudyChartHeading>{title}</CaseStudyChartHeading>\n                  {subTitle !== undefined ? (\n                    <CaseStudyChartSubHeading>\n                      {subTitle}\n                    </CaseStudyChartSubHeading>\n                  ) : undefined}\n                  <CaseStudyChart>\n                    <HighchartsReact\n                      highcharts={Highcharts}\n                      id={`chart-${id}`}\n                      options={options}\n                    />\n                  </CaseStudyChart>\n                </CaseStudyChartContainer>\n              </CaseStudyChartsPageGroup>\n            );\n          })}\n        </CaseStudyChartsContainer>\n      ) : undefined}\n\n      <SettingsPanel\n        active={showSettings}\n        onClose={() => setShowSettings(false)}\n        title=\"Settings\"\n      >\n        <SettingsSection>\n          <SettingsSectionTitle>Case Studies</SettingsSectionTitle>\n          <ChartZoomable\n            markers={entries.map((e) => e.marker)}\n            onSelectTime={(value) =>\n              setEntries((es) =>\n                _.chain(es)\n                  .concat({\n                    marker: { color: 'red', value },\n                  })\n                  .uniqBy((e) => e.marker.value)\n                  .sortBy((e) => e.marker.value)\n                  .value(),\n              )\n            }\n            timezone={timezone}\n          />\n          <SettingsCaseStudyList>\n            <SettingsCaseStudyListHeader>\n              <div>Date &amp; Time</div>\n              <div> </div>\n              <div>Name</div>\n            </SettingsCaseStudyListHeader>\n            {entries.map((entry, i0) => (\n              <SettingsCaseStudyListItem key={entry.marker.value}>\n                <div>{formatDateTimeShort(entry.marker.value, timezone)}</div>\n                <div>\n                  <SettingsCaseStudyColorPreview\n                    onClick={() => setColorEditIndex(i0)}\n                    style={{ backgroundColor: entry.marker.color }}\n                  >\n                    {colorEditIndex === i0 ? (\n                      <SettingsCaseStudyColorEdit ref={colorEditRef}>\n                        <SketchPicker\n                          color={entry.marker.color}\n                          disableAlpha={true}\n                          onChangeComplete={(color) =>\n                            setEntries((es) =>\n                              es.map((e, i1) =>\n                                i0 === i1\n                                  ? {\n                                      ...e,\n                                      marker: { ...e.marker, color: color.hex },\n                                    }\n                                  : e,\n                              ),\n                            )\n                          }\n                        />\n                      </SettingsCaseStudyColorEdit>\n                    ) : (\n                      ' '\n                    )}\n                  </SettingsCaseStudyColorPreview>\n                </div>\n                <div>\n                  <InputText\n                    onFocus={(ev) => {\n                      if (\n                        ev.target.value.trim() === '' &&\n                        entry.title !== undefined\n                      ) {\n                        ev.target.value = entry.title;\n                      }\n                    }}\n                    onBlur={(ev) => {\n                      const value = ev.target.value.trim();\n                      const title = value === '' ? undefined : value;\n                      setEntries((es) =>\n                        es.map((e, i1) => (i0 === i1 ? { ...e, title } : e)),\n                      );\n                    }}\n                    placeholder={entry.title}\n                  />\n                </div>\n                <div>\n                  <IconButton\n                    onClick={() =>\n                      setEntries((ms) => ms.filter((_, i1) => i1 !== i0))\n                    }\n                    path={mdiTrashCanOutline}\n                  />\n                </div>\n              </SettingsCaseStudyListItem>\n            ))}\n          </SettingsCaseStudyList>\n        </SettingsSection>\n        <SettingsSection>\n          <SettingsSectionTitle>Parameters</SettingsSectionTitle>\n          <label>\n            Duration:{' '}\n            <InputText\n              max=\"23\"\n              min=\"1\"\n              placeholder={hours.toString()}\n              type=\"number\"\n              onBlur={(ev) => {\n                const nextHours = parseFloat(ev.target.value.trim());\n                if (!isNaN(nextHours)) {\n                  setHours(nextHours);\n                }\n              }}\n            />{' '}\n            (hours)\n          </label>\n          <label>\n            Min Glucose:{' '}\n            <SettingsGlucoseInput\n              placeholder={\n                overrideYMin === undefined ? undefined : overrideYMin.toString()\n              }\n              onBlur={(ev) => {\n                const value = parseFloat(ev.target.value.trim());\n                setOverrideYMin(isNaN(value) ? undefined : value);\n              }}\n            />\n          </label>\n          <label>\n            Max Glucose:{' '}\n            <SettingsGlucoseInput\n              placeholder={\n                overrideYMax === undefined ? undefined : overrideYMax.toString()\n              }\n              onBlur={(ev) => {\n                const value = parseFloat(ev.target.value.trim());\n                setOverrideYMax(isNaN(value) ? undefined : value);\n              }}\n            />\n          </label>\n        </SettingsSection>\n      </SettingsPanel>\n    </>\n  );\n};\n\nfunction createHighchartsOptionsForCaseStudy(\n  data: {\n    color: string;\n    data: [number, number][];\n    title: string;\n  }[],\n  unitConfig: UnitConfig,\n  xMinMax: { min: number; max: number },\n  yMinMax: {\n    min: number;\n    max: number;\n  },\n  includeLabels: boolean,\n): Highcharts.Options {\n  const values = data.flatMap((p) => p.data).map((p) => p[1]);\n\n  const chartAvg =\n    values.length > 0\n      ? Math.round(\n          (values.reduce((sum, v) => sum + v, 0) * 10) / values.length,\n        ) / 10\n      : 'N/A';\n  const chartMax = Math.max(...values);\n  const timeToPeak =\n    includeLabels && data.length === 1\n      ? calculateTimeToMax(data[0].data)\n      : undefined;\n  const timeToBaseline =\n    timeToPeak !== undefined\n      ? calculateTimeToBaseline(\n          data[0].data[0][1] * 1.2,\n          data[0].data.filter(([t]) => t > timeToPeak),\n        )\n      : undefined;\n\n  const hasLegend = data.length > 1;\n\n  return {\n    chart: {\n      events: {\n        render() {\n          const ctx = this as unknown as {\n            _qhLabels?: Highcharts.SVGElement[];\n          };\n          const labels = ctx._qhLabels;\n          if (labels !== undefined) {\n            labels.forEach((l) => l.destroy());\n            delete ctx._qhLabels;\n          }\n\n          if (timeToPeak !== undefined && timeToBaseline !== undefined) {\n            const chartPaddingTop = 28.5;\n            const lineHeight = 18.5;\n            const labelX = 45;\n            const valueX = labelX + 132;\n\n            const attrs = {\n              fill: '#999',\n              zIndex: 1,\n            };\n\n            const ttpLabel = this.renderer.text(`TIME TO PEAK:`, 0).add();\n            ttpLabel.attr({\n              ...attrs,\n              x: labelX,\n              y: chartPaddingTop,\n            });\n            const ttpValue = this.renderer\n              .text(\n                `<b>${moment\n                  .duration(timeToPeak, 'milliseconds')\n                  .format(() =>\n                    timeToPeak > 60 * 60 * 1000 ? 'h[h] m[m]' : 'm[m]',\n                  )}</b>`,\n                0,\n              )\n              .add();\n            ttpValue.attr({\n              ...attrs,\n              x: valueX,\n              y: chartPaddingTop,\n            });\n\n            const maxLabel = this.renderer.text('GLUCOSE PEAK:', 0).add();\n            maxLabel.attr({\n              ...attrs,\n              x: labelX,\n              y: chartPaddingTop + lineHeight,\n            });\n            const maxValue = this.renderer.text(`<b>${chartMax}</b>`, 0).add();\n            maxValue.attr({\n              ...attrs,\n              x: valueX,\n              y: chartPaddingTop + lineHeight,\n            });\n\n            const avgLabel = this.renderer.text('AVERAGE GLUCOSE:', 0).add();\n            avgLabel.attr({\n              ...attrs,\n              x: labelX,\n              y: chartPaddingTop + lineHeight * 2,\n            });\n            const avgValue = this.renderer.text(`<b>${chartAvg}</b>`, 0).add();\n            avgValue.attr({\n              ...attrs,\n              x: valueX,\n              y: chartPaddingTop + lineHeight * 2,\n            });\n\n            const ttbLabel = this.renderer.text('TIME TO BASELINE:', 0).add();\n            ttbLabel.attr({\n              ...attrs,\n              x: labelX,\n              y: chartPaddingTop + lineHeight * 3,\n            });\n            const ttbValue = this.renderer\n              .text(\n                `<b>${\n                  timeToBaseline !== -1\n                    ? moment\n                        .duration(timeToBaseline, 'milliseconds')\n                        .format(() =>\n                          timeToBaseline > 60 * 60 * 1000\n                            ? 'h[h] m[m]'\n                            : 'm[m]',\n                        )\n                    : 'N/A'\n                }</b>`,\n                0,\n              )\n              .add();\n            ttbValue.attr({\n              ...attrs,\n              x: valueX,\n              y: chartPaddingTop + lineHeight * 3,\n            });\n\n            ctx._qhLabels = [\n              ttpLabel,\n              ttpValue,\n              maxLabel,\n              maxValue,\n              avgLabel,\n              avgValue,\n              ttbLabel,\n              ttbValue,\n            ];\n          }\n        },\n      },\n      height: 225,\n      margin: [15, 0, hasLegend ? 80 : 30, 40],\n      style: {\n        fontFamily: 'Poppins',\n      },\n      type: 'spline',\n    },\n    colors: data.map(({ color }) => color),\n    credits: {\n      enabled: false,\n    },\n    legend: {\n      enabled: hasLegend,\n    },\n    plotOptions: {\n      series: {\n        gapSize: 30 * 60 * 1000,\n        gapUnit: 'value',\n        marker: {\n          enabled: true,\n          radius: 2,\n        },\n      },\n    },\n    series: data.map(({ data, title }) => ({\n      data,\n      name: title,\n      type: 'spline',\n    })),\n    time: {\n      moment,\n      timezone: 'UTC',\n    },\n    title: {\n      text: '',\n    },\n    xAxis: {\n      ...xMinMax,\n      dateTimeLabelFormats: {\n        day: '%H:%M',\n      },\n      type: 'datetime',\n    },\n    yAxis: {\n      ...yMinMax,\n      plotBands: [\n        {\n          color: 'rgba(87, 220, 140, 0.2)',\n          from: unitConfig.fromMmolL(4.1),\n          to: unitConfig.fromMmolL(6),\n        },\n      ],\n      plotLines: _.compact([\n        chartMax !== undefined\n          ? {\n              color: '#aaa',\n              dashStyle: 'Dot',\n              value: chartMax,\n              width: 2,\n              zIndex: 2,\n            }\n          : undefined,\n        {\n          color: 'rgba(65, 165, 105, 1)',\n          dashStyle: 'Dash',\n          value: unitConfig.fromMmolL(5),\n          width: 4,\n          zIndex: 2,\n        },\n      ]),\n      tickInterval: unitConfig.fromMmolL(0.5),\n      title: {\n        text: '',\n      },\n    },\n  };\n}\n\nfunction calculateTimeToMax(data: [number, number][]): number {\n  const maxDataPoint = data.reduce<[number, number]>(\n    (acc, curr) => (curr[1] > acc[1] ? curr : acc),\n    [-1, Number.MIN_VALUE],\n  );\n  return maxDataPoint[0];\n}\n\nfunction calculateTimeToBaseline(\n  baseline: number,\n  data: [number, number][],\n): number {\n  for (const [t, v] of data) {\n    if (v <= baseline) {\n      return t;\n    }\n  }\n  return -1;\n}\n\nfunction formatDateTimeLong(millis: number, timezone: string) {\n  return moment.tz(new Date(millis), timezone).format('dddd, MMMM Do @ h:mm A');\n}\n\nfunction formatDateTimeShort(millis: number, timezone: string) {\n  return moment.tz(new Date(millis), timezone).format('MMMM Do @ h:mm A');\n}\n","/* eslint-disable no-console */\nimport { mdiChevronLeft, mdiCog } from '@mdi/js';\nimport * as Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport _ from 'lodash';\nimport moment from 'moment-timezone';\nimport React from 'react';\nimport { DateRangePicker, Range } from 'react-date-range';\nimport { map } from 'rxjs/operators';\nimport styled from 'styled-components';\n\nimport { useObservable } from '../hooks/useObservable';\nimport { MetricsStoreContext, UnitConfig } from '../services/MetricsStore';\nimport { ChartZoomable } from './ChartZoomable';\nimport { Drawer } from './Drawer';\nimport { InputText } from './InputText';\nimport { StalkingButton, StalkingButtonGroup } from './StalkingButtonGroup';\n\nconst nChartsPerPage = 3;\n\nconst aboveThresholdTarget = 7.2;\nconst belowThresholdTarget = 5;\n\nconst SettingsPanel = styled(Drawer)`\n  min-width: 50vw;\n`;\n\nconst SettingsSection = styled.div`\n  padding: 25px;\n`;\n\nconst SettingsSectionTitle = styled.h2`\n  font-size: 18px;\n  font-weight: 500;\n  margin-bottom: 25px;\n`;\n\nconst SettingsSectionSubTitle = styled.h3`\n  font-size: 16px;\n  font-weight: 400;\n  margin-bottom: 15px;\n`;\n\nconst SettingsNumberInput = styled(InputText)`\n  width: 50px;\n`;\n\nconst DailyChartsContainer = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst DailyChartsHeading = styled.h1`\n  font-size: 2em;\n  padding: 25px;\n  @media print {\n    display: none;\n  }\n`;\n\nconst DateRangePickerContainer = styled.div`\n  padding: 25px;\n  @media print {\n    display: none;\n  }\n`;\n\nconst DailyChartsPageGroup = styled.div`\n  break-after: always;\n  break-inside: avoid;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  width: 11in;\n\n  @media print {\n    height: 8.3in;\n    margin-bottom: 0.2in;\n  }\n`;\n\nconst DailyChartContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 0 20px;\n\n  &.hidden {\n    display: none;\n  }\n\n  @media print {\n    &.hidden {\n      display: flex;\n      visibility: hidden;\n    }\n  }\n`;\n\nconst DailyChartHeading = styled.h2`\n  font-weight: 600;\n  margin: 5px 0 0 0;\n  text-align: center;\n  text-transform: uppercase;\n`;\n\nconst DailyChart = styled.div`\n  flex: 1;\n`;\n\ntype DayData<D = [number, number][]> = {\n  day: string;\n  data: D;\n};\n\nexport type DailyChartsProps = React.HTMLAttributes<HTMLDivElement> & {\n  onBack: () => void;\n  timezone: string;\n};\n\nexport const DailyCharts: React.FC<DailyChartsProps> = ({\n  onBack,\n  timezone,\n  ...divProps\n}) => {\n  const metricsStore = React.useContext(MetricsStoreContext);\n  const [dayFilter, setDayFilter] = React.useState<Range>();\n  const [showSettings, setShowSettings] = React.useState(false);\n\n  const [overrideYMax, setOverrideYMax] = React.useState<number>();\n  const [overrideYMin, setOverrideYMin] = React.useState<number>();\n\n  const [locale] = useObservable(() => metricsStore.locale$, [metricsStore]);\n  const unitConfig = React.useMemo<UnitConfig>(() => {\n    switch (locale) {\n      case undefined:\n      case 'ca':\n        return { fromMmolL: (n) => n, label: 'mmol/L' };\n      case 'us':\n        return {\n          fromMmolL: (n) => Math.round(n * 18.018018018),\n          label: 'mg/dL',\n        };\n    }\n  }, [locale]);\n\n  const [bloodGlucose] = useObservable(\n    () =>\n      metricsStore.bloodGlucose$.pipe(\n        map((ms) => ms?.map<[number, number]>((m) => [m.time, m.value])),\n      ),\n    [metricsStore],\n  );\n  const dailyBloodGlucose = React.useMemo<DayData[] | undefined>(() => {\n    if (bloodGlucose !== undefined) {\n      return _.chain(bloodGlucose)\n        .groupBy(([time]) => moment(time).tz(timezone).format('YYYY-MM-DD'))\n        .toPairs()\n        .map(([day, data]) => ({ data, day }))\n        .sortBy('day')\n        .value();\n    } else {\n      return undefined;\n    }\n  }, [bloodGlucose, timezone]);\n\n  const [trendMinMaxTime, setTrendMinMaxTime] =\n    React.useState<[number, number]>();\n  const [trendFastingMinutesOfDay, setTrendFastingMinutesOfDay] =\n    React.useState<number | undefined>(240);\n  const trendFastingMinutesOfDayLabel = React.useMemo(\n    () =>\n      trendFastingMinutesOfDay !== undefined\n        ? moment()\n            .startOf('day')\n            .add(trendFastingMinutesOfDay, 'minutes')\n            .format('LT')\n        : '',\n    [trendFastingMinutesOfDay],\n  );\n  const trendFastingGlucose = React.useMemo<\n    DayData<number | null>[] | undefined\n  >(() => {\n    if (\n      dailyBloodGlucose !== undefined &&\n      trendFastingMinutesOfDay !== undefined\n    ) {\n      const [min, max] = trendMinMaxTime ?? [0, Date.now()];\n      const mMin = moment(min).tz(timezone);\n      const mMax = moment(max).tz(timezone);\n\n      return dailyBloodGlucose\n        .filter(({ day }) => {\n          const m = moment(day).tz(timezone);\n          const start = m.clone().startOf('day');\n          const end = m.clone().endOf('day');\n          return end.isSameOrAfter(mMin) && start.isSameOrBefore(mMax);\n        })\n        .map(({ data, day }) => {\n          // Get the data within the fasting range\n          const fastingTime = moment(day)\n            .tz(timezone)\n            .startOf('day')\n            .add(trendFastingMinutesOfDay, 'minutes');\n          const fastingTimeMillis = fastingTime.toDate().getTime();\n          const low = fastingTime.clone().subtract(15, 'minutes');\n          const high = fastingTime.clone().add(15, 'minutes');\n          const dataInRange = data.filter(([time]) => {\n            const m = moment(time).tz(timezone);\n            return m.isSameOrAfter(low) && m.isSameOrBefore(high);\n          });\n          const fastingGlucose = dataInRange.sort(\n            ([a], [b]) =>\n              Math.abs(a - fastingTimeMillis) - Math.abs(b - fastingTimeMillis),\n          )[0];\n          return {\n            data: fastingGlucose?.[1] ?? null,\n            day,\n          };\n        });\n    } else {\n      return undefined;\n    }\n  }, [dailyBloodGlucose, trendFastingMinutesOfDay, trendMinMaxTime, timezone]);\n  const trendHighchartsOptions = React.useMemo(() => {\n    return trendFastingGlucose !== undefined && trendFastingGlucose.length > 1\n      ? createHighchartsOptionsTrend(\n          timezone,\n          trendFastingGlucose.map(({ day, data }) => [\n            moment(day).tz(timezone).startOf('day').toDate().getTime(),\n            data,\n          ]),\n          unitConfig,\n          {\n            fasting: {\n              timeLabel: trendFastingMinutesOfDayLabel,\n            },\n            xMinMax: {\n              max: moment(\n                trendFastingGlucose[trendFastingGlucose.length - 1].day,\n              )\n                .tz(timezone)\n                .startOf('day')\n                .toDate()\n                .getTime(),\n              min: moment(trendFastingGlucose[0].day)\n                .tz(timezone)\n                .startOf('day')\n                .toDate()\n                .getTime(),\n            },\n          },\n        )\n      : undefined;\n  }, [\n    trendFastingGlucose,\n    trendFastingMinutesOfDayLabel,\n    timezone,\n    unitConfig,\n  ]);\n\n  const dailyMinMaxDay = React.useMemo(() => {\n    if (dailyBloodGlucose !== undefined) {\n      const nDays = dailyBloodGlucose.length;\n      if (nDays > 0) {\n        return [\n          moment(dailyBloodGlucose[0].day, 'YYYY-MM-DD').tz(timezone),\n          moment(dailyBloodGlucose[nDays - 1].day, 'YYYY-MM-DD').tz(timezone),\n        ];\n      } else {\n        return undefined;\n      }\n    }\n  }, [dailyBloodGlucose, timezone]);\n  const dailyHighchartsOptions = React.useMemo(() => {\n    if (dailyBloodGlucose !== undefined) {\n      const filter = ({ day }: DayData) => {\n        if (\n          dayFilter !== undefined &&\n          dayFilter.startDate !== undefined &&\n          dayFilter.endDate !== undefined\n        ) {\n          const dayMoment = moment(day, 'YYYY-M-DD').tz(timezone);\n          return (\n            dayMoment.isSameOrAfter(dayFilter.startDate) &&\n            dayMoment.isSameOrBefore(dayFilter.endDate)\n          );\n        } else {\n          return true;\n        }\n      };\n\n      return _.chunk(\n        dailyBloodGlucose.filter(filter).map(({ data, day }) => {\n          const m = moment.tz(day, timezone);\n          const xMinMax = {\n            max: m.endOf('day').toDate().getTime(),\n            min: m.startOf('day').toDate().getTime(),\n          };\n          const yMax =\n            overrideYMax === undefined\n              ? Math.ceil(\n                  Math.min(\n                    Math.max(unitConfig.fromMmolL(8), ...data.map((d) => d[1])),\n                    unitConfig.fromMmolL(12),\n                  ) * 2,\n                ) / 2\n              : unitConfig.fromMmolL(overrideYMax);\n          const yMinMax = {\n            max: Math.ceil(yMax * 2) / 2,\n            min: unitConfig.fromMmolL(\n              overrideYMin === undefined ? 3 : overrideYMin,\n            ),\n          };\n          return {\n            hidden: false,\n            options: createHighchartsOptionsForDay(\n              timezone,\n              data,\n              unitConfig,\n              xMinMax,\n              yMinMax,\n            ),\n            title: m.format('dddd, MMMM Do YYYY'),\n          };\n        }),\n        nChartsPerPage,\n      );\n    } else {\n      return undefined;\n    }\n  }, [\n    dailyBloodGlucose,\n    dayFilter,\n    overrideYMax,\n    overrideYMin,\n    timezone,\n    unitConfig,\n  ]);\n\n  return (\n    <>\n      <StalkingButtonGroup>\n        <StalkingButton path={mdiChevronLeft} onClick={onBack} />\n        <StalkingButton path={mdiCog} onClick={() => setShowSettings(true)} />\n      </StalkingButtonGroup>\n      <DailyChartsContainer {...divProps}>\n        <DailyChartsHeading>Trends</DailyChartsHeading>\n        {trendHighchartsOptions !== undefined ? (\n          <DailyChartsPageGroup key={`page-group-overall`}>\n            <DailyChartContainer>\n              <DailyChart>\n                <HighchartsReact\n                  highcharts={Highcharts}\n                  options={{ ...trendHighchartsOptions }}\n                />\n              </DailyChart>\n            </DailyChartContainer>\n          </DailyChartsPageGroup>\n        ) : undefined}\n        <DailyChartsHeading>Daily</DailyChartsHeading>\n        {dailyHighchartsOptions !== undefined\n          ? dailyHighchartsOptions.map((pageGroup) => (\n              <DailyChartsPageGroup key={`page-group-${pageGroup[0].title}`}>\n                {pageGroup\n                  .concat(\n                    // Concatenate dummy charts to fill up each page of 3. This ensures that 1 or\n                    // 2 charts on a page is always layed out the same way incrementally as a 3-chart\n                    // page. This is for print consistency when have 1 day, then 2, then 3 on a page.\n                    new Array(nChartsPerPage - pageGroup.length).fill({\n                      ...pageGroup[0],\n                      hidden: true,\n                      options: {\n                        ...pageGroup[0].options,\n                        chart: {\n                          ...pageGroup[0].options.chart,\n                          // Don't invoke any load events for the page-filler items\n                          events: {},\n                        },\n                      },\n                    }),\n                  )\n                  .map(({ hidden = false, title, options }, i) => {\n                    return (\n                      <DailyChartContainer\n                        className={hidden ? 'hidden' : 'visible'}\n                        key={i}\n                      >\n                        <DailyChartHeading>{title}</DailyChartHeading>\n                        <DailyChart>\n                          <HighchartsReact\n                            highcharts={Highcharts}\n                            key={`chart-${title}`}\n                            options={options}\n                          />\n                        </DailyChart>\n                      </DailyChartContainer>\n                    );\n                  })}\n              </DailyChartsPageGroup>\n            ))\n          : undefined}\n      </DailyChartsContainer>\n      <SettingsPanel\n        active={showSettings}\n        onClose={() => setShowSettings(false)}\n        title=\"Settings\"\n      >\n        <SettingsSection>\n          <SettingsSectionTitle>Trend Chart Settings</SettingsSectionTitle>\n          <ChartZoomable\n            id=\"overall-range-filter\"\n            onChangeRange={(start, end) => setTrendMinMaxTime([start, end])}\n            timezone={timezone}\n          />\n          <label>\n            Fasting time (minutes from 12AM):{' '}\n            <SettingsNumberInput\n              defaultValue=\"240\"\n              onBlur={(ev) => {\n                const value = parseFloat(ev.target.value.trim());\n                setTrendFastingMinutesOfDay(isNaN(value) ? undefined : value);\n              }}\n              placeholder={trendFastingMinutesOfDay?.toString() ?? ''}\n            />\n          </label>\n        </SettingsSection>\n        <SettingsSection>\n          <SettingsSectionTitle>Daily Charts Settings</SettingsSectionTitle>\n          {dailyMinMaxDay !== undefined\n            ? (() => {\n                const [minDate, maxDate] = dailyMinMaxDay.map((m) =>\n                  m.toDate(),\n                );\n                return (\n                  <>\n                    <SettingsSectionSubTitle>\n                      Selected Date Range:\n                    </SettingsSectionSubTitle>\n                    <DateRangePickerContainer>\n                      <DateRangePicker\n                        maxDate={maxDate}\n                        minDate={minDate}\n                        moveRangeOnFirstSelection={false}\n                        onChange={(range) => {\n                          if ('selection' in range) {\n                            setDayFilter(range.selection);\n                          }\n                        }}\n                        ranges={[\n                          dayFilter === undefined\n                            ? {\n                                endDate: maxDate,\n                                key: 'selection',\n                                startDate: minDate,\n                              }\n                            : dayFilter,\n                        ]}\n                        showPreview\n                      />\n                    </DateRangePickerContainer>\n                  </>\n                );\n              })()\n            : undefined}\n          <SettingsSectionSubTitle>\n            Selected Glucose Range:\n          </SettingsSectionSubTitle>\n          <label>\n            Min:{' '}\n            <SettingsNumberInput\n              onBlur={(ev) => {\n                const value = parseFloat(ev.target.value.trim());\n                setOverrideYMin(isNaN(value) ? undefined : value);\n              }}\n              placeholder={\n                overrideYMin !== undefined ? overrideYMin.toString() : ''\n              }\n            />\n          </label>\n          <label style={{ marginLeft: '15px' }}>\n            Max:{' '}\n            <SettingsNumberInput\n              onBlur={(ev) => {\n                const value = parseFloat(ev.target.value.trim());\n                setOverrideYMax(isNaN(value) ? undefined : value);\n              }}\n              placeholder={\n                overrideYMax !== undefined ? overrideYMax.toString() : ''\n              }\n            />\n          </label>\n        </SettingsSection>\n      </SettingsPanel>\n    </>\n  );\n};\n\nfunction createHighchartsOptionsTrend(\n  timezone: string,\n  data: [number, number | null][],\n  unitConfig: UnitConfig,\n  {\n    fasting,\n    onRangeChange,\n    xMinMax,\n  }: {\n    fasting: {\n      timeLabel: string;\n    };\n    onRangeChange?: (start: number, end: number) => void;\n    xMinMax: { min: number; max: number };\n  },\n): Highcharts.Options {\n  let rangeChangeTimeout: NodeJS.Timeout | undefined = undefined;\n  return {\n    chart: {\n      animation: false,\n      height: 225,\n      margin: [15, 0, 100, 40],\n      style: {\n        fontFamily: 'Poppins',\n      },\n      type: 'spline',\n    },\n    colors: ['rgba(65, 165, 105, 1)'],\n    credits: {\n      enabled: false,\n    },\n    exporting: {\n      buttons: {\n        contextButton: {\n          className: 'no-print',\n          enabled: true,\n        },\n      },\n      csv: {\n        dateFormat: '%Y-%m-%d',\n      },\n    },\n    legend: {\n      enabled: true,\n    },\n    plotOptions: {\n      series: {\n        marker: {\n          enabled: true,\n        },\n        zones: [\n          {\n            color: 'rgba(65, 165, 105, 1)',\n            value: unitConfig.fromMmolL(4.8),\n          },\n          {\n            color: 'orange',\n          },\n        ],\n      },\n    },\n    series: [\n      {\n        data,\n        name: `Fasting (${fasting.timeLabel}) (${unitConfig.label})`,\n        type: 'spline',\n      },\n    ],\n    time: {\n      moment,\n      timezone,\n    },\n    title: {\n      text: '',\n    },\n    xAxis: {\n      ...xMinMax,\n      dateTimeLabelFormats: {\n        day: \"%e. %b '%y\",\n        week: \"%e. %b '%y\",\n      },\n      events: {\n        setExtremes: (ev) => {\n          if (onRangeChange !== undefined) {\n            if (rangeChangeTimeout !== undefined) {\n              clearTimeout(rangeChangeTimeout);\n            }\n            rangeChangeTimeout = setTimeout(\n              () => onRangeChange(ev.min, ev.max),\n              500,\n            );\n          }\n        },\n      },\n      labels: {\n        rotation: -45,\n      },\n      ordinal: false,\n      type: 'datetime',\n    },\n    yAxis: {\n      tickInterval: unitConfig.fromMmolL(0.5),\n      title: {\n        text: '',\n      },\n    },\n  };\n}\n\nfunction createHighchartsOptionsForDay(\n  timezone: string,\n  data: [number, number][],\n  unitConfig: UnitConfig,\n  xMinMax: { min: number; max: number },\n  yMinMax: {\n    min: number;\n    max: number;\n  },\n): Highcharts.Options {\n  const values = data.map((p) => p[1]);\n  const dayMax = Math.max(...values);\n  const dayAvg =\n    values.length > 0\n      ? truncateNumber(values.reduce((acc, v) => acc + v, 0) / values.length)\n      : undefined;\n  const dayMin = Math.min(...values);\n\n  const lower = truncateNumber(unitConfig.fromMmolL(aboveThresholdTarget));\n  const upper = truncateNumber(unitConfig.fromMmolL(belowThresholdTarget));\n\n  const { timeInRange: timeExposed } = calculateTimeInRange(data, {\n    lower: unitConfig.fromMmolL(aboveThresholdTarget),\n  });\n  const { effectiveDuration, timeInRange } = calculateTimeInRange(data, {\n    upper: unitConfig.fromMmolL(belowThresholdTarget),\n  });\n  const timeInRangePct =\n    effectiveDuration > 0 ? timeInRange / effectiveDuration : 1;\n\n  const labels: Highcharts.SVGElement[] = [];\n\n  return {\n    chart: {\n      events: {\n        render() {\n          labels.forEach((l) => l.destroy());\n          labels.length = 0;\n\n          const chartPaddingTop = 28.5;\n          const lineHeight = 18.5;\n          const labelX = 45;\n          const valueX = labelX + 132;\n\n          const attrs = {\n            fill: '#999',\n            zIndex: 1,\n          };\n\n          if (dayAvg !== undefined && dayMax !== undefined) {\n            const tirLabel = this.renderer\n              .text(`TIME IN RANGE (< ${upper}):`, 0)\n              .add();\n            tirLabel.attr({\n              ...attrs,\n              x: labelX,\n              y: chartPaddingTop,\n            });\n            const tirValue = this.renderer\n              .text(\n                `<b>${Math.floor(timeInRangePct * 100)}%</b> (${moment\n                  .duration(timeInRange, 'milliseconds')\n                  .format(() =>\n                    timeInRange > 60 * 60 * 1000 ? 'h[h] m[m]' : 'm[m]',\n                  )})`,\n                0,\n              )\n              .add();\n            tirValue.attr({\n              ...attrs,\n              x: valueX,\n              y: chartPaddingTop,\n            });\n\n            const maxLabel = this.renderer.text('GLUCOSE PEAK:', 0).add();\n            maxLabel.attr({\n              ...attrs,\n              x: labelX,\n              y: chartPaddingTop + lineHeight,\n            });\n            const maxValue = this.renderer.text(`<b>${dayMax}</b>`, 0).add();\n            maxValue.attr({\n              ...attrs,\n              x: valueX,\n              y: chartPaddingTop + lineHeight,\n            });\n\n            const avgLabel = this.renderer.text('AVERAGE GLUCOSE:', 0).add();\n            avgLabel.attr({\n              ...attrs,\n              x: labelX,\n              y: chartPaddingTop + lineHeight * 2,\n            });\n            const avgValue = this.renderer.text(`<b>${dayAvg}</b>`, 0).add();\n            avgValue.attr({\n              ...attrs,\n              x: valueX,\n              y: chartPaddingTop + lineHeight * 2,\n            });\n\n            const teLabel = this.renderer\n              .text(`TIME EXPOSED (> ${lower}):`, 0)\n              .add();\n            teLabel.attr({\n              ...attrs,\n              x: labelX,\n              y: chartPaddingTop + lineHeight * 3,\n            });\n\n            const teValue = this.renderer\n              .text(\n                `<b>${moment\n                  .duration(timeExposed, 'milliseconds')\n                  .format(() =>\n                    timeExposed > 60 * 60 * 1000 ? 'h[h] m[m]' : 'm[m]',\n                  )}</b>`,\n                0,\n              )\n              .add();\n            teValue.attr({\n              ...attrs,\n              x: valueX,\n              y: chartPaddingTop + lineHeight * 3,\n            });\n\n            labels.push(\n              maxLabel,\n              maxValue,\n              avgLabel,\n              avgValue,\n              teLabel,\n              teValue,\n            );\n          }\n        },\n      },\n      height: 225,\n      margin: [15, 0, 30, 40],\n      style: {\n        fontFamily: 'Poppins',\n      },\n      type: 'spline',\n    },\n    credits: {\n      enabled: false,\n    },\n    exporting: {\n      buttons: {\n        contextButton: {\n          enabled: false,\n        },\n      },\n    },\n    legend: {\n      enabled: false,\n    },\n    plotOptions: {\n      series: {\n        gapSize: 30 * 60 * 1000,\n        gapUnit: 'value',\n        marker: {\n          enabled: true,\n          radius: 2,\n        },\n        zones: [\n          {\n            color: '#CCC',\n            value: unitConfig.fromMmolL(4.1),\n          },\n          {\n            color: 'rgba(65, 165, 105, 1)',\n            value: unitConfig.fromMmolL(6.1),\n          },\n          {\n            color: 'orange',\n            value: unitConfig.fromMmolL(7.8),\n          },\n          {\n            color: 'rgba(255, 102, 102, 1)',\n          },\n        ],\n      },\n    },\n    series: [\n      {\n        data,\n        name: unitConfig.label,\n        type: 'spline',\n      },\n    ],\n    time: {\n      moment,\n      timezone,\n    },\n    title: {\n      text: '',\n    },\n    xAxis: {\n      ...xMinMax,\n      dateTimeLabelFormats: {\n        day: '%H:%M',\n      },\n      type: 'datetime',\n    },\n    yAxis: {\n      ...yMinMax,\n      plotBands: [\n        {\n          color: 'rgba(87, 220, 140, 0.2)',\n          from: unitConfig.fromMmolL(4.1),\n          to: unitConfig.fromMmolL(6),\n        },\n      ],\n      plotLines: _.compact([\n        dayMax !== undefined\n          ? {\n              color: '#aaa',\n              dashStyle: 'Dot',\n              value: dayMax,\n              width: 2,\n              zIndex: 2,\n            }\n          : undefined,\n        {\n          color: 'rgba(65, 165, 105, 1)',\n          dashStyle: 'Dash',\n          value: 5,\n          width: 4,\n          zIndex: 2,\n        },\n        dayMin !== undefined\n          ? {\n              color: '#aaa',\n              dashStyle: 'Dot',\n              value: dayMin,\n              width: 2,\n              zIndex: 2,\n            }\n          : undefined,\n      ]),\n      tickInterval: unitConfig.fromMmolL(0.5),\n      title: {\n        text: '',\n      },\n    },\n  };\n}\n\nfunction calculateTimeInRange(\n  data: [number, number][],\n  { lower = Number.MIN_VALUE, upper = Number.MAX_VALUE } = {},\n): { effectiveDuration: number; timeInRange: number } {\n  return data.reduce(\n    ({ effectiveDuration, timeInRange }, [currTime, currValue], i) => {\n      if (i > 0) {\n        const [prevTime, prevValue] = data[i - 1];\n        const duration = currTime - prevTime;\n        if (duration < 30 * 60 * 1000) {\n          const currValueLimited = Math.min(Math.max(currValue, lower), upper);\n          const prevValueLimited = Math.min(Math.max(prevValue, lower), upper);\n          const areaOfData =\n            (currTime - prevTime) * Math.abs(currValue - prevValue);\n          const areaInRange =\n            (currTime - prevTime) *\n            Math.abs(currValueLimited - prevValueLimited);\n\n          if (areaOfData === 0 && currValueLimited !== currValue) {\n            // prevValue and currValue are the same, and they are not within range. 0 duration\n            return {\n              effectiveDuration: effectiveDuration + duration,\n              timeInRange,\n            };\n          } else if (areaOfData === 0) {\n            // prevValue and currValue are the same, and they are within range. Full duration\n            return {\n              effectiveDuration: effectiveDuration + duration,\n              timeInRange: timeInRange + duration,\n            };\n          } else {\n            // The value is different. The percentage of duration is the percentage of overlap\n            return {\n              effectiveDuration: effectiveDuration + duration,\n              timeInRange: timeInRange + (areaInRange / areaOfData) * duration,\n            };\n          }\n        } else {\n          return { effectiveDuration, timeInRange };\n        }\n      } else {\n        return { effectiveDuration, timeInRange };\n      }\n    },\n    { effectiveDuration: 0, timeInRange: 0 },\n  );\n}\n\nfunction truncateNumber(n: number, maxDecimalPoints = 1) {\n  const mult = 10 * maxDecimalPoints;\n  return Math.floor(n * mult) / mult;\n}\n","import {\n  mdiCalendarRangeOutline,\n  mdiClipboardTextSearchOutline,\n} from '@mdi/js';\nimport Icon from '@mdi/react';\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport { CaseStudies } from './CaseStudies';\nimport { DailyCharts } from './DailyCharts';\n\ntype ReportType = 'daily' | 'caseStudies';\n\nconst Fullscreen = styled.div`\n  align-items: stretch;\n  display: flex;\n  height: 100vh;\n  justify-content: stretch;\n  width: 100vw;\n`;\n\nconst Option = styled.button`\n  align-items: center;\n  background: none;\n  border: none;\n  cursor: pointer;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  padding: 18vh 18vw;\n\n  &:hover {\n    background-color: #eee;\n  }\n`;\n\nconst OptionTitle = styled.h1`\n  font-size: 32px;\n  font-weight: 500;\n  text-align: center;\n`;\n\nexport const ReportSelector: React.FC = () => {\n  const [selectedReport, setSelectedReport] = React.useState<\n    'none' | ReportType\n  >('none');\n  return (() => {\n    switch (selectedReport) {\n      case 'none':\n        return (\n          <Fullscreen>\n            <Option onClick={() => setSelectedReport('daily')}>\n              <Icon path={mdiCalendarRangeOutline} />\n              <OptionTitle>Daily</OptionTitle>\n            </Option>\n            <Option onClick={() => setSelectedReport('caseStudies')}>\n              <Icon path={mdiClipboardTextSearchOutline} />\n              <OptionTitle>Case Studies</OptionTitle>\n            </Option>\n          </Fullscreen>\n        );\n      case 'daily':\n        return (\n          <DailyCharts\n            timezone=\"America/Toronto\"\n            onBack={() => setSelectedReport('none')}\n          />\n        );\n      case 'caseStudies':\n        return (\n          <CaseStudies\n            timezone=\"America/Toronto\"\n            onBack={() => setSelectedReport('none')}\n          />\n        );\n    }\n  })();\n};\n","import React from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\n\nimport { FileDropZone } from './components/FileDropZone';\nimport { ReportSelector } from './components/ReportSelector';\nimport { useObservable } from './hooks/useObservable';\nimport { FileStore, FileStoreContext } from './services/FileStore';\nimport { MetricsStore, MetricsStoreContext } from './services/MetricsStore';\n\nconst GlobalStyle = createGlobalStyle`\n  /* Global reset to remove all browser styling. */\n  ${reset}\n\n  @page {\n    margin: 0;\n    size: landscape;\n  }\n\n  html,\n  body,\n  #root {\n    height: 100%;\n    width: 100%;\n  }\n\n  body {\n    font-family: 'Poppins', 'Roboto', 'Helvetica Neue', sans-serif;\n  }\n\n  @media print {\n    .highcharts-data-table {\n      display: none !important;\n    }\n\n    .no-print {\n      display: none !important;\n    }\n  }\n`;\n\nconst Fullscreen = styled.div`\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  min-height: 100%;\n  position: absolute;\n  min-width: 100%;\n`;\n\nexport type AppProps = {\n  dataUrl: string | undefined;\n};\n\nconst App: React.FC<AppProps> = ({ dataUrl }) => {\n  const [fileStore] = React.useState(() => new FileStore());\n  const [metricsStore] = React.useState(() => new MetricsStore(fileStore));\n  const [csvFiles] = useObservable(\n    () => fileStore.filesByType$('csv'),\n    [fileStore],\n    [],\n  );\n\n  React.useEffect(() => {\n    if (dataUrl !== undefined) {\n      void (async () => {\n        const { files } = await fileStore.preProcessUrl(dataUrl);\n        await fileStore.acceptFiles(files);\n      })();\n    }\n  }, [dataUrl, fileStore]);\n\n  return (\n    <>\n      <GlobalStyle />\n      <FileStoreContext.Provider value={fileStore}>\n        <MetricsStoreContext.Provider value={metricsStore}>\n          <FileDropZone>\n            {csvFiles.length > 0 ? (\n              <ReportSelector />\n            ) : dataUrl === undefined ? (\n              <Fullscreen>\n                <span>\n                  Drag and drop a Blood Glucose CSV file to view charts.\n                </span>\n              </Fullscreen>\n            ) : (\n              <Fullscreen>\n                <span>Downloading data...</span>\n              </Fullscreen>\n            )}\n          </FileDropZone>\n        </MetricsStoreContext.Provider>\n      </FileStoreContext.Provider>\n    </>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    void import('web-vitals').then(\n      ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n        getCLS(onPerfEntry);\n        getFID(onPerfEntry);\n        getFCP(onPerfEntry);\n        getLCP(onPerfEntry);\n        getTTFB(onPerfEntry);\n      },\n    );\n  }\n};\n\nexport default reportWebVitals;\n","import * as Highcharts from 'highcharts';\nimport brokenAxis from 'highcharts/modules/broken-axis';\nimport exportData from 'highcharts/modules/export-data';\nimport exporting from 'highcharts/modules/exporting';\n\nimport 'moment-duration-format';\n\n/** React date range styles. */\nimport 'react-date-range/dist/styles.css';\nimport 'react-date-range/dist/theme/default.css';\n\n/** Highcharts setup. */\nbrokenAxis(Highcharts);\nexporting(Highcharts);\nexportData(Highcharts);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport './setupVendorLibraries';\n\nconst qs = new URLSearchParams(window.location.search);\nconst dataUrl = qs.get('dataUrl');\n\nReactDOM.render(\n  <React.StrictMode>\n    <App dataUrl={typeof dataUrl === 'string' ? dataUrl : undefined} />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}